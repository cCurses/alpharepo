#!/bin/bash
#+ marker sof +#

# move-window v20XX.YY.ZZ

# Copyright (C) 2019
# Erik Jan Tromp <alphageek@slackware.com>
# Licensed under the GPL v2

# concept:
# - move selected window to desired position on desktop

# known bugs:
# - attempting to move tint2 in permissive mode succeeds (sort of), but when
#   specifying "-c same", the taskbar is truncated to whatever reserved space
#   is calculated from the combination of $_NET_DESKTOP_GEOMETRY_CARDINAL &
#   $_NET_WORKAREA_CARDINAL
# > current solutions:
# 1 don't do that
# 2 use tint2's "reload config" option to put things back as they were
# 3 assuming you run tint2 the full width of the display, use move-window's
#   "-c" option appropriately (ie: if the taskbar is on the bottom of the
#   display, use any of "-c bl", "-c bc", or "-c br") along with "-o" & "-p"

# NOTE: (to self)
# - these might be useful to fix/prevent the problem dealing with tint2
#   detailed above:
# $_NET_WM_STATE_ATOM: "_NET_WM_STATE_SKIP_TASKBAR _NET_WM_STATE_SKIP_PAGER _NET_WM_STATE_ABOVE"

# NOTE:
# - additional information acquired from:
#   https://specifications.freedesktop.org/wm-spec/wm-spec-latest.html

# TODO:
# - there are a small number of _NET_* properties mentioned in the freedesktop
#   specification that lack information suitable for me to come up with syntax
#   appropriate for calling sed. as such, they're not displayed (for now)

# OOPS:
# - changelog order is unpredictable. some series of entries per date are
#   chronologically top-to-bottom while others are bottom-to-top. preferred
#   order is bottom-to-top. this will gradually be fixed when time permits

# IDEA:
# - allow for fractional coordinates. ie: (X,Y) of (2/5,3/7)
# - "function _coordinates_user_specified" can be in charge of this
# > numerator of 0 is a special case. skip any calculations & simpy use "0"
# > numerator must be less than denominator. 7/7 is a no-no. 6/7 is ok
# > no decimal points. strictly [0-9]

# IDEA:
# (in progress)
# - "-l, --list" to list all windows that can be moved. or possibly list all,
#   but have unmovable windows flagged in some fashion. ie: (unmovable)
# - _BOOLEAN_LIST (new)
# - _NET_CLIENT_LIST_WINDOW (already exists)
# - interesting discovery: the openbox dock is not listed in
#   $_NET_CLIENT_LIST_WINDOW

# (pending)
# - "-n <Window Name>, --window-name <Window Name>" for an alternate method of
#   identifying a window
# - since we're using bash, regex's are possible. somehow figure out how to
#   pass "partially quoted" strings on the commandline in such a way that the
#   string is passed unmodified to a test formatted as "[[ foo =~ bar ]]"
# - "-id <Window ID>, --window-id <Window ID>" is currently the only method
#   available for identifying a window
# - _OPTION_WINDOW_NAME (new)
# - _NET_WM_NAME_UTF8_STRING (already exists)
# - start simple. 1st up: simple case-sensitive substring match
# > idea for glob support (as used in one of my private scripts) that will
#   pass globs unmodified by the shell to the script itself:
# - magical "set -o noglob" & "set +o noglob" to the rescue \o/

#+ testing +#
# - along with the (3x3) coordinates, added the following for testing:
# - (5x5) coordinates. A to E across, A to E down
# - (9x9) coordinates. A to I across. 1 to 9 down
# ^ they deliberately overlap, so there are only 81 coordinates in total
# - I want/need to see a pattern in how the coordinates are generated so that
#   fractional coordinates can be implemented. ie: (X,Y) of (2/5,3/7)
# - why odd numbers? so the "new" values are inserted between the "old" values
#- testing -#

# 20XX-YY-ZZ

# TODO:
# - figure out a different method of doing calculations regarding window size
#   & placement from "xwininfo" output. excerpts of interesting stuff at the
#   end of the script
# - accidently figured this out already while doing other things
# - "function _get_window_geometry" provides the origin (X,Y) as
#   $_WINDOW_DECORATED_UPPER_LEFT_X & $_WINDOW_DECORATED_UPPER_LEFT_Y

# IDEA:
# - allow windows to be "nudged" by a relative offset of pixels. +/- format
# - this will require a complete rethink of how "-1" is handled
# - at present, both the wmctrl binary & this script use "-1" as a null
#   coordinate
# - alter the script (only) to use "-0" as a null coordinate. this will allow
#   all the required calculations to be done (including nudging X or Y by
#   "-1") then pass the real coordinates to wmctrl at the very last stage

# more below tagged as "#+ marker -0 +#"

#+
# - independent of everything above & below ..

# IDEA:
# - as the script is right now, user specified coordinates that lie within
#   desktop limits remain unmodified. only those coordinates that lie outside
#   desktop limits require the use of "-o, --overall". change whatever needs
#   changing so the dynamic limits are explicitly used for everything
# > "function _coordinates_user_specified" here?
# > "function _coordinates_validate" or here?
# ^ maybe both?
# - base (X,Y) coordinates on the dynamic workarea geometry
# - simply prepend the tests &/or calculations with $_DYNAMIC_WORKAREA_X &/or
#   $_DYNAMIC_WORKAREA_Y as appropriate
#-

#+#

#+ marker -0 +#
# - the TODO & IDEA (further above) combined .. add/subtract as required

# - perhaps using "-0" as the null coordinate is the better approach
# - separate function or part of "function _set_window_position"?
# - separate functions may be a better idea. they can contain not only the
#   calculations required to "nudge" the specified window, but also the
#   "-0"/"-1" translations. more reasons: "function _set_window_position" is
#   already rather overloaded & these changes are thematically quite different
# - possibly 2 functions called rather far apart. more ideas below

# - setting up everything that looks obvious, but keeping the changes #'d out
#   for now
#   (needs attention. get)
# > "function _coordinates_preset" # =-1 #+ (3x3) +# ( same )
# > "function _coordinates_preset" # =-1 #+ (3x3) (5x5) (9x9) +# ( same )
# > "function _coordinates_kludge" # -ne -1
# > "function _coordinates_user_specified" # =-1 # with ,-1 comments
# > "function _coordinates_validate" # -ne -1 #+ force to fits +# (1/4 & 3/4) # with -1 comments
# > "function _coordinates_validate" # =-1 #+ tweaks +# (1/2 & 2/2)
#   (needs attention. set)

# - details are (possibly) a bit mixed up here
# > "function _coordinates_calculate" < this name is now available
# > "function _coordinates_manipulate" create this new function. 2 purposes
# - 1st: translate all "-0" to "-1" for wmctrl's end use
# - 2nd: perform calculations required to "nudge" the specified window
# - example usage: starting coordinates of "(500,500)", issue "-c -73,+56" on
#   the commandline, result: wmctrl gets "(427,556)"

# - it appears this should be called before "function _coordinates_validate"
#   so out-of-range values are properly dealt with

# - details are (possibly) a bit mixed up here
# - possibly 2 functions?
# > "function _coordinates_calculate" < 1st
# > "function _coordinates_manipulate" < 2nd
# - 1st: called somewhere before "function _coordinates_validate" to perform
#   calculations required to "nudge" the specified window & then deal with
#   out-of-range values. simple "$(())" stuff
# - 2nd: called immediately before "function _set_window_position" to
#   translate all "-0" to "-1" for wmctrl's end use
# - keep everything separated in their own function(s) so extensive testing
#   can be done

# - known limitation of this method:
# - there will be a 1 pixel strip along the left border & another along the
#   top border that cannot be reached because their end coordinates would be
#   (X,Y) of (-1,Y) & (X,-1), respectively. the binary can be patched easily
#   enough, but I strongly prefer avoiding such tactics
# - untested, but this might not even matter. such coordinates *might* not be
#   reachable anyway. I'l test later
#- marker -0 -#

#-#

# (testing)
# - "function _coordinates_preset" (both versions) &
#   "function _coordinates_validate" share identical calculations for the 4
#   corners. so: using the forms laid out in "function _coordinates_preset"
#   (9x9) (note: the (3x3) forms are available as examples as well) in
#   "function _coordinates_validate" section #+ force to fits +# for
#   predictability & ease of editing later
# > look for #+ marker 4 +# / #- marker 4 -#

# (pending)
# - changed "2>&1" to "2>/dev/null" on many (but not all) invocations of
#   "xprop" & "xwininfo" because preserving stderr is explicitly undesirable
#   in certain situations

#+

# > what there is now:

# - "2>&1" form in the following functions:

#   function _binary_validate_setup()
#     _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
#     _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
#   function _builtin_validate_setup()
#     _BUILTIN_HELP=$(echo $(help $_BUILTIN_NAME 2>&1))
#   function _coordinates_force()
#       _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)
#   function _get_window_geometry()
#     _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)
#   function _get_window_id()
#     _OUTPUT_XWININFO_ID=$(xwininfo 2>&1)
#     _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)
#   function _get_window_list()
#       _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)
#   function _parse_parameters()
#     _OUTPUT_XPROP_ROOT=$(xprop -root 2>&1)

# - "2>/dev/null" form in the following functions:

#   function _pass_fail_by_window_id()
#     _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>/dev/null)

##

# > what there should be:

# - "2>&1" form in the following functions:
#   function _binary_validate_setup()
#     _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))			correct. preserves stdout. preserves stderr
#     _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))			correct. preserves stdout. preserves stderr
#   function _builtin_validate_setup()
#     _BUILTIN_HELP=$(echo $(help $_BUILTIN_NAME 2>&1))			correct. preserves stdout. preserves stderr
#   function _coordinates_force()
#       _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)	incomplete. requires additional error checking
#   function _get_window_geometry()
#     _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)	incomplete. requires additional error checking
#   function _get_window_id()
#     _OUTPUT_XWININFO_ID=$(xwininfo 2>&1)				incomplete? requires additional error checking
#     _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)		incomplete. requires additional error checking
#   function _get_window_list()
#       _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)		incomplete. requires additional error checking. rudimentary attempt already in place
#   function _parse_parameters()
#     _OUTPUT_XPROP_ROOT=$(xprop -root 2>&1)				incomplete. requires additional error checking. rudimentary attempt already in place

# - "2>/dev/null" form in the following functions:

#   function _pass_fail_by_window_id()
#     _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>/dev/null)	correct. preserves stdout. discards stderr

#-

# (done)
# - "function _get_window_geometry" changed the following lines:
#   (testing) (might keep it, might change the "()" text)
#  was: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_X: \""$_WINDOW_DECORATED_UPPER_LEFT_X\""
#  was: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_Y: \""$_WINDOW_DECORATED_UPPER_LEFT_Y\""
#   is: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_X: \""$_WINDOW_DECORATED_UPPER_LEFT_X\" (current X)"
#   is: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_Y: \""$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current Y)"

# (done)
# - "function _set_window_position" changed the following lines:
#   (testing) (might keep it, might change the "()" text)
#  was: _eko_ps "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\""
#  was: _eko_pv "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\""
#   is: _eko_ps "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current)"
#   is: _eko_pv "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current)"
#  was: _eko_ps "new coordinates (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\""
#  was: _eko_pv "new coordinates (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\""
#   is: _eko_ps "window decorated position (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\" (desired)"
#   is: _eko_pv "window decorated position (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\" (desired)"

# (done)
# - reverted the renaming of the following variables globally since they refer
#   more to (X,Y) position than to (W,H) size
#  was: _BOOLEAN_MAXIMIZED_W
#  was: _BOOLEAN_MAXIMIZED_H
#   is: _BOOLEAN_MAXIMIZED_X
#   is: _BOOLEAN_MAXIMIZED_Y

# (done)
# - "function _coordinates_calculate" renamed globally to
#   "function _coordinates_preset" for clarity & uniformity
# ^ everywhere *except* the changelog immediately below

# (done)
# - "function _window_id_acquire" renamed globally to
#   "function _get_window_id" for clarity & uniformity
# ^ everywhere *except* the changelog immediately below

# (done)
# - "function _get_window_undecorated_geometry" renamed globally to
#   "function _get_window_geometry" for clarity & uniformity
# ^ everywhere *except* the changelog immediately below

# 2019-12-19
# - NOTE: (absolutely "eureka moment" level of importance!)
# - it's blindingly obvious in hindsight, but perform absolutely *every*
#   calculation from the base (X,Y) coordinate of (0,0). from there everything
#   simply falls into place
# - "functions:/variables:/binaries:/builtins:" listings for each function
#   updated & verified. also updated the master "use & abuse" listings based
#   on this information
# - inspected/updated *everything* for proper indentation
# - updated numerous #'d comments throughout the script for accuracy
# - "function _eko_ps" & "function _eko_ps_en" changed the following line:
#  was: printf "%34s " "$1"
#   is: printf "%36s " "$1"
# - "function _set_window_position" added the following lines:
#  add: _eko_ps "dynamic workarea geometry (X,Y,W,H):" \""$_DYNAMIC_WORKAREA_X,$_DYNAMIC_WORKAREA_Y,$_DYNAMIC_WORKAREA_W,$_DYNAMIC_WORKAREA_H\" ($_DYNAMIC_TYPE)"
#  add: _eko_pv "dynamic workarea geometry (X,Y,W,H):" \""$_DYNAMIC_WORKAREA_X,$_DYNAMIC_WORKAREA_Y,$_DYNAMIC_WORKAREA_W,$_DYNAMIC_WORKAREA_H\" ($_DYNAMIC_TYPE)"
# - "function _set_window_position" changed the following lines:
#  was: _eko_ps "workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
#  was: _eko_pv "workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
#   is: _eko_ps "static workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
#   is: _eko_pv "static workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
# - "function _set_window_position" removed the following lines:
#  rem: _eko_ps "workarea borders (L,T,R,B):" \""$_WORKAREA_BORDER_L,$_WORKAREA_BORDER_T,$_WORKAREA_BORDER_R,$_WORKAREA_BORDER_B\""
#  rem: _eko_pv "workarea borders (L,T,R,B):" \""$_WORKAREA_BORDER_L,$_WORKAREA_BORDER_T,$_WORKAREA_BORDER_R,$_WORKAREA_BORDER_B\""
# - "function _coordinates_calculate" with (3x3) presets completely rewritten
#   to use $_DYNAMIC_WORKAREA_X, $_DYNAMIC_WORKAREA_Y, $_DYNAMIC_WORKAREA_W, &
#   $_DYNAMIC_WORKAREA_H in all calculations
# - "function _coordinates_calculate" with (3x3) (5x5) (9x9) presets
#   completely rewritten to use $_DYNAMIC_WORKAREA_X, $_DYNAMIC_WORKAREA_Y,
#   $_DYNAMIC_WORKAREA_W, & $_DYNAMIC_WORKAREA_H in all calculations
# - "function _coordinates_validate" section "force to fit" completely
#   rewritten to use $_DYNAMIC_WORKAREA_X, $_DYNAMIC_WORKAREA_Y,
#   $_DYNAMIC_WORKAREA_W, & $_DYNAMIC_WORKAREA_H in all calculations
# - "function _get_net_workarea_cardinal" added the following lines:
#  add: if $_BOOLEAN_OVERALL
#  add: then
#  add:   _DYNAMIC_TYPE=overall
#  add:   _DYNAMIC_WORKAREA_X=0
#  add:   _DYNAMIC_WORKAREA_Y=0
#  add:   _DYNAMIC_WORKAREA_W=$_NET_DESKTOP_GEOMETRY_W
#  add:   _DYNAMIC_WORKAREA_H=$_NET_DESKTOP_GEOMETRY_H
#  add: else
#  add:   _DYNAMIC_TYPE=desktop
#  add:   _DYNAMIC_WORKAREA_X=$_NET_WORKAREA_X
#  add:   _DYNAMIC_WORKAREA_Y=$_NET_WORKAREA_Y
#  add:   _DYNAMIC_WORKAREA_W=$_NET_WORKAREA_W
#  add:   _DYNAMIC_WORKAREA_H=$_NET_WORKAREA_H
#  add: fi
# - "function _set_window_position" changed the following lines:
#  was: if [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
#   is: if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
#   is: || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
# - reason: regular dockapps (ie: tint2, xfce4-panel) show correctly as being
#   on all desktops. without this change the openbox dock shows incorrectly as
#   being on the first desktop only
# - "function _get_net_client_list_window" changed the following line:
#  was: _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\" (embedded)"
#   is: _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\""
# - "function _parse_parameters" added the following line:
#   (immediately preceding the $_BOOLEAN_FORCE stanza of the conditional)
#  add: _get_net_client_list_window
# - "function _parse_parameters" removed the following lines:
#   (from the $_BOOLEAN_FORCE & $_BOOLEAN_LIST stanzas of the conditional)
#  rem: _get_net_client_list_window
# 2019-12-05
# - "functions:/variables:/binaries:/builtins:" listings for each function
#   updated & verified. also updated the "use & abuse" listings based on this
#   information
# - "function _pass_fail_by_window_type_old" removed
# - removed all comments in #+ marker sed syntax +# / #- marker sed syntax -#
#   again. this time they'll stay removed
# - renamed the following variables globally since they refer to (W,H) size
#   not (X,Y) position
#  was: _BOOLEAN_MAXIMIZED_X
#  was: _BOOLEAN_MAXIMIZED_Y
#   is: _BOOLEAN_MAXIMIZED_W
#   is: _BOOLEAN_MAXIMIZED_H
#  was: _WINDOW_DECORATED_X
#  was: _WINDOW_DECORATED_Y
#   is: _WINDOW_DECORATED_W
#   is: _WINDOW_DECORATED_H
#  was: _WINDOW_UNDECORATED_X
#  was: _WINDOW_UNDECORATED_Y
#   is: _WINDOW_UNDECORATED_W
#   is: _WINDOW_UNDECORATED_H
# - reordered the display from (L,R,T,B) to (L,T,R,B) for uniformity in the
#   following functions:
#   "function _get_net_frame_extents_cardinal"
#   "function _get_net_wm_strut_cardinal"
#   "function _get_net_wm_strut_partial_cardinal"
# - "function _parse_parameters" added the following lines:
#   (to the $_BOOLEAN_FORCE stanza of the conditional)
#  add: _get_net_client_list_window
#  add: _get_net_desktop_geometry_cardinal
# - "function _coordinates_force" removed the following lines:
#  rem: _get_net_client_list_window
#  rem: _get_net_desktop_geometry_cardinal
# - "function _parse_parameters" added the following line:
#   (to the $_BOOLEAN_LIST stanza of the conditional)
#  add: _get_net_client_list_window
# - "function _get_window_list" removed the following line:
#  rem: _get_net_client_list_window
# - "function _get_net_current_desktop_cardinal" is now called from unused,
#   even though it's something of a misnomer - it's called directly when
#   $_NET_WM_DESKTOP_CARDINAL is "" (openbox dock) or when
#   $_NET_WM_DESKTOP_CARDINAL is "4294967295" (sticky window)
# - "function _get_net_current_desktop_cardinal" changed the following line:
#  was: _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\" (fallback)"
#   is: _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\" (embedded)"
# - "function _get_net_wm_desktop_cardinal" added the following line to the
#   conditional when $_NET_WM_DESKTOP_CARDINAL is "" (openbox dock) or when
#   $_NET_WM_DESKTOP_CARDINAL is "4294967295" (sticky window):
#  add: _get_net_current_desktop_cardinal
# - "function _parse_parameters" removed the following line:
#  rem: _get_net_current_desktop_cardinal
# - "function _get_net_wm_window_type_atom" moved from unused to main
# - "function _get_net_wm_window_type_atom" changed the following line:
#  was: _eko_pv \$_NET_WM_WINDOW_TYPE_ATOM: \""$_NET_WM_WINDOW_TYPE_ATOM\" (unused)"
#   is: _eko_pv \$_NET_WM_WINDOW_TYPE_ATOM: \""$_NET_WM_WINDOW_TYPE_ATOM\""
# - "function _set_window_position" several changes as follows:
# - reordered the output into 4 groups: window information, desktop
#   information, window calculations, desktop calculations
# - added (L,T,R,B), (W,H), & (X,Y) tags as appropriate (for clarity)
# - "function _get_net_desktop_viewport_cardinal" &
#   "function _get_net_workarea_cardinal" altered how "function _sub_function"
#   in each is handled. they now do the absolute minimum & the parent function
#   does the heavy lifting. sub-functions are required because "shift" only
#   works with "@", not "$_FOO" (disclaimer: "to the best of my knowledge")
# 2019-11-29
# - "function _eko_ps" & "function _eko_ps_en" changed the following line:
#  was: printf "%29s " "$1"
#   is: printf "%34s " "$1"
# - "function _set_window_position" assorted edits for clarity & to include
#   _WINDOW_DECORATED_UPPER_LEFT_X & _WINDOW_DECORATED_UPPER_LEFT_X as well as
#   _WINDOW_UNDECORATED_UPPER_LEFT_X & _WINDOW_UNDECORATED_UPPER_LEFT_X in the
#   stdout & verbose reports
# - "function _get_window_undecorated_geometry" changed the following lines:
#  add: _WINDOW_UNDECORATED_UPPER_LEFT_X \
#  add: _WINDOW_UNDECORATED_UPPER_LEFT_Y \
#  was: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3/g')
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Absolute upper-left X: \(.*\) Absolute upper-left Y: \(.*\) Relative upper-left X:.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3 \4 \5/g')
#  add: _eko_pv \$_WINDOW_UNDECORATED_UPPER_LEFT_X: \""$_WINDOW_UNDECORATED_UPPER_LEFT_X\""
#  add: _eko_pv \$_WINDOW_UNDECORATED_UPPER_LEFT_Y: \""$_WINDOW_UNDECORATED_UPPER_LEFT_Y\""
#  was: _WINDOW_DECORATED_X=$(( $_WINDOW_BORDER_WIDTH + $_NET_FRAME_EXTENTS_L + $_WINDOW_UNDECORATED_X + $_NET_FRAME_EXTENTS_R + $_WINDOW_BORDER_WIDTH ))
#   is: _WINDOW_DECORATED_X=$(( $_WINDOW_UNDECORATED_X + $_NET_FRAME_EXTENTS_L + $_NET_FRAME_EXTENTS_R + $_WINDOW_BORDER_WIDTH * 2 ))
#  was: _WINDOW_DECORATED_Y=$(( $_WINDOW_BORDER_WIDTH + $_NET_FRAME_EXTENTS_T + $_WINDOW_UNDECORATED_Y + $_NET_FRAME_EXTENTS_B + $_WINDOW_BORDER_WIDTH ))
#   is: _WINDOW_DECORATED_Y=$(( $_WINDOW_UNDECORATED_Y + $_NET_FRAME_EXTENTS_T + $_NET_FRAME_EXTENTS_B + $_WINDOW_BORDER_WIDTH * 2 ))
#  add: _WINDOW_DECORATED_UPPER_LEFT_X=$(( $_WINDOW_UNDECORATED_UPPER_LEFT_X - $_NET_FRAME_EXTENTS_L ))
#  add: _WINDOW_DECORATED_UPPER_LEFT_Y=$(( $_WINDOW_UNDECORATED_UPPER_LEFT_Y - $_NET_FRAME_EXTENTS_T ))
#  add: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_X: \""$_WINDOW_DECORATED_UPPER_LEFT_X\""
#  add: _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_Y: \""$_WINDOW_DECORATED_UPPER_LEFT_Y\""
# - "function _get_net_client_list_window" is now called from unused, even
#   though it's something of a misnomer - it's called directly when
#   "-f, --force" or "-l, --list" are specified
# - "function _get_net_client_list_window" changed the following line:
#  was: _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\""
#   is: _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\" (embedded)"
# - "function _parse_parameters" added "-l, --list" option
# - "function _get_window_list" added
# - rearranged calls to the following functions from unused to main:
#   "function _get_net_desktop_names_utf8_string"
#   "function _get_net_desktop_viewport_cardinal"
#   "function _get_net_wm_desktop_cardinal"
# - fixed the crash that would occur when attempting to move the openbox dock
#   in permissive mode. wmctrl does not provide an exit code reflecting the
#   failure (under all circumstances, the exit code is "0"), so there is no
#   way to trap & report it
# 2019-11-25
# - "function _get_net_current_desktop_cardinal" changed the following line:
#  was: _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\" (unused)"
#   is: _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\" (fallback)"
# 2019-11-24
# - "function _get_net_desktop_viewport_cardinal" changed the following lines:
# - "function _sub_function" more accurately, changed the lines here:
#  was: shift $(( $_NET_WM_DESKTOP_CARDINAL * 2 ))
#   is: if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
#   is: || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
#   is: then
#   is:   shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 2 ))
#   is: else
#   is:   shift $(( $_NET_WM_DESKTOP_CARDINAL * 2 ))
#   is: fi
# 2019-11-24
# - "function _get_net_workarea_cardinal" changed the following lines:
# - "function _sub_function" more accurately, changed the lines here:
#  was: shift $(( $_NET_WM_DESKTOP_CARDINAL * 4 ))
#   is: if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
#   is: || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
#   is: then
#   is:   shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 4 ))
#   is: else
#   is:   shift $(( $_NET_WM_DESKTOP_CARDINAL * 4 ))
#   is: fi
# 2019-11-24
# - "function _get_net_wm_desktop_cardinal" changed the following lines:
#  was: _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\""
#   is: if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
#   is: || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
#   is: then
#   is:   _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\" (using \"$_NET_CURRENT_DESKTOP_CARDINAL\")"
#   is: else
#   is:   _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\""
#   is: fi
# 2019-11-18
# - comment cleanup
# - moved another large block of assorted notes to the very end of the script
#   for future reference
# 2019-11-07
# - "function _pass_fail_by_window_id" removed the following lines:
#  rem: # - 3rd step: verify it by its type
#  rem: _pass_fail_by_window_type
# - "function _pass_fail_by_window_type" converted the lengthy & complex
#   if/then/elif/then/fi construct to a much simpler case/esac construct
# - "function _pass_fail_by_window_type_old" retained as a reference
# - so apparently "_NET_WM_STATE_STAYS_ON_TOP, ATOM" exists (qt specific)
#   re: https://cep.xray.aps.anl.gov/software/qt4-x11-4.8.6-browser/d2/dfc/namespace_q_xcb_atom.html
# - "function _get_net_wm_state_atom" added the following line:
#  add: #   _NET_WM_STATE_STAYS_ON_TOP, ATOM (qt specific)
# - "function _set_window_position" added the following lines:
#  add: #   _NET_WM_STATE_STAYS_ON_TOP, ATOM (qt specific)
#  add: ( *_NET_WM_STATE_STAYS_ON_TOP* )
#  add:   _HUMAN_READABLE_WM_STATE_ATOM+=", stays on top"
#  add: ;;&
# 2019-11-06
# - comment cleanup throughout the script
# - "function _parse_parameters" removed the following lines:
#  rem: # - assign default value if unset
#  rem: # - ${parameter:=word}
#  rem: _OUTPUT_XPROP_ID=${_OUTPUT_XPROP_ID:=$(xprop -id $_OPTION_WINDOW_ID 2>&1)}
# - "function _pass_fail_by_window_type" removed the following lines:
#  rem: _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)
#  rem: # - "-n string" = true if the length of string is non-zero
#  rem: if [[ -n $_OUTPUT_XPROP_ID ]]
#  rem: then
#  rem: else
#  rem:   _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (does not exist) specified"
#  rem: fi
# - "function _show_help" changed the following line:
#  was: -id <Window ID>   Window ID (in hexadecimal format)
#   is: -id <Window ID>   Window ID (in lowercase hexadecimal format)
# - "function _pass_fail_by_window_id" changed the following lines:
#  was: if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
#  was: then
#  was:   _pass_fail_by_window_type
#  was: fi
#   is: # - 1st step: verify that it at least looks like a valid Window ID
#   is: # - this is technically unnecessary as the test below catches everything
#   is: #   (it doesn't hurt to provide some extra information, though)
#   is: if [[ ! $_OPTION_WINDOW_ID =~ ^0x[0-9a-f]+$ ]]
#   is: then
#   is:   _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (invalid syntax) specified"
#   is: fi
#   is: # - 2nd step: brute force. using $_OPTION_WINDOW_ID (keeping the result),
#   is: #   attempt to acquire _OUTPUT_XPROP_ID. directly test $_OUTPUT_XPROP_ID
#   is: _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>/dev/null)
#   is: # - "-z string" = true if the length of string is zero
#   is: if [[ -z $_OUTPUT_XPROP_ID ]]
#   is: then
#   is:   _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (does not exist) specified"
#   is: fi
#   is: # - 3rd step: verify it by its type
#   is: _pass_fail_by_window_type
# - moved the following routine:
#  mov: # - this is absolutely required for the TigerVNC client
#  mov: # - this must be done after "function _coordinates_validate", but before
#  mov: #   setting up _COMMAND in "function _set_window_position"
#  mov: if [[ $_COORDINATE_X != -1 ]] \
#  mov: && [[ $_COORDINATE_Y != -1 ]]
#  mov: then
#  mov:   # - $((expression))
#  mov:   _COORDINATE_X=$(( $_COORDINATE_X + $_KLUDGE_X ))
#  mov:   _COORDINATE_Y=$(( $_COORDINATE_Y + $_KLUDGE_Y ))
#  mov: fi
# > "function _parse_parameters" from here
# > "function _coordinates_kludge" to here
# - "function _parse_parameters" changed the calling order of some functions:
#  was: _coordinates_kludge
#  was: _coordinates_calculate
#  was: _coordinates_validate
#  was: _set_window_position
#   is: _coordinates_calculate
#   is: _coordinates_validate
#   is: _coordinates_kludge
#   is: _set_window_position
# - "function _get_window_undecorated_geometry" added $_WINDOW_BORDER_WIDTH
#   (aka: "window border width") to the calculations
# - "function _set_window_position" reordered the stdout & verbose reports to
#   properly group window dimensions
# 2019-11-05
# - added the following functions even though their freedesktop definitions
#   are quite vague. Sherlock Holmes to the rescue
# - "function _get_net_virtual_roots_window" added
# - "function _get_net_wm_bypass_compositor_cardinal" added
# - cleanup & improvements including, but not limited to, the following:
# - removed several irrelevant comments
# - added several irrelevant comments
# - "function _set_window_position" wrapped the lengthy case statements in
#   a simple if/then/fi conditional for efficiency (not that it's necessary)
# - "function _set_window_position" reordered the stdout & verbose reports to
#   be thematic rather than random
# 2019-11-04
# - "function _set_window_position" added human-readable output for
#   $_NET_WM_WINDOW_TYPE_ATOM (aka: "window type") to stdout mode
# - "function _set_window_position" added human-readable & raw output for
#   $_NET_WM_STATE_ATOM (aka: "window state") to stdout & verbose modes
# - "function _eko_ps" & "function _eko_ps_en" changed the following line:
#  was: printf "%26s " "$1"
#   is: printf "%29s " "$1"
# - "function _parse_parameters" added "-q, --quiet" option
# - "function _set_window_position" added stdout mode
# - "function _get_window_undecorated_geometry" updated the "old/new" sed
#   syntax notes since there are now 3 variables set (formerly 2)
# - restored the "old/new" sed syntax notes that I'd originally been using
#   in the script, but #'d out. also added appropriate notes for the functions
#   that had been added since 2019-10-19
# - look for #+ marker sed syntax +# / #- marker sed syntax -#
# 2019-11-03
# - added "2>&1" to all invocations of "xprop" & "xwininfo"
# - "function _get_net_wm_window_type_atom" added
# 2019-11-02
# - "function _get_window_undecorated_geometry" changed the following lines:
#  add: _WINDOW_BORDER_WIDTH \
#  was: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*/ s//\1 \2/g')
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3/g')
#  add: _eko_pv \$_WINDOW_BORDER_WIDTH: \""$_WINDOW_BORDER_WIDTH\""
# - "function _set_window_position" changed the following lines:
#  was: _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
#  add: if $_BOOLEAN_UNUSED
#  add: then
#   is:   _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
#  add: fi
#  add: _eko_pv "window border width:" \""$_WINDOW_BORDER_WIDTH\""
# - "function _get_net_frame_extents_cardinal" added the following lines:
#  add: if [[ -z $_NET_FRAME_EXTENTS_CARDINAL ]]
#  add: then
#  add:   _NET_FRAME_EXTENTS_CARDINAL="0 0 0 0"
#  add: fi
# - "function _pass_fail_by_window_type" added $_BOOLEAN_PERMISSIVE test
# - "function _parse_parameters" added "-p, --permissive" option to allow
#   moving (or at least viewing) otherwise unmoveable windows
# - rearranged calls to the following functions to be displayed only when
#   "-u, --unused" is specified:
#   "function _get_net_active_window_window"
#   "function _get_net_desktop_names_utf8_string"
#   "function _get_net_desktop_viewport_cardinal"
#   "function _get_net_number_of_desktops_cardinal"
#   "function _get_net_wm_desktop_cardinal"
# 2019-10-31
# - "function _set_window_position" changed the following lines:
#  add: if [[ $_COORDINATE_X != -1 ]] \
#  add: && [[ $_COORDINATE_Y != -1 ]]
#  add: then
#  add:   _COORDINATE_X=$(( $_COORDINATE_X + $_KLUDGE_X ))
#  add:   _COORDINATE_Y=$(( $_COORDINATE_Y + $_KLUDGE_Y ))
#  add: fi
#  was: _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_COORDINATE_X + $_KLUDGE_X )),$(( $_COORDINATE_Y + $_KLUDGE_Y )),-1,-1"
#   is: _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$_COORDINATE_X,$_COORDINATE_Y,-1,-1"
# 2019-10-25
# - "function _binary_validate_setup" converted "sed", "xprop", & "xwininfo"
#   testing from nested to sequential
# - "function _builtin_validate_setup" converted "read" testing from nested to
#   sequential
# - "function _binary_validate_setup" changed the following lines (xprop):
#  was: #   "-id id" (no long form)
#   is: #   "-id id" (test only for "-id") (no long form)
#  was: _BINARY_OPTION="-id id"
#   is: _BINARY_OPTION=-id
# - "function _binary_validate_setup" changed the following lines (xwininfo):
#  was: #   "-id windowid" (no long form)
#   is: #   "-id windowid" (test only for "-id") (no long form)
#  was: _BINARY_OPTION="-id windowid"
#   is: _BINARY_OPTION=-id
# 2019-10-24
# - "function _binary_validate_setup" added the following lines to "xprop":
#  add: if [[ " $_BINARY_HELP " =~ "unable to open display" ]]
#  add: then
#  add:   _show_error "unable to determine \$DISPLAY &/or \$XAUTHORITY"
#  add: fi
# - added several routines to gather even more information on almost all known
#   _NET_* properties that are mentioned in the freedesktop specification but
#   not seen in openbox. at worst, they'll display as ""
# - "function _get_net_wm_icon_name_utf8_string" added
# - "function _get_net_wm_opaque_region_cardinal" added
# - "function _get_net_wm_pid_cardinal" added
# - "function _get_net_wm_strut_cardinal" added
# - "function _get_net_wm_strut_partial_cardinal" added
# - "function _get_net_wm_sync_request_counter_cardinal" added
# - "function _get_net_wm_user_time_cardinal" added
# - "function _get_net_wm_user_time_window_window" added
# - added comments about _NET_* entities in each function where they're
#   referenced
# - "function _pass_fail_by_window_type" added the complete list of known
#   window types (except _NET_WM_WINDOW_TYPE_NORMAL) to the error testing
# 2019-10-22
# - moved the large block of assorted notes to the very end of the script for
#   future reference
# - "function _pass_fail_by_window_id" when a given window's id fails, call
#   "function _pass_fail_by_window_type" to get a descriptive error message
# - "function _pass_fail_by_window_type" improved tests for kdialog's 2
#   seemingly random modes of creating notification/utility popups. both modes
#   are now properly trapped
# - removed all comments in #+ marker sed syntax +# / #- marker sed syntax -#
# 2019-10-20
# - "function _eko_pv" & "function _eko_pv_en" changed the following line:
#  was: printf "%34s " "$1"
#   is: printf "%39s " "$1"
# - added several routines to gather more information on all known _NET_*
#   properties. to the best of my knowledge they're not really necessary, but
#   they're a good reference
# - "function _get_net_client_list_stacking_window" added
# - "function _get_net_desktop_layout_cardinal" added
# - "function _get_net_showing_desktop_cardinal" added
# - "function _get_net_supported_atom" added
# - "function _get_net_supporting_wm_check_window" added
# - "function _get_net_wm_allowed_actions_atom" added
# - "function _get_net_wm_icon_geometry_cardinal" added
# - "function _get_net_wm_visible_icon_name_utf8_string" added
# - "function _get_net_wm_visible_name_utf8_string" added
# - "_NET_WM_ICON(CARDINAL)" deliberately skipped from this treatment
# - "function _parse_parameters" added "-u, --unused" option
# 2019-10-19
# - experimenting with different sed syntax formats. output is identical
#   between the old & new approaches, but the new approach is technically
#   faster (not that it matters in this script). if nothing else, this is a
#   good reference
# - look for #+ marker sed syntax +# / #- marker sed syntax -#
# - when possible, only the changed sub-expression with a small portion of
#   context is mentioned here for brevity
#  was: 's/.*Corners: \(.*\) -geometry.*/\1/g') # 1 change
#   is: '/.*Corners: \(.*\) -geometry.*/ s//\1/g')
#  was: /!d ; s/.* # //g') # 1 change
#   is: /!d ; /.* # / s///g')
#  was: /!d ; s/.* = //g') # 4 changes
#   is: /!d ; /.* = / s///g')
#  was: /!d ; s/\(.* # \|,\)//g') # 1 change
#   is: /!d ; /\(.* # \|,\)/ s///g')
#  was: /!d ; s/\(.* = \|,\)//g') # 6 changes
#   is: /!d ; /\(.* = \|,\)/ s///g')
#  was: 's/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g') # 1 change
#   is: '/.*Width: \(.*\) Height: \(.*\) Depth:.*/ s//\1 \2/g')
#  was: /!d ; s/\(.*id: \)\|\( .*\)//g') # 1 change
#   is: /!d ; /\(.*id: \)\|\( .*\)/ s///g')
# 2019-10-16
# -  renamed functions globally:
#  was: _eko_pS
#  was: _eko_pS_en
#   is: _eko_ps
#   is: _eko_ps_en
# - "functions:/variables:/binaries:/builtins:" listings for each function
#   updated & verified. also updated the "use & abuse" listings based on this
#   information
# - "function _window_id_acquire" added the following lines:
#  add: _eko_pv_en "select the window to move:" ""
#  add: _eko_pv "" ""
# - "function _eko_pv_en" added
# - "function _coordinates_validate" removed 2 of the 4 "error exits". rely
#    solely on the 4 "force to fits"
# - comment cleanup throughout the script
# 2019-10-11
# - "function _show_help" reordered the options listed so that "-d, --debug",
#   "-v, --verbose", & "-?, -h, --help" are the last options displayed
# - "function _parse_parameters" reordered the options parsed to match what is
#   displayed in "function _show_help" to simplify maintenance
# - "function _eko_S_en" removed
# - changed the following lines globally:
#  was: _eko_S_en "      \$_FOO: \"$_FOO\""
#   is: _eko_pS_en \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S_en "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS_en "Foo Bar:" \""$_FOO\""
# - "function _eko_pS_en" added for properly formatted stdout output
# - "function _eko_S" removed
# - changed the following lines globally:
#  was: _eko_S "      \$_FOO: \"$_FOO\""
#   is: _eko_pS \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS "Foo Bar:" \""$_FOO\""
# - "function _eko_pS" added for properly formatted stdout output
# - "function _eko_v" removed
# - changed the following lines throughout the script:
#  was: _eko_v "      \$_FOO: \"$_FOO\""
#   is: _eko_pv \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_v "      Foo Bar:" \""$_FOO\""
#   is: _eko_pv "Foo Bar:" \""$_FOO\""
# - "function _eko_pv" added for properly formatted verbose output
# - "functions:/variables:/binaries:/builtins:" listings added/appended to
#   each function & in main
# ^ "# builtins:" is to keep track of "echo" &/or "printf" usage. technically
#   speaking, "(none)" is a misnomer as it's only in reference to these 2
#   builtins
# 2019-09-20
# - "function _get_window_undecorated_geometry" altered calling syntax to
#   "echo/sed"
#  was: <<< \
#  was: $(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
#   is: < \
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
# - removed all #'d lines dealing with unnecessary doublequoting
# - NOTE: (to self) refer to the 2019-08-12 savepoint for the "before" version
# - added "--" to all invocations of "read". possibly overkill in a few spots,
#   but better to have too many than too few
# - "function _builtin_validate_setup" added for "read -r"
# 2019-08-12
# - "function _binary_validate_setup" altered _BINARY_HELP assignment & tests
#   for each binary
#  was: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2> /dev/null))
#   is: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
#  was: if [[ -z $_BINARY_HELP ]]
#   is: if [[ $_BINARY_HELP =~ "command not found" ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_BINARY_HELP" " =~ " "$_BINARY_OPTION" " ]]
#   is: if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
# - "function _get_net_wm_state_atom" altered _NET_WM_STATE_ATOM for each test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_HORZ" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_VERT" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
# - "function _pass_fail_by_window_id" altered _NET_CLIENT_LIST_WINDOW test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_NET_CLIENT_LIST_WINDOW" " =~ " "$_OPTION_WINDOW_ID" " ]]
#   is: if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
# - "function _get_net_desktop_names_utf8_string" altered tests so this script
#   can be used with older versions of bash
#  was: # - "-v varname" = true if the shell variable varname is set
#  was: if [[ -v _POSITION_FINISH ]] \
#  was: && [[ -v _POSITION_START ]]
#   is: # - "-n string" = true if the length of string is non-zero
#   is: if [[ -n $_POSITION_FINISH ]] \
#   is: && [[ -n $_POSITION_START ]]
# 2019-07-11
# - additional style changes:
#   (my scripts are already bash specific, so backwards compatibility is not
#   an issue. several ideas are from http://mywiki.wooledge.org/BashFAQ)
#   - naming convention for functions
#   - usage of "[]" vs "[[]]" to evaluate expressions
#   - doublequote variable assignments only when absolutely necessary to avoid
#     typecasting
# 2019-07-10
# - cleanup & improvements including, but not limited to, the following:
# - removed many irrelevant comments
# - style changes. many minor things add up to an overall major improvement
# - "function _eko_iod" simplified & improved
# - "function _coordinates_force_fail" removed
# - "function _eko_d" removed
# - "function _show_error" output to stderr, not stdout
# - "function _binary_validate_setup" added for "sed", "wmctrl", "xprop",
#   "xwininfo"
# - "function _coordinates_user_specified" added some extra magic so "-1" is
#   assumed if not specified (aka: "-c X," & "-c ,Y" are interpreted as
#   "-c X,-1" & "-c -1,Y")
# - "function _parse_parameters" style changes & improvements
# - changed how wmctrl detection/substitution is handled
# - renamed option "-t, --test" to "-D, --dry-run" for uniformity
# - replaced short options with long options for called binaries (sed)
# 2019-05-27
# - assorted edits for clarity
# - "function _coordinates_user_specified" improved coordinate parsing
# - "function _parse_parameters" improved wmctrl detection & substitution
# - "function _parse_parameters" if coordinates aren't specified, default to
#   "same"
# - "function _set_window_position" minor edits to simplify operations
# - "function _coordinates_calculate" minor edits for clarity
# 2019-05-26
# - "function _coordinates_force" added
# 2019-05-25
# - "function _coordinates_calculate" fixed some erroneous calculations
# 2019-05-24
# - first limited release
# 2019-05-18
# - coding begins almost from scratch. using some ideas learned from writing
#   "obx-window"

# TODO:
# - somehow figure out how to get rid of the dependency on wmctrl
# - add support to manipulate currently-in-focus (_NET_ACTIVE_WINDOW_WINDOW)
#   window. (note to self: to do what with it, exactly?)
# ^ have WM bindings to manipulate the currently-in-focus window?

# TODO:
# - do something with this information? (specifically: 4294967295 handling)
#   xprop -id
#   _get_net_wm_desktop_cardinal
#   _NET_WM_DESKTOP_CARDINAL
#   "_NET_WM_DESKTOP(CARDINAL) = "
#   "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
#   "_NET_WM_DESKTOP(CARDINAL) = 0"
#   "_NET_WM_DESKTOP(CARDINAL) = 1"
#   "_NET_WM_DESKTOP(CARDINAL) = 2"
#   "_NET_WM_DESKTOP(CARDINAL) = 3"
#   "_NET_WM_DESKTOP(CARDINAL) = 4"
#   "_NET_WM_DESKTOP(CARDINAL) = 5"
#   "_NET_WM_DESKTOP(CARDINAL) = 6"
#   "_NET_WM_DESKTOP(CARDINAL) = 7"
# - gkrellm (not in the dock), kdialog (in its random "upper/right of display"
#   mode), notify-send, tint2, wmagnify (sticky), xfce4-panel
#   "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# - wmagnify (normal), xmessage
#   "_NET_WM_DESKTOP(CARDINAL) = 0"
# ^ kdialog (in its random "middle/center of display" mode) has absolutely no
#   mention of "_NET_WM_DESKTOP(CARDINAL)" in its report

# NOTE:
# - I would have expected to see "_NET_WM_STATE(ATOM) = _NET_WM_STATE_STICKY"
#   when I see "_NET_WM_DESKTOP(CARDINAL) = 4294967295", but that isn't the
#   case in openbox. I'm obviously missing the point about something

# NOTE: (to self) (& others, if you're bored. hi there!)
# - look for anything with the following tags: EDIT FIXME IDEA NOTE TODO TRY
# - use of bash builtins is often (but not always) preferred over shelling out
#   to binaries
# ^ reasons: speed, availability, simplicity, & predictability. fast is always
#   preferred, no need to test if a binary even *exists*, no need to be
#   concerned about changed syntax or output from one release to the next

# NOTE: (differences when doublequoting vs not doublequoting)
# - #1: echo "$_OUTPUT_XPROP_ROOT"
# - #2: echo "$_OUTPUT_XPROP_ID"
# - #3: echo $_OUTPUT_XWININFO_ID
# ^ #1 & #2 above preserve all spacing, linebreaks, & special characters
# ^ #3 does not preserve spacing, linebreaks, or special characters. outputs
#   everything as a single line with single spacing
# - this behaviour is deliberately (ab)used throughout the script
# - there is a 4th form that I use in another script, but won't describe here
# > script: "volume", "function _amixer_sget_master_parse". the magic involved
#   in accessing "$_AMIXER_SGET_MASTER" (doublequotes are part of the script &
#   $_LINE (no doublequotes involved). no calls to echo are involved.
#   while/do/done with read fed by a here string does the heavy lifting

# NOTE: (builtin/binary/variable/function indentation)
# - 4 spaces, hash, builtin/binary/variable/function name = in sub-function
# - 2 spaces, hash, builtin/binary/variable/function name = in function
# - 0 spaces, hash, builtin/binary/variable/function name = in main
# NOTE: (system builtin use & abuse - only the special cases are listed)
    # read
    # shift
  # echo
  # false
  # printf
  # read
  # shift
  # true
# NOTE: (system binary use & abuse)
  # sed
  # wmctrl
  # xprop
  # xwininfo
# NOTE: (system & script variable use & abuse)
# - system variables are always in the form "FOO"
# - script variables are always in the form "_FOO"
# - system variables referenced & modified. necessary & the whole point
    # @ (_NET_DESKTOP_VIEWPORT_CARDINAL)
    # @ (_NET_WORKAREA_CARDINAL)
  # @
# - system variables referenced but not modified
  # #
  # 1
  # 2
  # ?
  # @
  # FUNCNAME (single dimension indexed array)
# @
# - ephemeral variables. here today, gone tomorrow (keeping track for myself)
# - better to have too many than too few
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _NET_WM_DESKTOP_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _XX0
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_LIST
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_OVERALL
  # _BOOLEAN_PERMISSIVE
  # _BOOLEAN_QUIET
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_UNUSED
  # _BOOLEAN_VERBOSE
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _CORNERS
  # _COUNTER
  # _DYNAMIC_TYPE
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _HUMAN_READABLE_WM_STATE_ATOM
  # _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_ACTIVE_WINDOW_WINDOW
  # _NET_CLIENT_LIST_STACKING_WINDOW
  # _NET_CLIENT_LIST_WINDOW
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_LAYOUT_C
  # _NET_DESKTOP_LAYOUT_CARDINAL
  # _NET_DESKTOP_LAYOUT_O
  # _NET_DESKTOP_LAYOUT_R
  # _NET_DESKTOP_LAYOUT_S
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _NET_DESKTOP_VIEWPORT_X
  # _NET_DESKTOP_VIEWPORT_Y
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _NET_SHOWING_DESKTOP_CARDINAL
  # _NET_SUPPORTED_ATOM
  # _NET_SUPPORTING_WM_CHECK_WINDOW
  # _NET_VIRTUAL_ROOTS_WINDOW
  # _NET_WM_ALLOWED_ACTIONS_ATOM
  # _NET_WM_BYPASS_COMPOSITOR_CARDINAL
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_WM_ICON_GEOMETRY_CARDINAL
  # _NET_WM_ICON_GEOMETRY_H
  # _NET_WM_ICON_GEOMETRY_W
  # _NET_WM_ICON_GEOMETRY_X
  # _NET_WM_ICON_GEOMETRY_Y
  # _NET_WM_ICON_NAME_UTF8_STRING
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WM_OPAQUE_REGION_CARDINAL
  # _NET_WM_OPAQUE_REGION_H
  # _NET_WM_OPAQUE_REGION_W
  # _NET_WM_OPAQUE_REGION_X
  # _NET_WM_OPAQUE_REGION_Y
  # _NET_WM_PID_CARDINAL
  # _NET_WM_STATE_ATOM
  # _NET_WM_STRUT_B
  # _NET_WM_STRUT_CARDINAL
  # _NET_WM_STRUT_L
  # _NET_WM_STRUT_PARTIAL_B
  # _NET_WM_STRUT_PARTIAL_BEX
  # _NET_WM_STRUT_PARTIAL_BSX
  # _NET_WM_STRUT_PARTIAL_CARDINAL
  # _NET_WM_STRUT_PARTIAL_L
  # _NET_WM_STRUT_PARTIAL_LEY
  # _NET_WM_STRUT_PARTIAL_LSY
  # _NET_WM_STRUT_PARTIAL_R
  # _NET_WM_STRUT_PARTIAL_REY
  # _NET_WM_STRUT_PARTIAL_RSY
  # _NET_WM_STRUT_PARTIAL_T
  # _NET_WM_STRUT_PARTIAL_TEX
  # _NET_WM_STRUT_PARTIAL_TSX
  # _NET_WM_STRUT_R
  # _NET_WM_STRUT_T
  # _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL
  # _NET_WM_USER_TIME_CARDINAL
  # _NET_WM_USER_TIME_WINDOW_WINDOW
  # _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING
  # _NET_WM_VISIBLE_NAME_UTF8_STRING
  # _NET_WM_WINDOW_TYPE_ATOM
  # _NET_WORKAREA_CARDINAL
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _NET_WORKAREA_X
  # _NET_WORKAREA_Y
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OPTION_WINDOW_NAME
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XPROP_ROOT
  # _OUTPUT_XWININFO_ID
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_UPPER_LEFT_X
  # _WINDOW_DECORATED_UPPER_LEFT_Y
  # _WINDOW_DECORATED_W
  # _WINDOW_UNDECORATED_H
  # _WINDOW_UNDECORATED_UPPER_LEFT_X
  # _WINDOW_UNDECORATED_UPPER_LEFT_Y
  # _WINDOW_UNDECORATED_W
# _BINARY_WMCTRL
# _OPTIONS_READ (read options, not script options)
# NOTE: (script function use & abuse)
# - script functions are always in the form "_foo"
    # _eko_iod
  # _binary_validate_setup
  # _builtin_validate_setup
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_preset
  # _coordinates_user_specified
  # _coordinates_validate
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en
  # _get_net_active_window_window
  # _get_net_client_list_stacking_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_layout_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_showing_desktop_cardinal
  # _get_net_supported_atom
  # _get_net_supporting_wm_check_window
  # _get_net_virtual_roots_window
  # _get_net_wm_allowed_actions_atom
  # _get_net_wm_bypass_compositor_cardinal
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_icon_geometry_cardinal
  # _get_net_wm_icon_name_utf8_string
  # _get_net_wm_name_utf8_string
  # _get_net_wm_opaque_region_cardinal
  # _get_net_wm_pid_cardinal
  # _get_net_wm_state_atom
  # _get_net_wm_strut_cardinal
  # _get_net_wm_strut_partial_cardinal
  # _get_net_wm_sync_request_counter_cardinal
  # _get_net_wm_user_time_cardinal
  # _get_net_wm_user_time_window_window
  # _get_net_wm_visible_icon_name_utf8_string
  # _get_net_wm_visible_name_utf8_string
  # _get_net_wm_window_type_atom
  # _get_net_workarea_cardinal
  # _get_window_geometry
  # _get_window_id
  # _get_window_list
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help
  # _sub_function
# _parse_parameters

#+ setup here +#

# variables:
# _BINARY_WMCTRL
# _OPTIONS_READ (read options, not script options)

# - doing these here so we get no suprises in
#   "function _binary_validate_setup" & elsewhere &
#   "function _builtin_validate_setup" & elsewhere
unset _BINARY_WMCTRL
unset _OPTIONS_READ

#- setup here -#

#+ function definitions here +#

# ORDER:
# - before calling _parse_parameters, but otherwise alphabetical

function _binary_validate_setup()
{
  _eko_iod "#+ _binary_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL

  # binaries:
  # sed
  # wmctrl
  # xprop
  # xwininfo

  # builtins:
  # echo
  # false

  # NOTE:
  # - rather than test a given binary's version in hopes of figuring out which
  #   features it supports, test its supported feature set directly. not only
  #   is this much simpler to do, it's possible to test only those features
  #   that are explicitly used in the script
  # - how? get the binary to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = no binary, otherwise
  #   parse the help text for descriptions of specific features

  # NOTE:
  # - be explicit, use long form options when available

  #+ sed +#
  # - "sed --help". stdout
  #   "--expression=script" (no "=" required) (use "=" for uniformity)
  # - called in "function _binary_validate_setup"
  # - called in "function _coordinates_force"
  # - called in "function _get_net_active_window_window"
  # - called in "function _get_net_client_list_stacking_window"
  # - called in "function _get_net_client_list_window"
  # - called in "function _get_net_current_desktop_cardinal"
  # - called in "function _get_net_desktop_geometry_cardinal"
  # - called in "function _get_net_desktop_layout_cardinal"
  # - called in "function _get_net_desktop_names_utf8_string"
  # - called in "function _get_net_desktop_viewport_cardinal"
  # - called in "function _get_net_frame_extents_cardinal"
  # - called in "function _get_net_number_of_desktops_cardinal"
  # - called in "function _get_net_showing_desktop_cardinal"
  # - called in "function _get_net_supported_atom"
  # - called in "function _get_net_supporting_wm_check_window"
  # - called in "function _get_net_virtual_roots_window"
  # - called in "function _get_net_wm_allowed_actions_atom"
  # - called in "function _get_net_wm_bypass_compositor_cardinal"
  # - called in "function _get_net_wm_desktop_cardinal"
  # - called in "function _get_net_wm_icon_geometry_cardinal"
  # - called in "function _get_net_wm_icon_name_utf8_string"
  # - called in "function _get_net_wm_name_utf8_string"
  # - called in "function _get_net_wm_opaque_region_cardinal"
  # - called in "function _get_net_wm_pid_cardinal"
  # - called in "function _get_net_wm_state_atom"
  # - called in "function _get_net_wm_strut_cardinal"
  # - called in "function _get_net_wm_strut_partial_cardinal"
  # - called in "function _get_net_wm_sync_request_counter_cardinal"
  # - called in "function _get_net_wm_user_time_cardinal"
  # - called in "function _get_net_wm_user_time_window_window"
  # - called in "function _get_net_wm_visible_icon_name_utf8_string"
  # - called in "function _get_net_wm_visible_name_utf8_string"
  # - called in "function _get_net_wm_window_type_atom"
  # - called in "function _get_net_workarea_cardinal"
  # - called in "function _get_window_geometry"
  # - called in "function _get_window_id"
  # - called in "function _pass_fail_by_window_type"

  _BINARY_NAME=sed
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  _BINARY_OPTION=--expression=script
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- sed -#

  # NOTE:
  # - unlike my usual method of checking for binary availability & failing if
  #   what's required isn't found, "false" (builtin or binary, whatever's
  #   available) is used as a substitute for "wmctrl" so that all information
  #   gathering, calculations, & information dump are performed
  # - for added flexibility, "true" (builtin or binary, whatever's available)
  #   is used as a substitue for "wmctrl" when option "-D, --dry-run" is
  #   specified

  #+ wmctrl +#
  # - "wmctrl --help". stdout
  #  "-i" (no long form. no other options)
  #  "-r <WIN> -e <MVARG>" (no long form)
  #  "-a <WIN>" (no long form)
  # - called directly in "function _binary_validate_setup"
  # - _BINARY_WMCTRL is set
  # - called indirectly in "main"
  # - called indirectly in "function _binary_validate_setup"
  # - called indirectly in "function _coordinates_force"
  # - called indirectly in "function _parse_parameters"
  # - called indirectly in "function _set_window_position"

  _BINARY_NAME=wmctrl
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _BINARY_WMCTRL=false
  else
    _BINARY_WMCTRL=$_BINARY_NAME

    # NOTE:
    # - these tests must remain nested since they depend on the existence of
    #   wmctrl
    _BINARY_OPTION=-i
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-r <WIN> -e <MVARG>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-a <WIN>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi

  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  #- wmctrl -#

  #+ xprop +#
  # - "xprop -help". stderr
  # - "xprop -help 2>&1". stdout
  #   "-id id" (test only for "-id") (no long form)
  #   "-root" (no long form. no other options)
  # - called in "function _binary_validate_setup"
  # - called in "function _get_window_id"
  # - called in "function _get_window_list"
  # - called in "function _parse_parameters"
  # - called in "function _pass_fail_by_window_id"

  _BINARY_NAME=xprop
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  if [[ " $_BINARY_HELP " =~ "unable to open display" ]]
  then
    _show_error "unable to determine \$DISPLAY &/or \$XAUTHORITY"
  fi

  _BINARY_OPTION=-id
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi

  _BINARY_OPTION=-root
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- xprop -#

  #+ xwininfo +#
  # - "xwininfo -help". stderr
  # - "xwininfo -help 2>&1 ". stdout
  #   "-id windowid" (test only for "-id") (no long form)
  # - called in "function _binary_validate_setup"
  # - called in "function _coordinates_force"
  # - called in "function _get_window_geometry"
  # - called in "function _get_window_id"

  _BINARY_NAME=xwininfo
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  _BINARY_OPTION=-id
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- xwininfo -#

  _eko_iod "#- _binary_validate_setup -#"
}

function _builtin_validate_setup()
{
  _eko_iod "#+ _builtin_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _OPTIONS_READ (read options, not script options)

  # binaries:

  # builtins:
  # echo
  # read

  # NOTE:
  # - rather than test a given builtin's version (or more accurately, test a
  #   given version of bash itself) in hopes of figuring out which features it
  #   supports, test its supported feature set directly. not only is this much
  #   simpler to do, it's possible to test only those features that are
  #   explicitly used in the script
  # - how? get the builtin to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = unsupported builtin,
  #   otherwise parse the help text for descriptions of specific features

  #+ read +#
  # - "help read". stdout
  #   "-r"
  # - called in "function _builtin_validate_setup"
  # - called in "function _get_net_desktop_geometry_cardinal"
  # - called in "function _get_net_desktop_layout_cardinal"
  # - called in "function _get_net_desktop_viewport_cardinal"
  # - called in "function _sub_function" (actually here)
  # - called in "function _get_net_frame_extents_cardinal"
  # - called in "function _get_net_wm_icon_geometry_cardinal"
  # - called in "function _get_net_wm_opaque_region_cardinal"
  # - called in "function _get_net_wm_strut_cardinal"
  # - called in "function _get_net_wm_strut_partial_cardinal"
  # - called in "function _get_net_workarea_cardinal"
  # - called in "function _sub_function" (actually here)
  # - called in "function _get_window_geometry"
  # - _OPTIONS_READ is set

  _BUILTIN_NAME=read
  _BUILTIN_HELP=$(echo $(help $_BUILTIN_NAME 2>&1))
  if [[ $_BUILTIN_HELP =~ "no help topics match" ]]
  then
    _show_error "required builtin \"$_BUILTIN_NAME\" not supported"
  fi

  _BUILTIN_OPTION=-r
  if [[ " $_BUILTIN_HELP " =~ " $_BUILTIN_OPTION " ]]
  then
    _OPTIONS_READ=$_BUILTIN_OPTION
    _eko_pv \$_OPTIONS_READ: \""$_OPTIONS_READ\""
  else
    _show_error \""$_BUILTIN_NAME\" does not support \"$_BUILTIN_OPTION\""
  fi
  #- read -#

  _eko_iod "#- _builtin_validate_setup -#"
}

#+ original +#
#+ (3x3) +#
function _coordinates_preset()
{
  _eko_iod "#+ _coordinates_preset +#"

  # functions:
  # _coordinates_user_specified
  # _eko_iod
  # _show_help

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _OPTION_WINDOW_COORDINATES
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_W

  # binaries:

  # builtins:

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # NOTE:
  # - "function _coordinates_preset" (both versions) &
  #   "function _coordinates_validate" share identical calculations for the 4
  #   corners

  # NOTE:
  # - there are 9 preset coordinates (3x3 grid), 1 "do not move" coordinate
  #   (for use with "-r, --raise"), & 1 user-specified coordinate
  # - these will remain in the script even if/when everything else changes

  # NOTE:
  # - these do not need to be inspected via "function _coordinates_validate"
  #   since they are all derived values. specifically, hardcoded values need
  #   no inspection - only freeform values do

  case $_OPTION_WINDOW_COORDINATES in
    ( ul ) # Upper/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 2 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 2 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 2 ) )) # =  33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 2 ) )) # =   0 (overall)
    ;;
    ( uc ) # Upper/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 2 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 2 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 2 ) )) # =  33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 2 ) )) # =   0 (overall)
    ;;
    ( ur ) # Upper/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 2 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 2 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 2 ) )) # =  33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 2 ) )) # =   0 (overall)
    ;;
    ( ml ) # Middle/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 2 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 2 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 2 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 2 ) )) # =  426 (overall)
    ;;
    ( mc ) # Middle/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 2 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 2 ) )) # =  809 (overall)
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 2 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 2 ) )) # =  426 (overall)
    ;;
    ( mr ) # Middle/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 2 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 2 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 2 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 2 ) )) # =  426 (overall)
    ;;
    ( bl ) # Bottom/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 2 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 2 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 2 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 2 ) )) # =  852 (overall)
    ;;
    ( bc ) # Bottom/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 2 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 2 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 2 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 2 ) )) # =  852 (overall)
    ;;
    ( br ) # Bottom/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 2 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 2 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 2 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 2 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 2 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 2 ) )) # =  852 (overall)
    ;;
    ( same ) # Same (unchanged) coordinates (aka: do not move)
#+ marker -0 +#
#      _COORDINATE_X=-0
#      _COORDINATE_Y=-0
      _COORDINATE_X=-1
      _COORDINATE_Y=-1
#- marker -0 -#
    ;;
    ( *,* ) # user specified coordinates
      _coordinates_user_specified
    ;;
    ( * )
      _show_help
    ;;
  esac

  _eko_iod "#- _coordinates_preset -#"
}
#- (3x3) -#
#- original -#

#+ testing +#
#+ (3x3) (5x5) (9x9) +#
# ("__" disables the following function. "_" enables the following function)
function _coordinates_preset()
{
  _eko_iod "#+ _coordinates_preset +#"

  # functions:
  # _coordinates_user_specified
  # _eko_iod
  # _show_help

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _OPTION_WINDOW_COORDINATES
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_W

  # binaries:

  # builtins:

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # NOTE:
  # - "function _coordinates_preset" (both versions) &
  #   "function _coordinates_validate" share identical calculations for the 4
  #   corners

  # NOTE:
  # - there are 9 preset coordinates (3x3 grid), 1 "do not move" coordinate
  #   (for use with "-r, --raise"), & 1 user-specified coordinate
  # - these will remain in the script even if/when everything else changes

  # NOTE:
  # - these do not need to be inspected via "function _coordinates_validate"
  #   since they are all derived values. specifically, hardcoded values need
  #   no inspection - only freeform values do

  # IDEA: (vague as it is)
  # - allow for fractional coordinates. ie: (X,Y) of (2/5,3/7)
  # - test with fractions that are multiples of 3 since I already have the
  #   calculations available for comparison
  # - numerator & denominator expressed as $_NUMERATOR & $_DENOMINATOR
  # - something about each " - 1" &/or " + 1"
  # - start counting from "1", so top/left corner would be "1/?,1/?"
  # - calculations use 0 to 8, options should be expressed as 1 to 9
  # - use ( $_NUMERATOR - 1 ) & ( $_DENOMINATOR - 1 ) in the calculations?
  # - lots of trapping will be required:
  #+ incomplete/wrong, but on the right track
  # > no negative numbers
  # > actually, no numbers lower than "0"
  # > denominator cannot be lower than 1
  # > $_NUMERATOR -le $_DENOMINATOR
  #-

  # NOTE:
  # - order of operations *does* matter due to using bash's "$(())". it uses
  #   whole numbers in its calculations (the whole "round down" vs "round up"
  #   scenario comes into play)
  # > " / 8 * 6 " vs " * 6 / 8 " (using the latter form for correctness)

  # NOTE:
  # - tested on the following display sizes. all the raw numbers below are
  #   from the largest display
  # > 1920,1080
  # > 1366,768
  # > 1024,768

  # NOTE:
  # - for the (9x9), (5x5), & (3x3) coordinates below, pay special attention
  #   to the "desktop" numbers. "overall" numbers are unchanged
  # - old: workarea borders (L,T,R,B): "0,0,68,24"
  # - new: workarea borders (L,T,R,B): "49,33,68,24"
  # > new: dynamic workarea geometry (X,Y,W,H): "0,0,1920,1080" (overall)
  # > old: dynamic workarea geometry (X,Y,W,H): "0,0,1852,1056" (desktop)
  # > new: dynamic workarea geometry (X,Y,W,H): "49,33,1803,1023" (desktop)
  # - differences between "old" & "new":
  # > old: dockapps on right, & bottom borders (R,B)
  # > new: dockapps on left, top, right, & bottom borders (L,T,R,B)

  # (9x9) coordinates (old)
  # desktop ##########################################
  # X =    0  193  387  581  775  968 1162 1356 1550 #
  # Y =    0  103  207  310  414  517  621  724  828 #
  # overall ##########################################
  # X =    0  202  404  606  809 1011 1213 1415 1618 #
  # Y =    0  106  213  319  426  532  639  745  852 #
  ####################################################

  # (9x9) coordinates (new)
  # desktop ##########################################
  # X =   49  236  424  611  799  987 1174 1362 1550 #
  # Y =   33  132  231  331  430  529  629  728  828 #
  # overall ##########################################
  # X =    0  202  404  606  809 1011 1213 1415 1618 #
  # Y =    0  106  213  319  426  532  639  745  852 #
  ####################################################

  # (5x5) coordinates (old)
  # desktop ##########################################
  # X =    0       387       775      1162      1550 #
  # Y =    0       207       414       621       828 #
  # overall ##########################################
  # X =    0       404       809      1213      1618 #
  # Y =    0       213       426       639       852 #
  ####################################################

  # (5x5) coordinates (new)
  # desktop ##########################################
  # X =   49       424       799      1174      1550 #
  # Y =   33       231       430       629       828 #
  # overall ##########################################
  # X =    0       404       809      1213      1618 #
  # Y =    0       213       426       639       852 #
  ####################################################

  # (3x3) coordinates (old)
  # desktop ##########################################
  # X =    0                 775                1550 #
  # Y =    0                 414                 828 #
  # overall ##########################################
  # X =    0                 809                1618 #
  # Y =    0                 426                 852 #
  ####################################################

  # (3x3) coordinates (new)
  # desktop ##########################################
  # X =   49                 799                1550 #
  # Y =   33                 430                 828 #
  # overall ##########################################
  # X =    0                 809                1618 #
  # Y =    0                 426                 852 #
  ####################################################

  case $_OPTION_WINDOW_COORDINATES in
    ( A1 | AA | ul ) # Upper/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A3 | AB )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A5 | AC | uc ) # Upper/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A7 | AD )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( A9 | AE | ur ) # Upper/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
    ;;
    ( B1 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B3 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B5 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B7 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( B9 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 1 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 1 / 8 ) )) # =  132 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 1 / 8 ) )) # =  106 (overall)
    ;;
    ( C1 | BA )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C3 | BB )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C5 | BC )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C7 | BD )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( C9 | BE )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 8 ) )) # =  231 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 8 ) )) # =  213 (overall)
    ;;
    ( D1 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D3 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D5 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D7 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( D9 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 3 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 3 / 8 ) )) # =  331 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 3 / 8 ) )) # =  319 (overall)
    ;;
    ( E1 | CA | ml ) # Middle/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E3 | CB )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E5 | CC | mc ) # Middle/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E7 | CD )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( E9 | CE | mr ) # Middle/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 4 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 4 / 8 ) )) # =  430 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 4 / 8 ) )) # =  426 (overall)
    ;;
    ( F1 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F3 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F5 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F7 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( F9 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 5 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 5 / 8 ) )) # =  529 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 5 / 8 ) )) # =  532 (overall)
    ;;
    ( G1 | DA )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G3 | DB )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G5 | DC )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G7 | DD )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( G9 | DE )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 6 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 6 / 8 ) )) # =  629 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 6 / 8 ) )) # =  639 (overall)
    ;;
    ( H1 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H3 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H5 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H7 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( H9 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 7 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 7 / 8 ) )) # =  728 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 7 / 8 ) )) # =  745 (overall)
    ;;
    ( I1 | EA | bl ) # Bottom/Left
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I2 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 1 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 1 / 8 ) )) # =  236 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 1 / 8 ) )) # =  202 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I3 | EB )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 8 ) )) # =  424 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 8 ) )) # =  404 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I4 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 3 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 3 / 8 ) )) # =  611 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 3 / 8 ) )) # =  606 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I5 | EC | bc ) # Bottom/Center
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 4 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 4 / 8 ) )) # =  799 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 4 / 8 ) )) # =  809 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I6 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 5 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 5 / 8 ) )) # =  987 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 5 / 8 ) )) # = 1011 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I7 | ED )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 6 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 6 / 8 ) )) # = 1174 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 6 / 8 ) )) # = 1213 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I8 )
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 7 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 7 / 8 ) )) # = 1362 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 7 / 8 ) )) # = 1415 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( I9 | EE |  br ) # Bottom/Right
      # - $((expression))
      _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo              $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo              $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
      # - $((expression))
      _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo              $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo              $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
    ;;
    ( same ) # Same (unchanged) coordinates (aka: do not move)
#+ marker -0 +#
#      _COORDINATE_X=-0
#      _COORDINATE_Y=-0
      _COORDINATE_X=-1
      _COORDINATE_Y=-1
#- marker -0 -#
    ;;
    ( *,* ) # user specified coordinates
      _coordinates_user_specified
    ;;
    ( * )
      _show_help
    ;;
  esac

  _eko_iod "#- _coordinates_preset -#"
}
#- (3x3) (5x5) (9x9) -#
#- testing -#

function _coordinates_force()
{
  _eko_iod "#+ _coordinates_force +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BINARY_WMCTRL
  # _COMMAND
  # _CORNERS
  # _NET_CLIENT_LIST_WINDOW
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo

  # NET:
  # - _NET_CLIENT_LIST, WINDOW[]/32

  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0xe00008, "
  # etc, etc
  # "0x36007a2"

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  for _OPTION_WINDOW_ID in $_NET_CLIENT_LIST_WINDOW
  do
    _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)

    # - remove everything else. why? there's a non-zero chance that the
    #   plus/minus pair could be in the window title (think: web browser)
    _CORNERS=$(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Corners: \(.*\) -geometry.*/ s//\1/g')

    #    top/left:  +-/- +-/-
    # bottom/left:  +-/- --/+
    #    top/right: --/+ +-/-
    # bottom/right: --/+ --/+
    if [[ $_CORNERS =~ .*[-+][-+].* ]]
    then
      _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""
      _eko_pv \$_CORNERS: \""$_CORNERS\""

      # - don't be fancy. simply place the window at (X,Y) of (0,0)
      # - slight problem with this approach. some applications (hello
      #   TigerVNC) don't report (or improperly report) their window
      #   decorations. if window size is is larger than desktop or workspace
      #   size, the titlebar would be unreachable
      #_COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,0,0,-1,-1"

      # - on second thought, be slightly fancy
      # - place the window (using its raw (X,Y) dimensions - aka: ignore any
      #   decorations) with its top/left corner in overall desktop center (not
      #   workarea center). this way the titlebar can be grabbed, even
      #   oddballs like TigerVNC, with minimal calculations
      # - this is a simple rescue operation. all that's needed is to make
      #   unreachable windows reachable. the user can manipulate things later
      # - $((expression))
      _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_NET_DESKTOP_GEOMETRY_W / 2 )),$(( $_NET_DESKTOP_GEOMETRY_H / 2 )),-1,-1"

      _eko_pv command: \""$_COMMAND\""

      # - move window if possible
      $_COMMAND
    fi
  done

  _eko_iod "#- _coordinates_force -#"
}

function _coordinates_kludge()
{
  _eko_iod "#+ _coordinates_kludge +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_NAME_UTF8_STRING

  # binaries:

  # builtins:

  # NET:
  # - _NET_WM_NAME, UTF8_STRING

  # "_NET_WM_NAME(UTF8_STRING) = "
  # ""Magnify 3x""
  # - also:
  # ""helium.elements.lan - TigerVNC""
  # ""beryllium.elements.lan - TigerVNC""
  # ""boron.elements.lan - TigerVNC""
  # ""carbon.elements.lan - TigerVNC""

  # - the regex must be *outside* the doublequotes
  # - note the extra trailing doublequote on the rhs. that's from the window's
  #   titlebar text string itself
  if [[ $_NET_WM_NAME_UTF8_STRING =~ .*" - TigerVNC\""$ ]]
  then
    # - dimensions of left & top decorations
    # - seems most likely for other windows as well. if not, this routine is
    #   already in place & quite simple to update
    _KLUDGE_X=$_NET_FRAME_EXTENTS_L
    _KLUDGE_Y=$_NET_FRAME_EXTENTS_T
  else
    # - defaults
    _KLUDGE_X=0
    _KLUDGE_Y=0
  fi

  # - this is absolutely required for the TigerVNC client
  # - this must be done after "function _coordinates_validate", but before
  #   setting up _COMMAND in "function _set_window_position"
  # - "arg1 -ne arg2" = returns true if arg1 is not equal to arg2
#+ marker -0 +#
#  if [[ $_COORDINATE_X -ne -0 ]] \
#  && [[ $_COORDINATE_Y -ne -0 ]]
  if [[ $_COORDINATE_X -ne -1 ]] \
  && [[ $_COORDINATE_Y -ne -1 ]]
#- marker -0 -#
  then
    # - $((expression))
    _COORDINATE_X=$(( $_COORDINATE_X + $_KLUDGE_X ))
    _COORDINATE_Y=$(( $_COORDINATE_Y + $_KLUDGE_Y ))
  fi

  _eko_pv \$_KLUDGE_X: \""$_KLUDGE_X\""
  _eko_pv \$_KLUDGE_Y: \""$_KLUDGE_Y\""

  _eko_iod "#- _coordinates_kludge -#"
}

function _coordinates_user_specified()
{
  _eko_iod "#+ _coordinates_user_specified +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _OPTION_WINDOW_COORDINATES

  # binaries:

  # builtins:

#+ marker -0 +#
  # - ${parameter/pattern/string}
  _COORDINATE_X=${_OPTION_WINDOW_COORDINATES/,*/}
  # - ${parameter/pattern/string}
  _COORDINATE_Y=${_OPTION_WINDOW_COORDINATES/*,/}
#- marker -0 -#

#+ marker -0 +#
#  # - interpret "-c ,Y" as "-c -0,Y"
#  # - ${parameter:=word}
#  _COORDINATE_X=${_COORDINATE_X:=-0}
#  # - interpret "-c X," as "-c X,-0"
#  # - ${parameter:=word}
#  _COORDINATE_Y=${_COORDINATE_Y:=-0}
  # - interpret "-c ,Y" as "-c -1,Y"
  # - ${parameter:=word}
  _COORDINATE_X=${_COORDINATE_X:=-1}
  # - interpret "-c X," as "-c X,-1"
  # - ${parameter:=word}
  _COORDINATE_Y=${_COORDINATE_Y:=-1}
#- marker -0 -#

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_user_specified -#"
}

function _coordinates_validate()
{
  _eko_iod "#+ _coordinates_validate +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _COORDINATE_X
  # _COORDINATE_Y
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_W

  # binaries:

  # builtins:

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # NOTE:
  # - "function _coordinates_preset" (both versions) &
  #   "function _coordinates_validate" share identical calculations for the 4
  #   corners

  # NOTE:
  # - "force to fit" only applies to coordinates outside overall/desktop
  #    boundaries. all other coordinates within these boundaries remain
  #    unmodified

  #+ error exits +#

  # NOTE:
  # - X & Y appear to trip different tests even when fed the same
  #   (deliberately) incorrect information

  # TODO:
  # - investigate later. for now, keep the following 2 tests below

  # - (1/2)
  # - non-numeric X coordinate?
  # - negative included
  if [[ ! $_COORDINATE_X =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric X coordinate \"$_COORDINATE_X\" specified"
  fi

  # - (2/2)
  # - non-numeric Y coordinate?
  # - negative included
  if [[ ! $_COORDINATE_Y =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric Y coordinate \"$_COORDINATE_Y\" specified"
  fi

  #- error exits -#

  #+ force to fits +#

  # - (1/4)
#+ marker -0 +#
#  # - force X coordinate to fit within usable or overall desktop X (left) (special case: -0)
  # - force X coordinate to fit within usable or overall desktop X (left) (special case: -1)
#- marker -0 -#
  # - "arg1 -lt arg2" = returns true if arg1 is less than arg2
  # - "arg1 -ne arg2" = returns true if arg1 is not equal to arg2
#+ marker -0 +#
#  if [[ $_COORDINATE_X -lt $_DYNAMIC_WORKAREA_X ]] \
#  && [[ $_COORDINATE_X -ne -0 ]]
  if [[ $_COORDINATE_X -lt $_DYNAMIC_WORKAREA_X ]] \
  && [[ $_COORDINATE_X -ne -1 ]]
#- marker -0 -#
  then
    _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (was: 1/4)"

#+ marker 4 +#
#+ old +#
    # - $((expression))
#   _COORDINATE_X=$_DYNAMIC_WORKAREA_X
# echo            $(( 49 )) # =   49 (desktop)
# echo            $(( 0  )) # =    0 (overall)
#- old -#
#+ (3x3) +#
    # - $((expression))
#   _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 2 ) ))
# echo            $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 2 ) )) # =   49 (desktop)
# echo            $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 2 ) )) # =    0 (overall)
#- (3x3) -#
#+ (3x3) (5x5) (9x9) +#
    # - $((expression))
    _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 0 / 8 ) ))
# echo            $(( 49                   + ( ( 1803                 - 302                  ) * 0 / 8 ) )) # =   49 (desktop)
# echo            $(( 0                    + ( ( 1920                 - 302                  ) * 0 / 8 ) )) # =    0 (overall)
#- (3x3) (5x5) (9x9) -#
#- marker 4 -#
  fi

  # - (2/4)
  # - force X coordinate to fit within usable or overall desktop X (right)
  # - $((expression))
  # - "arg1 -gt arg2" = returns true if arg1 is greater than arg2
  if [[ $_COORDINATE_X -gt $(( $_DYNAMIC_WORKAREA_X + $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W )) ]]
  then
    _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (was: 2/4)"

#+ marker 4 +#
#+ old +#
    # - $((expression))
#   _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ))
# echo            $(( 49                   + 1803                 - 302                  )) # = 1550 (desktop)
# echo            $(( 0                    + 1920                 - 302                  )) # = 1618 (overall)
#- old -#
#+ (3x3) +#
    # - $((expression))
#   _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 2 / 2 ) ))
# echo            $(( 49                   + ( ( 1803                 - 302                  ) * 2 / 2 ) )) # = 1550 (desktop)
# echo            $(( 0                    + ( ( 1920                 - 302                  ) * 2 / 2 ) )) # = 1618 (overall)
#- (3x3) -#
#+ (3x3) (5x5) (9x9) +#
    # - $((expression))
    _COORDINATE_X=$(( $_DYNAMIC_WORKAREA_X + ( ( $_DYNAMIC_WORKAREA_W - $_WINDOW_DECORATED_W ) * 8 / 8 ) ))
# echo            $(( 49                   + ( ( 1803                 - 302                  ) * 8 / 8 ) )) # = 1550 (desktop)
# echo            $(( 0                    + ( ( 1920                 - 302                  ) * 8 / 8 ) )) # = 1618 (overall)
#- (3x3) (5x5) (9x9) -#
#- marker 4 -#
  fi

  # - (3/4)
#+ marker -0 +#
#  # - force Y coordinate to fit within usable or overall desktop Y (top) (special case: -0)
  # - force Y coordinate to fit within usable or overall desktop Y (top) (special case: -1)
#- marker -0 -#
  # - "arg1 -lt arg2" = returns true if arg1 is less than arg2
  # - "arg1 -ne arg2" = returns true if arg1 is not equal to arg2
#+ marker -0 +#
#  if [[ $_COORDINATE_Y -lt $_DYNAMIC_WORKAREA_Y ]] \
#  && [[ $_COORDINATE_Y -ne -0 ]]
  if [[ $_COORDINATE_Y -lt $_DYNAMIC_WORKAREA_Y ]] \
  && [[ $_COORDINATE_Y -ne -1 ]]
#+ marker -0 +#
  then
    _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\" (was: 3/4)"

#+ marker 4 +#
#+ old +#
    # - $((expression))
#   _COORDINATE_Y=$_DYNAMIC_WORKAREA_Y
# echo            $(( 33 )) # =   33 (desktop)
# echo            $(( 0  )) # =    0 (overall)
#- old -#
#+ (3x3) +#
    # - $((expression))
#   _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 2 ) ))
# echo            $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 2 ) )) # =  33 (desktop)
# echo            $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 2 ) )) # =   0 (overall)
#- (3x3) -#
#+ (3x3) (5x5) (9x9) +#
    # - $((expression))
    _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 0 / 8 ) ))
# echo            $(( 33                   + ( ( 1023                 - 228                  ) * 0 / 8 ) )) # =   33 (desktop)
# echo            $(( 0                    + ( ( 1080                 - 228                  ) * 0 / 8 ) )) # =    0 (overall)
#- (3x3) (5x5) (9x9) -#
#- marker 4 -#
  fi

  # - (4/4)
  # - force Y coordinate to fit within usable or overall desktop Y (bottom)
  # - $((expression))
  # - "arg1 -gt arg2" = returns true if arg1 is greater than arg2
  if [[ $_COORDINATE_Y -gt $(( $_DYNAMIC_WORKAREA_Y + $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H )) ]]
  then
    _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\" (was: 4/4)"

#+ marker 4 +#
#+ old +#
    # - $((expression))
#   _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ))
# echo            $(( 33                   + 1023                 - 228                  )) # = #  828 (desktop)
# echo            $(( 0                    + 1080                 - 228                  )) # = #  852 (overall)
#- old -#
#+ (3x3) +#
    # - $((expression))
#   _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 2 / 2 ) ))
# echo            $(( 33                   + ( ( 1023                 - 228                  ) * 2 / 2 ) )) # =  828 (desktop)
# echo            $(( 0                    + ( ( 1080                 - 228                  ) * 2 / 2 ) )) # =  852 (overall)
#- (3x3) -#
#+ (3x3) (5x5) (9x9) +#
    # - $((expression))
    _COORDINATE_Y=$(( $_DYNAMIC_WORKAREA_Y + ( ( $_DYNAMIC_WORKAREA_H - $_WINDOW_DECORATED_H ) * 8 / 8 ) ))
# echo            $(( 33                   + ( ( 1023                 - 228                  ) * 8 / 8 ) )) # =  828 (desktop)
# echo            $(( 0                    + ( ( 1080                 - 228                  ) * 8 / 8 ) )) # =  852 (overall)
#- (3x3) (5x5) (9x9) -#
#- marker 4 -#
  fi

  #- force to fits -#

  #+ tweaks +#

  # - (1/2)
  # - tweak X position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  if $_BOOLEAN_MAXIMIZED_X
  then
#+ marker -0 +#
#    _COORDINATE_X=-0
    _COORDINATE_X=-1
#- marker -0 -#
  fi

  # - (2/2)
  # - tweak Y position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  if $_BOOLEAN_MAXIMIZED_Y
  then
#+ marker -0 +#
#    _COORDINATE_Y=-0
    _COORDINATE_Y=-1
#- marker -0 -#
  fi

  #- tweaks -#

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_validate -#"
}

function _eko_iod()
{
  #+ _eko_iod +#

  # functions:

  # variables:
  # #
  # @
  # FUNCNAME (single dimension indexed array)
  # _BOOLEAN_DEBUG

  # binaries:

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "$(( ${#FUNCNAME[@]} - 3 ))"? to account for main, parent, current
  # - pay special attention to the "*" in "%*s". it's part of the magic

  if $_BOOLEAN_DEBUG
  then
    # - fast & fancy indenting/"outdenting"
    # - $((expression))
    # - ${#parameter}
    printf "%*s" $(( ${#FUNCNAME[@]} - 3 ))
    echo "$@"
  fi

  #- _eko_iod -#
}

function _eko_ps()
{
  #+ _eko_ps +#

  # functions:

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:

  # builtins:
  # echo
  # printf
  # shift

  # NOTE:
  # - why "%36s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is supported. simply pass "" as the
  #   first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%36s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_ps -#
}

function _eko_ps_en()
{
  #+ _eko_ps_en +#

  # functions:

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:

  # builtins:
  # echo
  # printf
  # shift

  # NOTE:
  # - why "%36s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is supported. simply pass "" as the
  #   first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%36s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_ps_en -#
}

function _eko_pv()
{
  #+ _eko_pv +#

  # functions:

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:

  # builtins:
  # echo
  # printf
  # shift

  # NOTE:
  # - why "%39s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is supported. simply pass "" as the
  #   first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%39s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_pv -#
}

function _eko_pv_en()
{
  #+ _eko_pv_en +#

  # functions:

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:

  # builtins:
  # echo
  # printf
  # shift

  # NOTE:
  # - why "%39s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is supported. simply pass "" as the
  #   first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%39s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_pv_en -#
}

function _get_net_active_window_window()
{
  _eko_iod "#+ _get_net_active_window_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_ACTIVE_WINDOW_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_ACTIVE_WINDOW, WINDOW/32

  # "_NET_ACTIVE_WINDOW(WINDOW): window id # "
  # "0xa000b3"

  # NOTE:
  # - do we need this? I don't think so. at least, not for now
  # - or do we? when it comes time to move the window, use this Window ID if
  #   none was specified. result: currently focussed window will be processed
  # - interesting discovery: "_NET_ACTIVE_WINDOW(WINDOW): window id # 0x0" is
  #   returned in a desktop containing no _NET_WM_WINDOW_TYPE_NORMAL windows
  #   (or if any _NET_WM_WINDOW_TYPE_NORMAL windows exist, they're minimized)
  # > is this behaviour specific to openbox? find out
  # > regardless, the recent changes in "function _pass_fail_by_window_id"
  #   consider this as a "does not exist" error if "id 0x0" is specified on
  #   the commandline

  _NET_ACTIVE_WINDOW_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_ACTIVE_WINDOW(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_ACTIVE_WINDOW_WINDOW: \""$_NET_ACTIVE_WINDOW_WINDOW\" (unused)"

  _eko_iod "#- _get_net_active_window_window -#"
}

function _get_net_client_list_stacking_window()
{
  _eko_iod "#+ _get_net_client_list_stacking_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CLIENT_LIST_STACKING_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_CLIENT_LIST_STACKING, WINDOW[]/32

  # "_NET_CLIENT_LIST_STACKING(WINDOW): window id # "
  # "0xa00009, "
  # etc, etc
  # "0x1200004"

  _NET_CLIENT_LIST_STACKING_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CLIENT_LIST_STACKING(WINDOW): window id # /!d ; /\(.* # \|,\)/ s///g')

  _eko_pv \$_NET_CLIENT_LIST_STACKING_WINDOW: \""$_NET_CLIENT_LIST_STACKING_WINDOW\" (unused)"

  _eko_iod "#- _get_net_client_list_stacking_window -#"
}

function _get_net_client_list_window()
{
  _eko_iod "#+ _get_net_client_list_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CLIENT_LIST_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_CLIENT_LIST, WINDOW[]/32

  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0xe00008, "
  # etc, etc
  # "0x36007a2"

  _NET_CLIENT_LIST_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d ; /\(.* # \|,\)/ s///g')

  _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\""

  _eko_iod "#- _get_net_client_list_window -#"
}

function _get_net_current_desktop_cardinal()
{
  _eko_iod "#+ _get_net_current_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

  # "_NET_CURRENT_DESKTOP(CARDINAL) = "
  # "0"

  # NOTE:
  # - this is always an integer between 0 and _NET_NUMBER_OF_DESKTOPS - 1
  # - starts at "0" not "1"

  _NET_CURRENT_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CURRENT_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\" (embedded)"

  _eko_iod "#- _get_net_current_desktop_cardinal -#"
}

function _get_net_desktop_geometry_cardinal()
{
  _eko_iod "#+ _get_net_desktop_geometry_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  _NET_DESKTOP_GEOMETRY_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_GEOMETRY(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_GEOMETRY_CARDINAL: \""$_NET_DESKTOP_GEOMETRY_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_DESKTOP_GEOMETRY_W \
  _NET_DESKTOP_GEOMETRY_H \
  <<< \
  $_NET_DESKTOP_GEOMETRY_CARDINAL

  _eko_pv \$_NET_DESKTOP_GEOMETRY_W: \""$_NET_DESKTOP_GEOMETRY_W\""
  _eko_pv \$_NET_DESKTOP_GEOMETRY_H: \""$_NET_DESKTOP_GEOMETRY_H\""

  _eko_iod "#- _get_net_desktop_geometry_cardinal -#"
}

function _get_net_desktop_layout_cardinal()
{
  _eko_iod "#+ _get_net_desktop_layout_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_DESKTOP_LAYOUT_C
  # _NET_DESKTOP_LAYOUT_CARDINAL
  # _NET_DESKTOP_LAYOUT_O
  # _NET_DESKTOP_LAYOUT_R
  # _NET_DESKTOP_LAYOUT_S
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_DESKTOP_LAYOUT, orientation, columns, rows, starting_corner CARDINAL[4]/32

  # "_NET_DESKTOP_LAYOUT(CARDINAL) = "
  # "1, "
  # "1, "
  # "0, "
  # "0"

  _NET_DESKTOP_LAYOUT_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_LAYOUT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_LAYOUT_CARDINAL: \""$_NET_DESKTOP_LAYOUT_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_DESKTOP_LAYOUT_O \
  _NET_DESKTOP_LAYOUT_C \
  _NET_DESKTOP_LAYOUT_R \
  _NET_DESKTOP_LAYOUT_S \
  <<< \
  $_NET_DESKTOP_LAYOUT_CARDINAL

  _eko_pv \$_NET_DESKTOP_LAYOUT_O: \""$_NET_DESKTOP_LAYOUT_O\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_C: \""$_NET_DESKTOP_LAYOUT_C\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_R: \""$_NET_DESKTOP_LAYOUT_R\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_S: \""$_NET_DESKTOP_LAYOUT_S\""

  _eko_iod "#- _get_net_desktop_layout_cardinal -#"
}

function _get_net_desktop_names_utf8_string()
{
  _eko_iod "#+ _get_net_desktop_names_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COUNTER
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_WM_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_DESKTOP_NAMES, UTF8_STRING[]

  # "_NET_DESKTOP_NAMES(UTF8_STRING) = "
  # ""I", "
  # ""II", "
  # ""III", "
  # ""IV", "
  # ""V", "
  # ""VI", "
  # ""VII", "
  # ""VIII""

  # NOTE:
  # - unlike cardinal types, utf-8 requires special handling
  # - after quite a bit of experimenting, the following brute force method
  #   appears to work well enough for this particular case. if it's *not*
  #   performing on your system as expected, let me know so I can fix it
  # - method: preserve anything & everything *between* pairs of doublequotes,
  #   including the doublequotes themselves

  _NET_DESKTOP_NAMES_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_NAMES(UTF8_STRING) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_NAMES_UTF8_STRING: \""$_NET_DESKTOP_NAMES_UTF8_STRING\""

  # IDEA:
  # - don't modify the original string
  # - go through its entire length character by character, looking for
  #   "doublequote" & "doublequote space doublequote"
  # - note the position of each type of match
  # - set $_NET_DESKTOP_NAME_UTF8_STRING from the appropriate segment of
  #   $_NET_DESKTOP_NAMES_UTF8_STRING
  # - requires $_NET_WM_DESKTOP_CARDINAL for the correct offset

  # - 4294967295 = 0xFFFFFFFF = sticky = all desktops
  # - "arg1 -ne arg2" = returns true if arg1 is not equal to arg2
  if [[ $_NET_WM_DESKTOP_CARDINAL -ne 4294967295 ]]
  then
    # - be explicit for clarity
    _COUNTER=0
    _POSITION_CURRENT=0
    unset _POSITION_FINISH
    unset _POSITION_START

    # - ${#parameter}
    # - "arg1 -lt arg2" = returns true if arg1 is less than arg2
    # - "arg1 -le arg2" = returns true if arg1 is less than or equal to arg2
    while [[ $_POSITION_CURRENT -lt ${#_NET_DESKTOP_NAMES_UTF8_STRING} ]] \
    && [[ $_COUNTER -le $_NET_WM_DESKTOP_CARDINAL ]]
    do

      # - ${parameter:offset:length}
      if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:1} == \" ]]
      then
        # - ${parameter:offset:length}
        if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:3} == \"\ \" ]]
        then
          _POSITION_FINISH=$_POSITION_CURRENT
        else
          # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
          # - $((expression))
          # - ${#parameter}
          if [[ $_POSITION_CURRENT -eq $(( ${#_NET_DESKTOP_NAMES_UTF8_STRING} - 1 )) ]]
          then
            _POSITION_FINISH=$_POSITION_CURRENT
          else
            _POSITION_START=$_POSITION_CURRENT
          fi
        fi
      fi

      # - "-n string" = true if the length of string is non-zero
      if [[ -n $_POSITION_FINISH ]] \
      && [[ -n $_POSITION_START ]]
      then
        # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
        if [[ $_COUNTER -eq $_NET_WM_DESKTOP_CARDINAL ]]
        then
          # - ${parameter:offset:length}
          # - $((expression))
          _NET_DESKTOP_NAME_UTF8_STRING=${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_START:$(( $_POSITION_FINISH - $_POSITION_START + 1 ))}
        fi

        unset _POSITION_FINISH
        unset _POSITION_START
        # - ((expression))
        # - id++ = variable post-increment
        ((_COUNTER++))
      fi

      # - ((expression))
      # - id++ = variable post-increment
      ((_POSITION_CURRENT++))
    done

    _eko_pv \$_NET_DESKTOP_NAME_UTF8_STRING: \""$_NET_DESKTOP_NAME_UTF8_STRING\""
  fi

  _eko_iod "#- _get_net_desktop_names_utf8_string -#"
}

function _get_net_desktop_viewport_cardinal()
{
  _eko_iod "#+ _get_net_desktop_viewport_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _NET_DESKTOP_VIEWPORT_X
  # _NET_DESKTOP_VIEWPORT_Y
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32

  # "_NET_DESKTOP_VIEWPORT(CARDINAL) = "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0"

  # NOTE:
  # - Openbox doesn't support large desktops so these are just (0, 0).

  _NET_DESKTOP_VIEWPORT_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_VIEWPORT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_VIEWPORT_CARDINAL: \""$_NET_DESKTOP_VIEWPORT_CARDINAL\""

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod

    # variables:
    # @ (_NET_DESKTOP_VIEWPORT_CARDINAL)
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _NET_WM_DESKTOP_CARDINAL
    # _OPTIONS_READ (read options, not script options)
    # _XX0

    # binaries:

    # builtins:
    # read
    # shift

    # NET: (embedded)
    # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

    # "_NET_CURRENT_DESKTOP(CARDINAL) = "
    # "0"

    # NET: (main)
    # - _NET_WM_DESKTOP, CARDINAL/32

    # "_NET_WM_DESKTOP(CARDINAL) = "
    # "0"

    # NET: (parent)
    # - _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32

    # "_NET_DESKTOP_VIEWPORT(CARDINAL) = "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0"

    # - 4294967295 = 0xFFFFFFFF = sticky = all desktops
    # - "-z string" = true if the length of string is zero
    # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
    if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
    || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
    then
      shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 2 ))
    else
      shift $(( $_NET_WM_DESKTOP_CARDINAL * 2 ))
    fi

    read $_OPTIONS_READ -- \
    _NET_DESKTOP_VIEWPORT_X \
    _NET_DESKTOP_VIEWPORT_Y \
    _XX0 \
    <<< \
    $@

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_DESKTOP_VIEWPORT_CARDINAL

  _eko_pv \$_NET_DESKTOP_VIEWPORT_X: \""$_NET_DESKTOP_VIEWPORT_X\""
  _eko_pv \$_NET_DESKTOP_VIEWPORT_Y: \""$_NET_DESKTOP_VIEWPORT_Y\""

  _eko_iod "#- _get_net_desktop_viewport_cardinal -#"
}

function _get_net_frame_extents_cardinal()
{
  _eko_iod "#+ _get_net_frame_extents_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_FRAME_EXTENTS(CARDINAL) = "
  # "1, "
  # "1, "
  # "22, "
  # "6"

  _NET_FRAME_EXTENTS_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_FRAME_EXTENTS(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  # - openbox dock (possibly others?) returns absolutely nothing here. provide
  #   safe values
  # - "-z string" = true if the length of string is zero
  if [[ -z $_NET_FRAME_EXTENTS_CARDINAL ]]
  then
    _NET_FRAME_EXTENTS_CARDINAL="0 0 0 0"
  fi

  _eko_pv \$_NET_FRAME_EXTENTS_CARDINAL: \""$_NET_FRAME_EXTENTS_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_FRAME_EXTENTS_L \
  _NET_FRAME_EXTENTS_R \
  _NET_FRAME_EXTENTS_T \
  _NET_FRAME_EXTENTS_B \
  <<< \
  $_NET_FRAME_EXTENTS_CARDINAL

  # NOTE:
  # - reordered the display from (L,R,T,B) to (L,T,R,B) for uniformity

  _eko_pv \$_NET_FRAME_EXTENTS_L: \""$_NET_FRAME_EXTENTS_L\""
  _eko_pv \$_NET_FRAME_EXTENTS_T: \""$_NET_FRAME_EXTENTS_T\""
  _eko_pv \$_NET_FRAME_EXTENTS_R: \""$_NET_FRAME_EXTENTS_R\""
  _eko_pv \$_NET_FRAME_EXTENTS_B: \""$_NET_FRAME_EXTENTS_B\""

  _eko_iod "#- _get_net_frame_extents_cardinal -#"
}

function _get_net_number_of_desktops_cardinal()
{
  _eko_iod "#+ _get_net_number_of_desktops_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_NUMBER_OF_DESKTOPS, CARDINAL/32

  # "_NET_NUMBER_OF_DESKTOPS(CARDINAL) = "
  # "8"

  # NOTE:
  # - starts at "1" not "0"

  _NET_NUMBER_OF_DESKTOPS_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_NUMBER_OF_DESKTOPS(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_NUMBER_OF_DESKTOPS_CARDINAL: \""$_NET_NUMBER_OF_DESKTOPS_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_number_of_desktops_cardinal -#"
}

function _get_net_showing_desktop_cardinal()
{
  _eko_iod "#+ _get_net_showing_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SHOWING_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_SHOWING_DESKTOP desktop, CARDINAL/32

  # "_NET_SHOWING_DESKTOP(CARDINAL) = "
  # "0"

  _NET_SHOWING_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SHOWING_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_SHOWING_DESKTOP_CARDINAL: \""$_NET_SHOWING_DESKTOP_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_showing_desktop_cardinal -#"
}

function _get_net_supported_atom()
{
  _eko_iod "#+ _get_net_supported_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SUPPORTED_ATOM
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_SUPPORTED, ATOM[]/32

  # "_NET_SUPPORTED(ATOM) = "
  # "_NET_SUPPORTING_WM_CHECK, "
  # etc, etc
  # "_OB_APP_TYPE"

  _NET_SUPPORTED_ATOM=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SUPPORTED(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_SUPPORTED_ATOM: \""$_NET_SUPPORTED_ATOM\" (unused)"

  _eko_iod "#- _get_net_supported_atom -#"
}

function _get_net_supporting_wm_check_window()
{
  _eko_iod "#+ _get_net_supporting_wm_check_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SUPPORTING_WM_CHECK_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_SUPPORTING_WM_CHECK, WINDOW/32

  # "_NET_SUPPORTING_WM_CHECK(WINDOW): window id # "
  # "0x8000bb"

  _NET_SUPPORTING_WM_CHECK_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SUPPORTING_WM_CHECK(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_SUPPORTING_WM_CHECK_WINDOW: \""$_NET_SUPPORTING_WM_CHECK_WINDOW\" (unused)"

  _eko_iod "#- _get_net_supporting_wm_check_window -#"
}

function _get_net_virtual_roots_window()
{
  _eko_iod "#+ _get_net_virtual_roots_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_VIRTUAL_ROOTS_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_VIRTUAL_ROOTS, WINDOW[]/32

  # - no example available in openbox. Sherlock Holmes to the rescue
  # - sed syntax derived from the freedesktop description
  # ^ assumed to be the same as _NET_CLIENT_LIST & _NET_CLIENT_LIST_STACKING

  # NOTE:
  # - Openbox does not use virtual roots, so this is not needed.

  _NET_VIRTUAL_ROOTS_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_VIRTUAL_ROOTS(WINDOW): window id # /!d ; /\(.* # \|,\)/ s///g')

  _eko_pv \$_NET_VIRTUAL_ROOTS_WINDOW: \""$_NET_VIRTUAL_ROOTS_WINDOW\" (unused)"

  _eko_iod "#- _get_net_virtual_roots_window -#"
}

function _get_net_wm_allowed_actions_atom()
{
  _eko_iod "#+ _get_net_wm_allowed_actions_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ALLOWED_ACTIONS_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_ALLOWED_ACTIONS, ATOM[]

  # "_NET_WM_ALLOWED_ACTIONS(ATOM) = "
  # "_NET_WM_ACTION_CHANGE_DESKTOP, "
  # "_NET_WM_ACTION_SHADE, "
  # "_NET_WM_ACTION_CLOSE, "
  # "_NET_WM_ACTION_MOVE, "
  # "_NET_WM_ACTION_MINIMIZE, "
  # "_NET_WM_ACTION_RESIZE, "
  # "_NET_WM_ACTION_FULLSCREEN, "
  # "_NET_WM_ACTION_MAXIMIZE_HORZ, "
  # "_NET_WM_ACTION_MAXIMIZE_VERT, "
  # "_NET_WM_ACTION_ABOVE, "
  # "_NET_WM_ACTION_BELOW"

  # (sorted listing from the original source)
  #   _NET_WM_ACTION_ABOVE, ATOM
  #   _NET_WM_ACTION_BELOW, ATOM
  #   _NET_WM_ACTION_CHANGE_DESKTOP, ATOM
  #   _NET_WM_ACTION_CLOSE, ATOM
  #   _NET_WM_ACTION_FULLSCREEN, ATOM
  #   _NET_WM_ACTION_MAXIMIZE_HORZ, ATOM
  #   _NET_WM_ACTION_MAXIMIZE_VERT, ATOM
  #   _NET_WM_ACTION_MINIMIZE, ATOM
  #   _NET_WM_ACTION_MOVE, ATOM
  #   _NET_WM_ACTION_RESIZE, ATOM
  #   _NET_WM_ACTION_SHADE, ATOM
  #   _NET_WM_ACTION_STICK, ATOM

  # NOTE: (_NET_WM_ACTION_STICK)
  # - Openbox does not do large desktops, so no sticky state is needed.

  _NET_WM_ALLOWED_ACTIONS_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ALLOWED_ACTIONS(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_ALLOWED_ACTIONS_ATOM: \""$_NET_WM_ALLOWED_ACTIONS_ATOM\" (unused)"

  _eko_iod "#- _get_net_wm_allowed_actions_atom -#"
}

function _get_net_wm_bypass_compositor_cardinal()
{
  _eko_iod "#+ _get_net_wm_bypass_compositor_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_BYPASS_COMPOSITOR_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_BYPASS_COMPOSITOR, CARDINAL/32

  # - no example available in openbox. Sherlock Holmes to the rescue
  # - sed syntax derived from the freedesktop description
  # ^ assumed to be the same as _NET_WM_DESKTOP & _NET_WM_PID

  _NET_WM_BYPASS_COMPOSITOR_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_BYPASS_COMPOSITOR(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_BYPASS_COMPOSITOR_CARDINAL: \""$_NET_WM_BYPASS_COMPOSITOR_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_bypass_compositor_cardinal -#"
}

function _get_net_wm_desktop_cardinal()
{
  _eko_iod "#+ _get_net_wm_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _get_net_current_desktop_cardinal

  # variables:
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_DESKTOP, CARDINAL/32

  # "_NET_WM_DESKTOP(CARDINAL) = "
  # "0"

  # NOTE:
  # - this is the desktop upon which the defined window is displayed

  # NOTE:
  # - starts at "0" not "1"

  _NET_WM_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  # NOTE:
  # - deliberately doing things this way so the substitution (if it occurs) is
  #   obvious when "-v, --verbose" is specified

  # - 4294967295 = 0xFFFFFFFF = sticky = all desktops
  # - "-z string" = true if the length of string is zero
  # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
  if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
  || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
  then
    _get_net_current_desktop_cardinal
    _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\" (using \"$_NET_CURRENT_DESKTOP_CARDINAL\")"
  else
    _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\""
  fi

  _eko_iod "#- _get_net_wm_desktop_cardinal -#"
}

function _get_net_wm_icon_geometry_cardinal()
{
  _eko_iod "#+ _get_net_wm_icon_geometry_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ICON_GEOMETRY_CARDINAL
  # _NET_WM_ICON_GEOMETRY_H
  # _NET_WM_ICON_GEOMETRY_W
  # _NET_WM_ICON_GEOMETRY_X
  # _NET_WM_ICON_GEOMETRY_Y
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32

  # "_NET_WM_ICON_GEOMETRY(CARDINAL) = "
  # "1588, "
  # "1056, "
  # "117, "
  # "24"

  _NET_WM_ICON_GEOMETRY_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ICON_GEOMETRY(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_ICON_GEOMETRY_CARDINAL: \""$_NET_WM_ICON_GEOMETRY_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_ICON_GEOMETRY_X \
  _NET_WM_ICON_GEOMETRY_Y \
  _NET_WM_ICON_GEOMETRY_W \
  _NET_WM_ICON_GEOMETRY_H \
  <<< \
  $_NET_WM_ICON_GEOMETRY_CARDINAL

  _eko_pv \$_NET_WM_ICON_GEOMETRY_X: \""$_NET_WM_ICON_GEOMETRY_X\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_Y: \""$_NET_WM_ICON_GEOMETRY_Y\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_W: \""$_NET_WM_ICON_GEOMETRY_W\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_H: \""$_NET_WM_ICON_GEOMETRY_H\""

  _eko_iod "#- _get_net_wm_icon_geometry_cardinal -#"
}

function _get_net_wm_icon_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_icon_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ICON_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_ICON_NAME, UTF8_STRING

  # "_NET_WM_ICON_NAME(UTF8_STRING) = "
  # ""Mozilla Firefox""

  _NET_WM_ICON_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ICON_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_ICON_NAME_UTF8_STRING: \""$_NET_WM_ICON_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_icon_name_utf8_string -#"
}

function _get_net_wm_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_NAME, UTF8_STRING

  # "_NET_WM_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

  # NOTE:
  # - we need this for "function _coordinates_kludge"

  _NET_WM_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_NAME_UTF8_STRING: \""$_NET_WM_NAME_UTF8_STRING\""

  _eko_iod "#- _get_net_wm_name_utf8_string -#"
}

function _get_net_wm_opaque_region_cardinal()
{
  _eko_iod "#+ _get_net_wm_opaque_region_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_OPAQUE_REGION_CARDINAL
  # _NET_WM_OPAQUE_REGION_H
  # _NET_WM_OPAQUE_REGION_W
  # _NET_WM_OPAQUE_REGION_X
  # _NET_WM_OPAQUE_REGION_Y
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32

  # "_NET_WM_ICON_GEOMETRY(CARDINAL) = "
  # "1588, "
  # "1056, "
  # "117, "
  # "24"

  _NET_WM_OPAQUE_REGION_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_OPAQUE_REGION(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_OPAQUE_REGION_CARDINAL: \""$_NET_WM_OPAQUE_REGION_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_OPAQUE_REGION_X \
  _NET_WM_OPAQUE_REGION_Y \
  _NET_WM_OPAQUE_REGION_W \
  _NET_WM_OPAQUE_REGION_H \
  <<< \
  $_NET_WM_OPAQUE_REGION_CARDINAL

  _eko_pv \$_NET_WM_OPAQUE_REGION_X: \""$_NET_WM_OPAQUE_REGION_X\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_Y: \""$_NET_WM_OPAQUE_REGION_Y\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_W: \""$_NET_WM_OPAQUE_REGION_W\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_H: \""$_NET_WM_OPAQUE_REGION_H\""

  _eko_iod "#- _get_net_wm_opaque_region_cardinal -#"
}

function _get_net_wm_pid_cardinal()
{
  _eko_iod "#+ _get_net_wm_pid_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_PID_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_PID, CARDINAL/32

  # "_NET_WM_PID(CARDINAL) = 1454"
  # "1454"

  # NOTE:
  # - Openbox does not currently kill processes.

  _NET_WM_PID_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_PID(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_PID_CARDINAL: \""$_NET_WM_PID_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_pid_cardinal -#"
}

function _get_net_wm_state_atom()
{
  _eko_iod "#+ _get_net_wm_state_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _NET_WM_STATE_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # false
  # true

  # NET:
  # - _NET_WM_STATE, ATOM[]

  # (sorted listing from the original source)
  #   _NET_WM_STATE_ABOVE, ATOM
  #   _NET_WM_STATE_BELOW, ATOM
  #   _NET_WM_STATE_DEMANDS_ATTENTION, ATOM
  #   _NET_WM_STATE_FOCUSED, ATOM
  #   _NET_WM_STATE_FULLSCREEN, ATOM
  #   _NET_WM_STATE_HIDDEN, ATOM
  #   _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
  #   _NET_WM_STATE_MAXIMIZED_VERT, ATOM
  #   _NET_WM_STATE_MODAL, ATOM
  #   _NET_WM_STATE_SHADED, ATOM
  #   _NET_WM_STATE_SKIP_PAGER, ATOM
  #   _NET_WM_STATE_SKIP_TASKBAR, ATOM
  #   _NET_WM_STATE_STAYS_ON_TOP, ATOM (qt specific)
  #   _NET_WM_STATE_STICKY, ATOM

  _NET_WM_STATE_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STATE(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STATE_ATOM: \""$_NET_WM_STATE_ATOM\""

  # - decipher window's state (horizontal &/or vertical maximized)
  # - doing so here is as good as anywhere else

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
  then
    _BOOLEAN_MAXIMIZED_X=true
  else
    _BOOLEAN_MAXIMIZED_X=false
  fi

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
  then
    _BOOLEAN_MAXIMIZED_Y=true
  else
    _BOOLEAN_MAXIMIZED_Y=false
  fi

  _eko_pv \$_BOOLEAN_MAXIMIZED_X: \""$_BOOLEAN_MAXIMIZED_X\""
  _eko_pv \$_BOOLEAN_MAXIMIZED_Y: \""$_BOOLEAN_MAXIMIZED_Y\""

  _eko_iod "#- _get_net_wm_state_atom -#"
}

function _get_net_wm_strut_cardinal()
{
  _eko_iod "#+ _get_net_wm_strut_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_STRUT_B
  # _NET_WM_STRUT_CARDINAL
  # _NET_WM_STRUT_L
  # _NET_WM_STRUT_R
  # _NET_WM_STRUT_T
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  #  - _NET_WM_STRUT, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_WM_STRUT(CARDINAL) = "
  # "0, "
  # "0, "
  # "0, "
  # "24"

  _NET_WM_STRUT_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STRUT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STRUT_CARDINAL: \""$_NET_WM_STRUT_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_STRUT_L \
  _NET_WM_STRUT_R \
  _NET_WM_STRUT_T \
  _NET_WM_STRUT_B \
  <<< \
  $_NET_WM_STRUT_CARDINAL

  # NOTE:
  # - reordered the display from (L,R,T,B) to (L,T,R,B) for uniformity

  _eko_pv \$_NET_WM_STRUT_L: \""$_NET_WM_STRUT_L\""
  _eko_pv \$_NET_WM_STRUT_T: \""$_NET_WM_STRUT_T\""
  _eko_pv \$_NET_WM_STRUT_R: \""$_NET_WM_STRUT_R\""
  _eko_pv \$_NET_WM_STRUT_B: \""$_NET_WM_STRUT_B\""

  _eko_iod "#- _get_net_wm_strut_cardinal -#"
}

function _get_net_wm_strut_partial_cardinal()
{
  _eko_iod "#+ _get_net_wm_strut_partial_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_STRUT_PARTIAL_B
  # _NET_WM_STRUT_PARTIAL_BEX
  # _NET_WM_STRUT_PARTIAL_BSX
  # _NET_WM_STRUT_PARTIAL_CARDINAL
  # _NET_WM_STRUT_PARTIAL_L
  # _NET_WM_STRUT_PARTIAL_LEY
  # _NET_WM_STRUT_PARTIAL_LSY
  # _NET_WM_STRUT_PARTIAL_R
  # _NET_WM_STRUT_PARTIAL_REY
  # _NET_WM_STRUT_PARTIAL_RSY
  # _NET_WM_STRUT_PARTIAL_T
  # _NET_WM_STRUT_PARTIAL_TEX
  # _NET_WM_STRUT_PARTIAL_TSX
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NET:
  #  - _NET_WM_STRUT_PARTIAL, left, right, top, bottom, left_start_y, left_end_y, right_start_y, right_end_y, top_start_x, top_end_x, bottom_start_x, bottom_end_x, CARDINAL[12]/32

  # "_NET_WM_STRUT_PARTIAL(CARDINAL) = "
  # "0, "
  # "0, "
  # "0, "
  # "24, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "1919"

  # NOTE:
  # - Openbox uses these to create per-monitor struts in Xinerama setups.

  _NET_WM_STRUT_PARTIAL_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STRUT_PARTIAL(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STRUT_PARTIAL_CARDINAL: \""$_NET_WM_STRUT_PARTIAL_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_STRUT_PARTIAL_L \
  _NET_WM_STRUT_PARTIAL_R \
  _NET_WM_STRUT_PARTIAL_T \
  _NET_WM_STRUT_PARTIAL_B \
  _NET_WM_STRUT_PARTIAL_LSY \
  _NET_WM_STRUT_PARTIAL_LEY \
  _NET_WM_STRUT_PARTIAL_RSY \
  _NET_WM_STRUT_PARTIAL_REY \
  _NET_WM_STRUT_PARTIAL_TSX \
  _NET_WM_STRUT_PARTIAL_TEX \
  _NET_WM_STRUT_PARTIAL_BSX \
  _NET_WM_STRUT_PARTIAL_BEX \
  <<< \
  $_NET_WM_STRUT_PARTIAL_CARDINAL

  # NOTE:
  # - reordered the display from (L,R,T,B) to (L,T,R,B) for uniformity

  _eko_pv \$_NET_WM_STRUT_PARTIAL_L: \""$_NET_WM_STRUT_PARTIAL_L\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_T: \""$_NET_WM_STRUT_PARTIAL_T\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_R: \""$_NET_WM_STRUT_PARTIAL_R\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_B: \""$_NET_WM_STRUT_PARTIAL_B\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_LSY: \""$_NET_WM_STRUT_PARTIAL_LSY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_LEY: \""$_NET_WM_STRUT_PARTIAL_LEY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_TSX: \""$_NET_WM_STRUT_PARTIAL_TSX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_TEX: \""$_NET_WM_STRUT_PARTIAL_TEX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_RSY: \""$_NET_WM_STRUT_PARTIAL_RSY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_REY: \""$_NET_WM_STRUT_PARTIAL_REY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_BSX: \""$_NET_WM_STRUT_PARTIAL_BSX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_BEX: \""$_NET_WM_STRUT_PARTIAL_BEX\""

  _eko_iod "#- _get_net_wm_strut_partial_cardinal -#"
}

function _get_net_wm_sync_request_counter_cardinal()
{
  _eko_iod "#+ _get_net_wm_sync_request_counter_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_SYNC_REQUEST_COUNTER, ?, ?, CARDINAL[]/32

  # "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = "
  # "56625144, "
  # "56625145"

  _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_SYNC_REQUEST_COUNTER_CARDINAL: \""$_NET_WM_SYNC_REQUEST_COUNTER_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_sync_request_counter_cardinal -#"
}

function _get_net_wm_user_time_cardinal()
{
  _eko_iod "#+ _get_net_wm_user_time_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_USER_TIME_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_USER_TIME CARDINAL/32

  # "_NET_WM_USER_TIME(CARDINAL) = "
  # "2553561896"

  _NET_WM_USER_TIME_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_USER_TIME(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_USER_TIME_CARDINAL: \""$_NET_WM_USER_TIME_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_user_time_cardinal -#"
}

function _get_net_wm_user_time_window_window()
{
  _eko_iod "#+ _get_net_wm_user_time_window_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_USER_TIME_WINDOW_WINDOW
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_USER_TIME_WINDOW WINDOW/32

  # "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # "
  # "0x36007f7"

  _NET_WM_USER_TIME_WINDOW_WINDOW=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_USER_TIME_WINDOW(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_WM_USER_TIME_WINDOW_WINDOW: \""$_NET_WM_USER_TIME_WINDOW_WINDOW\" (unused)"

  _eko_iod "#- _get_net_wm_user_time_window_window -#"
}

function _get_net_wm_visible_icon_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_visible_icon_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_VISIBLE_ICON_NAME, UTF8_STRING

  # "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

  _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_VISIBLE_ICON_NAME_UTF8_STRING: \""$_NET_WM_VISIBLE_ICON_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_visible_icon_name_utf8_string -#"
}

function _get_net_wm_visible_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_visible_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_VISIBLE_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_VISIBLE_NAME, UTF8_STRING

  # "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

  _NET_WM_VISIBLE_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_VISIBLE_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_VISIBLE_NAME_UTF8_STRING: \""$_NET_WM_VISIBLE_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_visible_name_utf8_string -#"
}

function _get_net_wm_window_type_atom()
{
  _eko_iod "#+ _get_net_wm_window_type_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_WINDOW_TYPE_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_WINDOW_TYPE, ATOM[]/32

  # "_NET_WM_WINDOW_TYPE(ATOM) = "
  # "_NET_WM_WINDOW_TYPE_UTILITY, "
  # "_KDE_NET_WM_WINDOW_TYPE_OVERRIDE, "
  # "_NET_WM_WINDOW_TYPE_NORMAL"

  # (sorted listing from the original source)
  #   _NET_WM_WINDOW_TYPE_COMBO, ATOM
  #   _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
  #   _NET_WM_WINDOW_TYPE_DIALOG, ATOM
  #   _NET_WM_WINDOW_TYPE_DND, ATOM
  #   _NET_WM_WINDOW_TYPE_DOCK, ATOM
  #   _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_NORMAL, ATOM
  #   _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
  #   _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_SPLASH, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
  #   _NET_WM_WINDOW_TYPE_UTILITY, ATOM

  _NET_WM_WINDOW_TYPE_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_WINDOW_TYPE_ATOM: \""$_NET_WM_WINDOW_TYPE_ATOM\""

  _eko_iod "#- _get_net_wm_window_type_atom -#"
}

function _get_net_workarea_cardinal()
{
  _eko_iod "#+ _get_net_workarea_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _BOOLEAN_OVERALL
  # _DYNAMIC_TYPE
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_WORKAREA_CARDINAL
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _NET_WORKAREA_X
  # _NET_WORKAREA_Y
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

  # "_NET_WORKAREA(CARDINAL) = "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056"

  _NET_WORKAREA_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_WORKAREA(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WORKAREA_CARDINAL: \""$_NET_WORKAREA_CARDINAL\""

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod

    # variables:
    # @ (_NET_WORKAREA_CARDINAL)
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_WM_DESKTOP_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _XX0

    # binaries:

    # builtins:
    # read
    # shift

    # NET: (embedded)
    # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

    # "_NET_CURRENT_DESKTOP(CARDINAL) = "
    # "0"

    # NET: (main)
    # - _NET_WM_DESKTOP, CARDINAL/32

    # "_NET_WM_DESKTOP(CARDINAL) = "
    # "0"

    # NET: (parent)
    # - _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

    # "_NET_WORKAREA(CARDINAL) = "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056"

    # - 4294967295 = 0xFFFFFFFF = sticky = all desktops
    # - "-z string" = true if the length of string is zero
    # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
    if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
    || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
    then
      shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 4 ))
    else
      shift $(( $_NET_WM_DESKTOP_CARDINAL * 4 ))
    fi

    read $_OPTIONS_READ -- \
    _NET_WORKAREA_X \
    _NET_WORKAREA_Y \
    _NET_WORKAREA_W \
    _NET_WORKAREA_H \
    _XX0 \
    <<< \
    $@

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_WORKAREA_CARDINAL

  _eko_pv \$_NET_WORKAREA_X: \""$_NET_WORKAREA_X\""
  _eko_pv \$_NET_WORKAREA_Y: \""$_NET_WORKAREA_Y\""
  _eko_pv \$_NET_WORKAREA_W: \""$_NET_WORKAREA_W\""
  _eko_pv \$_NET_WORKAREA_H: \""$_NET_WORKAREA_H\""

  if $_BOOLEAN_OVERALL
  then
    _DYNAMIC_TYPE=overall
    _DYNAMIC_WORKAREA_X=0
    _DYNAMIC_WORKAREA_Y=0
    _DYNAMIC_WORKAREA_W=$_NET_DESKTOP_GEOMETRY_W
    _DYNAMIC_WORKAREA_H=$_NET_DESKTOP_GEOMETRY_H
  else
    _DYNAMIC_TYPE=desktop
    _DYNAMIC_WORKAREA_X=$_NET_WORKAREA_X
    _DYNAMIC_WORKAREA_Y=$_NET_WORKAREA_Y
    _DYNAMIC_WORKAREA_W=$_NET_WORKAREA_W
    _DYNAMIC_WORKAREA_H=$_NET_WORKAREA_H
  fi

  _eko_pv \$_DYNAMIC_TYPE: \""$_DYNAMIC_TYPE\""
  _eko_pv \$_DYNAMIC_WORKAREA_X: \""$_DYNAMIC_WORKAREA_X\""
  _eko_pv \$_DYNAMIC_WORKAREA_Y: \""$_DYNAMIC_WORKAREA_Y\""
  _eko_pv \$_DYNAMIC_WORKAREA_W: \""$_DYNAMIC_WORKAREA_W\""
  _eko_pv \$_DYNAMIC_WORKAREA_H: \""$_DYNAMIC_WORKAREA_H\""

  _eko_iod "#- _get_net_workarea_cardinal -#"
}

function _get_window_geometry()
{
  _eko_iod "#+ _get_window_geometry +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_UPPER_LEFT_X
  # _WINDOW_DECORATED_UPPER_LEFT_Y
  # _WINDOW_DECORATED_W
  # _WINDOW_UNDECORATED_H
  # _WINDOW_UNDECORATED_UPPER_LEFT_X
  # _WINDOW_UNDECORATED_UPPER_LEFT_Y
  # _WINDOW_UNDECORATED_W

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo
  # read

  # NET:
  # - _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_FRAME_EXTENTS(CARDINAL) = "
  # "1, "
  # "1, "
  # "22, "
  # "6"

  # TADA!
  # - found the problem. PEBKAC
  # - "function _get_window_geometry" (this function) is accurate as long as
  #   one tiny detail is taken into account. this function reports the
  #   window's *current* coordinates & whatnot, not the *new* coordinates

  _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID 2>&1)

  read $_OPTIONS_READ -- \
  _WINDOW_UNDECORATED_UPPER_LEFT_X \
  _WINDOW_UNDECORATED_UPPER_LEFT_Y \
  _WINDOW_UNDECORATED_W \
  _WINDOW_UNDECORATED_H \
  _WINDOW_BORDER_WIDTH \
  < \
  <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Absolute upper-left X: \(.*\) Absolute upper-left Y: \(.*\) Relative upper-left X:.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3 \4 \5/g')

  _eko_pv \$_WINDOW_UNDECORATED_UPPER_LEFT_X: \""$_WINDOW_UNDECORATED_UPPER_LEFT_X\""
  _eko_pv \$_WINDOW_UNDECORATED_UPPER_LEFT_Y: \""$_WINDOW_UNDECORATED_UPPER_LEFT_Y\""
  _eko_pv \$_WINDOW_UNDECORATED_W: \""$_WINDOW_UNDECORATED_W\""
  _eko_pv \$_WINDOW_UNDECORATED_H: \""$_WINDOW_UNDECORATED_H\""
  _eko_pv \$_WINDOW_BORDER_WIDTH: \""$_WINDOW_BORDER_WIDTH\""

  # - calculate window's decorated size
  # ^ (undecorated + (L,T,R,B) decorations + borders all around)
  # - calculate window's decorated position
  # ^ (undecorated - (L,T) decorations)
  # - doing both here is as good as anywhere else

  # - size
  # - $((expression))
  _WINDOW_DECORATED_W=$(( $_WINDOW_UNDECORATED_W + $_NET_FRAME_EXTENTS_L + $_NET_FRAME_EXTENTS_R + $_WINDOW_BORDER_WIDTH * 2 ))
  # - $((expression))
  _WINDOW_DECORATED_H=$(( $_WINDOW_UNDECORATED_H + $_NET_FRAME_EXTENTS_T + $_NET_FRAME_EXTENTS_B + $_WINDOW_BORDER_WIDTH * 2 ))

  # - position
  # - $((expression))
  _WINDOW_DECORATED_UPPER_LEFT_X=$(( $_WINDOW_UNDECORATED_UPPER_LEFT_X - $_NET_FRAME_EXTENTS_L ))
  # - $((expression))
  _WINDOW_DECORATED_UPPER_LEFT_Y=$(( $_WINDOW_UNDECORATED_UPPER_LEFT_Y - $_NET_FRAME_EXTENTS_T ))
#+ testing +#
#  _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_X: \""$_WINDOW_DECORATED_UPPER_LEFT_X\""
#  _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_Y: \""$_WINDOW_DECORATED_UPPER_LEFT_Y\""
  _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_X: \""$_WINDOW_DECORATED_UPPER_LEFT_X\" (current X)"
  _eko_pv \$_WINDOW_DECORATED_UPPER_LEFT_Y: \""$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current Y)"
#- testing -#

  _eko_pv \$_WINDOW_DECORATED_W: \""$_WINDOW_DECORATED_W\""
  _eko_pv \$_WINDOW_DECORATED_H: \""$_WINDOW_DECORATED_H\""

  _eko_iod "#- _get_window_geometry -#"
}

function _get_window_id()
{
  _eko_iod "#+ _get_window_id +#"

  # functions:
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en

  # variables:
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xprop
  # xwininfo

  # builtins:
  # echo

  _eko_ps_en "Select the window to move:" ""
  _eko_pv_en "select the window to move:" ""

  # - acquire Window ID via point'n'click
  _OUTPUT_XWININFO_ID=$(xwininfo 2>&1)

  _eko_ps "" ""
  _eko_pv "" ""

  _OPTION_WINDOW_ID=$(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Window id:/!d ; /\(.*id: \)\|\( .*\)/ s///g')

  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)

  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

  _eko_iod "#- _get_window_id -#"
}

function _get_window_list()
{
  _eko_iod "#+ _get_window_list +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_name_utf8_string
  # _show_error

  # variables:
  # _BOOLEAN_STDOUT
  # _NET_CLIENT_LIST_WINDOW
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_WM_NAME_UTF8_STRING
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID

  # binaries:
  # xprop

  # builtins:
  # printf

  for _OPTION_WINDOW_ID in $_NET_CLIENT_LIST_WINDOW
  do
    # - blank line for clarity
    _eko_pv "" ""

    # - the individual Window ID
    _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

    # - grab all of its properties
    _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>&1)

    # - there is a non-zero chance that the identified window could vanish
    #   between the time of its detection & the time of its use
    # - throw an error or just ignore it? both routines are here. choose one
    # ^ actually, the belt & suspenders approach seems to work. keeping them
    #   as a reference

    # - "-z string" = true if the length of string is zero
    if [[ -z $_OUTPUT_XPROP_ID ]]
    then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (vanished) specified"
    fi

    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_OUTPUT_XPROP_ID ]]
    then
      # - display which desktop it's on
      _get_net_wm_desktop_cardinal

      # - display its name
      _get_net_wm_name_utf8_string

      # - all the above is displayed in verbose mode
      # - stdout mode is quiet right now. this simplifies things immensely

      if $_BOOLEAN_STDOUT
      then
        printf "%12s%11s  %s\n" \
        $_NET_WM_DESKTOP_CARDINAL \
        $_OPTION_WINDOW_ID \
        "$_NET_WM_NAME_UTF8_STRING"
      fi
    fi
  done

  _eko_iod "#- _get_window_list -#"
}

function _parse_parameters()
{
  #+ _parse_parameters +#

  # functions:
  # _binary_validate_setup
  # _builtin_validate_setup
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_preset
  # _coordinates_validate
  # _eko_iod
  # _eko_pv
  # _get_net_active_window_window
  # _get_net_client_list_stacking_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_layout_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_showing_desktop_cardinal
  # _get_net_supported_atom
  # _get_net_supporting_wm_check_window
  # _get_net_virtual_roots_window
  # _get_net_wm_allowed_actions_atom
  # _get_net_wm_bypass_compositor_cardinal
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_icon_geometry_cardinal
  # _get_net_wm_icon_name_utf8_string
  # _get_net_wm_name_utf8_string
  # _get_net_wm_opaque_region_cardinal
  # _get_net_wm_pid_cardinal
  # _get_net_wm_state_atom
  # _get_net_wm_strut_cardinal
  # _get_net_wm_strut_partial_cardinal
  # _get_net_wm_sync_request_counter_cardinal
  # _get_net_wm_user_time_cardinal
  # _get_net_wm_user_time_window_window
  # _get_net_wm_visible_icon_name_utf8_string
  # _get_net_wm_visible_name_utf8_string
  # _get_net_wm_window_type_atom
  # _get_net_workarea_cardinal
  # _get_window_geometry
  # _get_window_id
  # _get_window_list
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help

  # variables:
  # #
  # 1
  # 2
  # ?
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_LIST
  # _BOOLEAN_OVERALL
  # _BOOLEAN_PERMISSIVE
  # _BOOLEAN_QUIET
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_UNUSED
  # _BOOLEAN_VERBOSE
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OPTION_WINDOW_NAME
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # xprop

  # builtins:
  # false
  # shift
  # true

  # NOTE:
  # - boolean variables are proper toggles

  # NOTE:
  # - _BOOLEAN_QUIET
  # - _BOOLEAN_STDOUT
  # ^ are special. they're quite simple to set up initially. their testing is
  #   order-dependent. $_BOOLEAN_STDOUT first, followed by $_BOOLEAN_QUIET

  # - _BOOLEAN_STDOUT
  # - default: true
  # - companion functions: _eko_ps/_eko_ps_en
  # - *not* toggled in the while/do/done loop like the others
  # - immediately *after* the while/do/done loop, but before $_BOOLEAN_QUIET
  # - if $_BOOLEAN_DEBUG or $_BOOLEAN_VERBOSE are true sets _BOOLEAN_STDOUT to
  #   false

  # - _BOOLEAN_QUIET
  # - default: false
  # - companion functions: none
  # - toggled in the while/do/done loop like the others
  # - option "-q, --quiet"
  # - immediately *after* the while/do/done loop, but after $_BOOLEAN_STDOUT
  # - if $_BOOLEAN_QUIET is true sets _BOOLEAN_DEBUG, _BOOLEAN_STDOUT, &
  #   _BOOLEAN_VERBOSE to false

  #+ parameter defaults +#

  _BOOLEAN_DEBUG=false      # display
  _BOOLEAN_DRYRUN=false     # control
  _BOOLEAN_FORCE=false      # action
  _BOOLEAN_LIST=false       # display
  _BOOLEAN_OVERALL=false    # control
  _BOOLEAN_PERMISSIVE=false # control
  _BOOLEAN_QUIET=false      # display
  _BOOLEAN_RAISE=false      # action
  _BOOLEAN_STDOUT=true      # display
  _BOOLEAN_UNUSED=false     # control
  _BOOLEAN_VERBOSE=false    # display
  unset _OPTION_WINDOW_COORDINATES
  unset _OPTION_WINDOW_ID
  unset _OPTION_WINDOW_NAME

  #- parameter defaults -#

  # - "arg1 -gt arg2" = returns true if arg1 is greater than arg2
  while [[ $# -gt 0 ]]
  do
    case $1 in
      ( -c \
      | --coordinates )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        # - ${parameter:offset:length}
        # - "!=" form must be used. not "-ne"
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]] \
        && [[ ${2:1:1} != [0-9] ]]
        then
          _show_error "window coordinates not specified"
        else
#+ testing +#
# - below, 81 more temporary coordinates: A1 - A9 to I1 - I9
# - below, 25 temporary coordinates: AA - AE to EA - EE
#            ( ul \
#            ( AA \
          case $2 in
            ( A1 \
            | A2 \
            | A3 \
            | A4 \
            | A5 \
            | A6 \
            | A7 \
            | A8 \
            | A9 \
            | B1 \
            | B2 \
            | B3 \
            | B4 \
            | B5 \
            | B6 \
            | B7 \
            | B8 \
            | B9 \
            | C1 \
            | C2 \
            | C3 \
            | C4 \
            | C5 \
            | C6 \
            | C7 \
            | C8 \
            | C9 \
            | D1 \
            | D2 \
            | D3 \
            | D4 \
            | D5 \
            | D6 \
            | D7 \
            | D8 \
            | D9 \
            | E1 \
            | E2 \
            | E3 \
            | E4 \
            | E5 \
            | E6 \
            | E7 \
            | E8 \
            | E9 \
            | F1 \
            | F2 \
            | F3 \
            | F4 \
            | F5 \
            | F6 \
            | F7 \
            | F8 \
            | F9 \
            | G1 \
            | G2 \
            | G3 \
            | G4 \
            | G5 \
            | G6 \
            | G7 \
            | G8 \
            | G9 \
            | H1 \
            | H2 \
            | H3 \
            | H4 \
            | H5 \
            | H6 \
            | H7 \
            | H8 \
            | H9 \
            | I1 \
            | I2 \
            | I3 \
            | I4 \
            | I5 \
            | I6 \
            | I7 \
            | I8 \
            | I9 \
            | AA \
            | AB \
            | AC \
            | AD \
            | AE \
            | BA \
            | BB \
            | BC \
            | BD \
            | BE \
            | CA \
            | CB \
            | CC \
            | CD \
            | CE \
            | DA \
            | DB \
            | DC \
            | DD \
            | DE \
            | EA \
            | EB \
            | EC \
            | ED \
            | EE \
            | ul \
            | uc \
            | ur \
            | ml \
            | mc \
            | mr \
            | bl \
            | bc \
            | br \
            | same \
            | *,* )
              _OPTION_WINDOW_COORDINATES=$2
            ;;
            ( * )
              _show_error "invalid window coordinates \"$2\" specified"
            ;;
          esac
        fi
        shift
      ;;
      ( -D \
      | --dry-run )
        if $_BOOLEAN_DRYRUN
        then
          _BOOLEAN_DRYRUN=false
        else
          _BOOLEAN_DRYRUN=true
        fi
      ;;
      ( -f \
      | --force )
        if $_BOOLEAN_FORCE
        then
          _BOOLEAN_FORCE=false
        else
          _BOOLEAN_FORCE=true
        fi
      ;;
      ( -id \
      | --window-id )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]]
        then
          _show_error "Window ID not specified"
        else
          # NOTE:
          # - "function _pass_fail_by_window_id" &
          # - "function _pass_fail_by_window_type" thoroughly test this
          #    variable
          _OPTION_WINDOW_ID=$2
        fi
        shift
      ;;
      ( -l \
      | --list )
        if $_BOOLEAN_LIST
        then
          _BOOLEAN_LIST=false
        else
          _BOOLEAN_LIST=true
        fi
      ;;
      ( -n \
      | --window-name )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]]
        then
          _show_error "Window Name not specified"
        else
          _OPTION_WINDOW_NAME=$2
        fi
        shift
      ;;
      ( -o \
      | --overall )
        if $_BOOLEAN_OVERALL
        then
          _BOOLEAN_OVERALL=false
        else
          _BOOLEAN_OVERALL=true
        fi
      ;;
      ( -p \
      | --permissive )
        if $_BOOLEAN_PERMISSIVE
        then
          _BOOLEAN_PERMISSIVE=false
        else
          _BOOLEAN_PERMISSIVE=true
        fi
      ;;
      ( -q \
      | --quiet )
        if $_BOOLEAN_QUIET
        then
          _BOOLEAN_QUIET=false
        else
          _BOOLEAN_QUIET=true
        fi
      ;;
      ( -r \
      | --raise )
        if $_BOOLEAN_RAISE
        then
          _BOOLEAN_RAISE=false
        else
          _BOOLEAN_RAISE=true
        fi
      ;;
      ( -u \
      | --unused )
        if $_BOOLEAN_UNUSED
        then
          _BOOLEAN_UNUSED=false
        else
          _BOOLEAN_UNUSED=true
        fi
      ;;
      ( -d \
      | --debug )
        if $_BOOLEAN_DEBUG
        then
          _BOOLEAN_DEBUG=false
        else
          _BOOLEAN_DEBUG=true
        fi
      ;;
      ( -v \
      | --verbose )
        if $_BOOLEAN_VERBOSE
        then
          _BOOLEAN_VERBOSE=false
        else
          _BOOLEAN_VERBOSE=true
        fi
      ;;
      ( "-?" \
      | -h \
      | --help ) # -? must be "-?" or it matches "-<any single character>"
        _show_help
      ;;
      ( -* )
        _show_error "invalid option \"$1\" specified"
      ;;
      ( * )
        _show_error "invalid parameter \"$1\" specified"
      ;;
    esac
    shift
  done

  #- _parse_parameters -#

  # - technically in the wrong spot, but it's a chicken or egg scenario
  _eko_iod "#+ _parse_parameters +#"

  # - and so it begins

  # NOTE:
  # - order of operations of the following 2 functions is unimportant

  # - validate the existence & required options of system builtins
  # - while we're at it, set up the options for the various builtins if needed
  _builtin_validate_setup

  # - validate the existence & required options of system binaries
  # - while we're at it, set up the options for the various binaries if needed
  _binary_validate_setup

  #+ parameter settings (in (mostly) proper order of operation) +#

  # NOTE:
  # - the following blocks are *very* sensitive to order of operations

  # - assign default value if unset
  # - ${parameter:=word}
  _OPTION_WINDOW_COORDINATES=${_OPTION_WINDOW_COORDINATES:=same}

  # - cheap & easy way to do a dry-run
  if $_BOOLEAN_DRYRUN
  then
    _BINARY_WMCTRL=true
  fi

  if $_BOOLEAN_DEBUG \
  || $_BOOLEAN_VERBOSE
  then
    _BOOLEAN_STDOUT=false     # display
  fi

  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  _eko_pv \$_BOOLEAN_DEBUG: \""$_BOOLEAN_DEBUG\""
  _eko_pv \$_BOOLEAN_DRYRUN: \""$_BOOLEAN_DRYRUN\""
  _eko_pv \$_BOOLEAN_FORCE: \""$_BOOLEAN_FORCE\""
  _eko_pv \$_BOOLEAN_LIST: \""$_BOOLEAN_LIST\""
  _eko_pv \$_BOOLEAN_OVERALL: \""$_BOOLEAN_OVERALL\""
  _eko_pv \$_BOOLEAN_PERMISSIVE: \""$_BOOLEAN_PERMISSIVE\""
  _eko_pv \$_BOOLEAN_QUIET: \""$_BOOLEAN_QUIET\""
  _eko_pv \$_BOOLEAN_RAISE: \""$_BOOLEAN_RAISE\""
  _eko_pv \$_BOOLEAN_STDOUT: \""$_BOOLEAN_STDOUT\""
  _eko_pv \$_BOOLEAN_UNUSED: \""$_BOOLEAN_UNUSED\""
  _eko_pv \$_BOOLEAN_VERBOSE: \""$_BOOLEAN_VERBOSE\""
  _eko_pv \$_OPTION_WINDOW_COORDINATES: \""$_OPTION_WINDOW_COORDINATES\""
  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""
  _eko_pv \$_OPTION_WINDOW_NAME: \""$_OPTION_WINDOW_NAME\""

  # NOTE:
  # - first a bit of testing to weed out conflicting options:
  # - "-id" & "-n" are mutually exclusive. error exit

  # - "-id" & "-n" are mutually exclusive. error exit
  # - "-n string" = true if the length of string is non-zero
  if [[ -n $_OPTION_WINDOW_ID ]] \
  && [[ -n $_OPTION_WINDOW_NAME ]]
  then
    _show_error \""-id, --window-id\" & \"-n, --window-name\" are mutually exclusive"
  fi

  if $_BOOLEAN_QUIET
  then
    _BOOLEAN_DEBUG=false      # display
    #_BOOLEAN_DRYRUN=false     # control
    #_BOOLEAN_FORCE=false      # action
    #_BOOLEAN_LIST=false       # display
    #_BOOLEAN_OVERALL=false    # control
    #_BOOLEAN_PERMISSIVE=false # control
    #_BOOLEAN_QUIET=false      # display
    #_BOOLEAN_RAISE=false      # action
    _BOOLEAN_STDOUT=false     # display
    #_BOOLEAN_UNUSED=false     # control
    _BOOLEAN_VERBOSE=false    # display
  fi

  #- parameter settings (in (mostly) proper order of operation) -#

  # - we'll be using this information for a lot of things (several of the
  #   _get_net_* functions). just grab everything once
  _OUTPUT_XPROP_ROOT=$(xprop -root 2>&1)

  # - "arg1 -ne arg2" = returns true if arg1 is not equal to arg2
  if [[ $? -ne 0 ]]
  then
    _show_error "there was a problem calling \"xprop -root\""
  fi

  # TODO:
  # - figure out what to do with this one (in progress)
  # - _OPTION_WINDOW_NAME
  # - 3 possible states: 0 matches, 1 match, 1+ matches

  _get_net_client_list_window

  if $_BOOLEAN_FORCE
  then
    _get_net_desktop_geometry_cardinal

    _coordinates_force
  elif $_BOOLEAN_LIST
  then
    _get_window_list
  else
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_OPTION_WINDOW_ID ]]
    then
      # - validate Window ID if it was specified on the commandline
      _pass_fail_by_window_id
    else
      # - acquire Window ID via point'n'click - requires no validation
      _get_window_id
    fi

    # NOTE:
    # - $_OUTPUT_XPROP_ID has definitely been set at this point
    # - we'll be using this information for a lot of things (several of the
    #   _get_net_* functions). just grab everything once

    # - pass/fail by window type
    _pass_fail_by_window_type

    # precedes: "function _get_net_workarea_cardinal"
    # precedes: "function _get_net_desktop_names_utf8_string"
    # precedes: "function _get_net_desktop_viewport_cardinal"
    _get_net_wm_desktop_cardinal

    # succeeds: "function _get_net_wm_desktop_cardinal"
    # precedes: "function _get_net_workarea_cardinal"
    # precedes: "function _get_net_desktop_names_utf8_string"
    # precedes: "function _get_net_desktop_viewport_cardinal"
    _get_net_desktop_geometry_cardinal

    # succeeds: "function _get_net_wm_desktop_cardinal"
    _get_net_workarea_cardinal

    # succeeds: "function _get_net_wm_desktop_cardinal"
    _get_net_desktop_names_utf8_string

    # succeeds: "function _get_net_wm_desktop_cardinal"
    _get_net_desktop_viewport_cardinal

    # precedes: "function _get_window_geometry"
    _get_net_frame_extents_cardinal

    # precedes: "function _coordinates_validate"
    _get_net_wm_state_atom

    _get_net_wm_window_type_atom

    # precedes: "function _coordinates_kludge"
    _get_net_wm_name_utf8_string

    # succeeds: "function _get_net_frame_extents_cardinal"
    _get_window_geometry

    # - put all currently unused functions here. simpler to find & deal with
    # - why specifically here? to succeed all the "live" _get_net_* functions
    if $_BOOLEAN_UNUSED
    then
      # - from "xprop -root"
      _get_net_active_window_window
      _get_net_client_list_stacking_window
      _get_net_current_desktop_cardinal # (embedded)
      _get_net_desktop_layout_cardinal
      _get_net_number_of_desktops_cardinal
      _get_net_showing_desktop_cardinal
      _get_net_supported_atom
      _get_net_supporting_wm_check_window
      _get_net_virtual_roots_window

      # - from "xprop -id 0xdeadf00d"
      _get_net_wm_allowed_actions_atom
      _get_net_wm_bypass_compositor_cardinal
      _get_net_wm_icon_geometry_cardinal
      _get_net_wm_icon_name_utf8_string
      _get_net_wm_opaque_region_cardinal
      _get_net_wm_pid_cardinal
      _get_net_wm_strut_cardinal
      _get_net_wm_strut_partial_cardinal
      _get_net_wm_sync_request_counter_cardinal
      _get_net_wm_user_time_cardinal
      _get_net_wm_user_time_window_window
      _get_net_wm_visible_icon_name_utf8_string
      _get_net_wm_visible_name_utf8_string
    fi # if $_BOOLEAN_UNUSED

    _coordinates_preset

    # succeeds: "function _get_net_wm_state_atom"
    _coordinates_validate

    # succeeds: "function _get_net_wm_name_utf8_string"
    _coordinates_kludge

    _set_window_position
  fi # if $_BOOLEAN_FORCE & elif $_BOOLEAN_LIST & else

  # - and so it ends (so far)

  _eko_iod "#- _parse_parameters -#"
}

function _pass_fail_by_window_id()
{
  _eko_iod "#+ _pass_fail_by_window_id +#"

  # functions:
  # _eko_iod
  # _show_error

  # variables:
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID

  # binaries:
  # xprop

  # builtins:

  # NOTE:
  # - "function _pass_fail_by_window_type" already does the heavy lifting in
  #   terms of identifying the window *type*, so simply call it to fully
  #   identify said window
  # - additional benefit of this approach is there's only one code path that
  #   would require future maintenance

  # - 1st step: verify that it at least looks like a valid Window ID
  #   (this is technically unnecessary as the "2nd step" catches everything)
  #   (it doesn't hurt to provide some extra information, though)
  if [[ ! $_OPTION_WINDOW_ID =~ ^0x[0-9a-f]+$ ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (invalid syntax) specified"
  fi

  # - 2nd step: brute force. using $_OPTION_WINDOW_ID (explicitly preserving
  #   stdout & discarding stderr), attempt to acquire $_OUTPUT_XPROP_ID then
  #   directly test $_OUTPUT_XPROP_ID
  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>/dev/null)

  # - "-z string" = true if the length of string is zero
  if [[ -z $_OUTPUT_XPROP_ID ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (does not exist) specified"
  fi

  _eko_iod "#- _pass_fail_by_window_id -#"
}

function _pass_fail_by_window_type()
{
  _eko_iod "#+ _pass_fail_by_window_type +#"

  # functions:
  # _eko_iod
  # _show_error

  # variables:
  # _BOOLEAN_PERMISSIVE
  # _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NET:
  # - _NET_WM_WINDOW_TYPE, ATOM[]/32

  # (sorted listing from the original source)
  #   _NET_WM_WINDOW_TYPE_COMBO, ATOM
  #   _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
  #   _NET_WM_WINDOW_TYPE_DIALOG, ATOM
  #   _NET_WM_WINDOW_TYPE_DND, ATOM
  #   _NET_WM_WINDOW_TYPE_DOCK, ATOM
  #   _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_NORMAL, ATOM
  #   _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
  #   _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_SPLASH, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
  #   _NET_WM_WINDOW_TYPE_UTILITY, ATOM

  # NOTE:
  # - Openbox does not let windows change this hint after mapping.

  # NOTE:
  # - the root window itself
  #   "^_NET_CLIENT_LIST(WINDOW): window id # "
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_COMBO*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_DESKTOP*"
  # - quasselclient dialog windows
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_DIALOG*"
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_DND*"
  # - blackbox/fluxbox/openbox dock, tint2 panel/taskbar, likely others
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_DOCK*"
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_DROPDOWN_MENU*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_MENU*"
  # - don't trap this one. it can be moved
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_NORMAL*"
  # - notify-send notification popup
  # - kdialog notification popup (in its random "upper/right of display" mode)
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_NOTIFICATION*"
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_POPUP_MENU*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_SPLASH*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_TOOLBAR*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_TOOLTIP*"
  # - kdialog utility popup (in its random "middle/center of display" mode)
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = *_NET_WM_WINDOW_TYPE_UTILITY*"
  # - xmessage popup
  # ^ untested here simply because it's a normal window

  # NOTE:
  # - the root window is a special case. under no circumstances can it be moved

  # - "-n string" = true if the length of string is non-zero
  if [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d') ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (root window) specified"
  fi

  if ! $_BOOLEAN_PERMISSIVE
  then

    # NOTE:
    # - pay close attention to the syntax used in the case statement below
    # - instead of ";;", use ";;&" below. do not use ";&"

    # NOTE:
    # - any single match would be an error. continue through the list to match
    #   any & all possibilities

    # NOTE:
    # - interesting side-effect of using this method:
    #   regardless of the original ordering in _NET_WM_WINDOW_TYPE(ATOM),
    #   _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM is always in the order defined in
    #   the case statement below

    # - be explicit for clarity
    unset _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM

    case $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = /!d ; /\(.* = \|,\)/ s///g') in
      ( *_NET_WM_WINDOW_TYPE_COMBO* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", combo"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DESKTOP* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", desktop"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DIALOG* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dialog"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DND* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dnd"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DOCK* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dock"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DROPDOWN_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dropdown menu"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", menu"
      ;;&
#      ( *_NET_WM_WINDOW_TYPE_NORMAL* )
#        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", normal"
#      ;;&
      ( *_NET_WM_WINDOW_TYPE_NOTIFICATION* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", notification"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_POPUP_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", popup menu"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_SPLASH* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", splash"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_TOOLBAR* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", toolbar"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_TOOLTIP* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", tooltip"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_UTILITY* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", utility"
      ;;&
    esac

    # - tidy up
    if [[ ${_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM:0:2} == ", " ]]
    then
      _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM=${_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM:2}
    fi

    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM ]]
    then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" ($_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM) specified"
    fi

  fi # if ! $_BOOLEAN_PERMISSIVE

  _eko_iod "#- _pass_fail_by_window_type -#"
}

function _set_window_position()
{
  _eko_iod "#+ _set_window_position +#"

  # functions:
  # _eko_iod
  # _eko_ps
  # _eko_pv

  # variables:
  # _BINARY_WMCTRL
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _DYNAMIC_TYPE
  # _DYNAMIC_WORKAREA_H
  # _DYNAMIC_WORKAREA_W
  # _DYNAMIC_WORKAREA_X
  # _DYNAMIC_WORKAREA_Y
  # _HUMAN_READABLE_WM_STATE_ATOM
  # _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WM_STATE_ATOM
  # _NET_WM_WINDOW_TYPE_ATOM
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _NET_WORKAREA_X
  # _NET_WORKAREA_Y
  # _OPTION_WINDOW_ID
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_H
  # _WINDOW_DECORATED_UPPER_LEFT_X
  # _WINDOW_DECORATED_UPPER_LEFT_Y
  # _WINDOW_DECORATED_W
  # _WINDOW_UNDECORATED_H
  # _WINDOW_UNDECORATED_UPPER_LEFT_X
  # _WINDOW_UNDECORATED_UPPER_LEFT_Y
  # _WINDOW_UNDECORATED_W

  # binaries:

  # builtins:

  # NET:
  # - several described elsewhere throughout the script, so no need to repeat
  #   them all here
  #+ marker edit +# do it anyway?

  if $_BOOLEAN_STDOUT
  then

    # NOTE:
    # - pay close attention to the syntax used in the case statements below
    # - instead of ";;", use ";;&" below. do not use ";&"

    # NOTE:
    # - interesting side-effect of using this method:
    #   regardless of the original ordering in _NET_WM_STATE_ATOM,
    #   _HUMAN_READABLE_WM_STATE_ATOM is always in the order defined in the
    #   case statement below

    # - be explicit for clarity
    unset _HUMAN_READABLE_WM_STATE_ATOM

    # (sorted listing from the original source)
    #   _NET_WM_STATE_ABOVE, ATOM
    #   _NET_WM_STATE_BELOW, ATOM
    #   _NET_WM_STATE_DEMANDS_ATTENTION, ATOM
    #   _NET_WM_STATE_FOCUSED, ATOM
    #   _NET_WM_STATE_FULLSCREEN, ATOM
    #   _NET_WM_STATE_HIDDEN, ATOM
    #   _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
    #   _NET_WM_STATE_MAXIMIZED_VERT, ATOM
    #   _NET_WM_STATE_MODAL, ATOM
    #   _NET_WM_STATE_SHADED, ATOM
    #   _NET_WM_STATE_SKIP_PAGER, ATOM
    #   _NET_WM_STATE_SKIP_TASKBAR, ATOM
    #   _NET_WM_STATE_STAYS_ON_TOP, ATOM (qt specific)
    #   _NET_WM_STATE_STICKY, ATOM

    case $_NET_WM_STATE_ATOM in
      ( *_NET_WM_STATE_ABOVE* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", above"
      ;;&
      ( *_NET_WM_STATE_BELOW* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", below"
      ;;&
      ( *_NET_WM_STATE_DEMANDS_ATTENTION* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", demands attention"
      ;;&
      ( *_NET_WM_STATE_FOCUSED* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", focused"
      ;;&
      ( *_NET_WM_STATE_FULLSCREEN* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", fullscreen"
      ;;&
      ( *_NET_WM_STATE_HIDDEN* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", hidden"
      ;;&
      ( *_NET_WM_STATE_MAXIMIZED_HORZ* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", maximized horizontally"
      ;;&
      ( *_NET_WM_STATE_MAXIMIZED_VERT* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", maximized vertically"
      ;;&
      ( *_NET_WM_STATE_MODAL* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", modal"
      ;;&
      ( *_NET_WM_STATE_SHADED* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", shaded"
      ;;&
      ( *_NET_WM_STATE_SKIP_PAGER* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", skip pager"
      ;;&
      ( *_NET_WM_STATE_SKIP_TASKBAR* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", skip taskbar"
      ;;&
      ( *_NET_WM_STATE_STAYS_ON_TOP* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", stays on top"
      ;;&
      ( *_NET_WM_STATE_STICKY* )
        _HUMAN_READABLE_WM_STATE_ATOM+=", sticky"
      ;;&
      ( * )
        # - "-z string" = true if the length of string is zero
        if [[ -z $_NET_WM_STATE_ATOM ]]
        then
          _HUMAN_READABLE_WM_STATE_ATOM=undefined
        fi
      ;;&
    esac # $_NET_WM_STATE_ATOM

    # - tidy up
    if [[ ${_HUMAN_READABLE_WM_STATE_ATOM:0:2} == ", " ]]
    then
      _HUMAN_READABLE_WM_STATE_ATOM=${_HUMAN_READABLE_WM_STATE_ATOM:2}
    fi

    # NOTE:
    # - interesting side-effect of using this method:
    #   regardless of the original ordering in _NET_WM_WINDOW_TYPE_ATOM,
    #   _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM is always in the order defined in
    #   the case statement below

    # - be explicit for clarity
    unset _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM

    # (sorted listing from the original source)
    #   _NET_WM_WINDOW_TYPE_COMBO, ATOM
    #   _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
    #   _NET_WM_WINDOW_TYPE_DIALOG, ATOM
    #   _NET_WM_WINDOW_TYPE_DND, ATOM
    #   _NET_WM_WINDOW_TYPE_DOCK, ATOM
    #   _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
    #   _NET_WM_WINDOW_TYPE_MENU, ATOM
    #   _NET_WM_WINDOW_TYPE_NORMAL, ATOM
    #   _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
    #   _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
    #   _NET_WM_WINDOW_TYPE_SPLASH, ATOM
    #   _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
    #   _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
    #   _NET_WM_WINDOW_TYPE_UTILITY, ATOM

    case $_NET_WM_WINDOW_TYPE_ATOM in
      ( *_NET_WM_WINDOW_TYPE_COMBO* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", combo"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DESKTOP* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", desktop"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DIALOG* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dialog"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DND* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dnd"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DOCK* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dock"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_DROPDOWN_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", dropdown menu"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", menu"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_NORMAL* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", normal"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_NOTIFICATION* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", notification"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_POPUP_MENU* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", popup menu"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_SPLASH* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", splash"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_TOOLBAR* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", toolbar"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_TOOLTIP* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", tooltip"
      ;;&
      ( *_NET_WM_WINDOW_TYPE_UTILITY* )
        _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM+=", utility"
      ;;&
      ( * )
        # - "-z string" = true if the length of string is zero
        if [[ -z $_NET_WM_WINDOW_TYPE_ATOM ]]
        then
          _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM=undefined
        fi
      ;;&
    esac # $_NET_WM_WINDOW_TYPE_ATOM

    # - tidy up
    if [[ ${_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM:0:2} == ", " ]]
    then
      _HUMAN_READABLE_WM_WINDOW_TYPE_ATOM=${_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM:2}
    fi

  fi # if $_BOOLEAN_STDOUT

  # - first: the command to move the window
  # - "-i -r" order is important
  # - experimented with "-b add,above". something's not going as expected so
  #   it's not used in $_COMMAND below. instead, do a second call to raise the
  #   window
  _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$_COORDINATE_X,$_COORDINATE_Y,-1,-1"

  _eko_ps "window id:" \""$_OPTION_WINDOW_ID\""
  _eko_pv "window id:" \""$_OPTION_WINDOW_ID\""
  _eko_ps "window name:" \""$_NET_WM_NAME_UTF8_STRING\""
  _eko_pv "window name:" \""$_NET_WM_NAME_UTF8_STRING\""
  _eko_ps "window state:" \""$_HUMAN_READABLE_WM_STATE_ATOM\""
  _eko_pv "window state:" \""$_NET_WM_STATE_ATOM\""
  _eko_ps "window type:" \""$_HUMAN_READABLE_WM_WINDOW_TYPE_ATOM\""
  _eko_pv "window type:" \""$_NET_WM_WINDOW_TYPE_ATOM\""

###

  _eko_ps "desktop number:" \""$_NET_WM_DESKTOP_CARDINAL\""
  _eko_pv "desktop number:" \""$_NET_WM_DESKTOP_CARDINAL\""

  # - 4294967295 = 0xFFFFFFFF = sticky = all desktops
  # - "-z string" = true if the length of string is zero
  # - "arg1 -eq arg2" = returns true if arg1 is equal to arg2
  if [[ -z $_NET_WM_DESKTOP_CARDINAL ]] \
  || [[ $_NET_WM_DESKTOP_CARDINAL -eq 4294967295 ]]
  then
    _eko_ps "desktop names:" \""$_NET_DESKTOP_NAMES_UTF8_STRING\""
    _eko_pv "desktop names:" \""$_NET_DESKTOP_NAMES_UTF8_STRING\""
  else
    _eko_ps "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
    _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
  fi

###

  # - size
  _eko_ps "window undecorated size (W,H):" \""$_WINDOW_UNDECORATED_W,$_WINDOW_UNDECORATED_H\""
  _eko_pv "window undecorated size (W,H):" \""$_WINDOW_UNDECORATED_W,$_WINDOW_UNDECORATED_H\""

  # - size
  _eko_ps "window decorations (L,T,R,B):" \""$_NET_FRAME_EXTENTS_L,$_NET_FRAME_EXTENTS_T,$_NET_FRAME_EXTENTS_R,$_NET_FRAME_EXTENTS_B\""
  _eko_pv "window decorations (L,T,R,B):" \""$_NET_FRAME_EXTENTS_L,$_NET_FRAME_EXTENTS_T,$_NET_FRAME_EXTENTS_R,$_NET_FRAME_EXTENTS_B\""

  # - size
  _eko_ps "window border width (L,T,R,B):" \""$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH\""
  _eko_pv "window border width (L,T,R,B):" \""$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH,$_WINDOW_BORDER_WIDTH\""

  # - size
  _eko_ps "window decorated size (W,H):" \""$_WINDOW_DECORATED_W,$_WINDOW_DECORATED_H\""
  _eko_pv "window decorated size (W,H):" \""$_WINDOW_DECORATED_W,$_WINDOW_DECORATED_H\""

  # - position
  _eko_ps "window undecorated position (X,Y):" \""$_WINDOW_UNDECORATED_UPPER_LEFT_X,$_WINDOW_UNDECORATED_UPPER_LEFT_Y\""
  _eko_pv "window undecorated position (X,Y):" \""$_WINDOW_UNDECORATED_UPPER_LEFT_X,$_WINDOW_UNDECORATED_UPPER_LEFT_Y\""

  # - position
  _eko_ps "window kludges (X,Y):" \""$_KLUDGE_X,$_KLUDGE_Y\""
  _eko_pv "window kludges (X,Y):" \""$_KLUDGE_X,$_KLUDGE_Y\""

#+ testing +#
  # - position
#  _eko_ps "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\""
#  _eko_pv "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\""
  _eko_ps "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current)"
  _eko_pv "window decorated position (X,Y):" \""$_WINDOW_DECORATED_UPPER_LEFT_X,$_WINDOW_DECORATED_UPPER_LEFT_Y\" (current)"
#- testing -#

  # - position or size? treating as position for now
  #  (depending on how you tilt your head, it could be either)
  _eko_ps "window maximized (X,Y):" \""$_BOOLEAN_MAXIMIZED_X,$_BOOLEAN_MAXIMIZED_Y\""
  _eko_pv "window maximized (X,Y):" \""$_BOOLEAN_MAXIMIZED_X,$_BOOLEAN_MAXIMIZED_Y\""

###

  # - size
  _eko_ps "desktop geometry (W,H):" \""$_NET_DESKTOP_GEOMETRY_W,$_NET_DESKTOP_GEOMETRY_H\""
  _eko_pv "desktop geometry (W,H):" \""$_NET_DESKTOP_GEOMETRY_W,$_NET_DESKTOP_GEOMETRY_H\""

  # - position & size
  _eko_ps "static workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
  _eko_pv "static workarea geometry (X,Y,W,H):" \""$_NET_WORKAREA_X,$_NET_WORKAREA_Y,$_NET_WORKAREA_W,$_NET_WORKAREA_H\""

  # - position & size
  _eko_ps "dynamic workarea geometry (X,Y,W,H):" \""$_DYNAMIC_WORKAREA_X,$_DYNAMIC_WORKAREA_Y,$_DYNAMIC_WORKAREA_W,$_DYNAMIC_WORKAREA_H\" ($_DYNAMIC_TYPE)"
  _eko_pv "dynamic workarea geometry (X,Y,W,H):" \""$_DYNAMIC_WORKAREA_X,$_DYNAMIC_WORKAREA_Y,$_DYNAMIC_WORKAREA_W,$_DYNAMIC_WORKAREA_H\" ($_DYNAMIC_TYPE)"

#+ testing +#
  # - position
#  _eko_ps "new coordinates (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\""
#  _eko_pv "new coordinates (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\""
  _eko_ps "window decorated position (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\" (desired)"
  _eko_pv "window decorated position (X,Y):" \""$_COORDINATE_X,$_COORDINATE_Y\" (desired)"
#- testing -#

###

  _eko_ps "wmctrl command (move):" \""$_COMMAND\""
  _eko_pv "wmctrl command (move):" \""$_COMMAND\""

  # - move window if possible
  $_COMMAND

  if $_BOOLEAN_RAISE
  then
    # - next: the command to explicitly raise & give focus to the window
    # - "-i -a" order is important
    # - don't use "-R". it causes the window to become "unsticky"
    _COMMAND="$_BINARY_WMCTRL -i -a $_OPTION_WINDOW_ID"

    _eko_ps "wmctrl command (raise):" \""$_COMMAND\""
    _eko_pv "wmctrl command (raise):" \""$_COMMAND\""

    # - raise/focus window if possible
    $_COMMAND
  fi

  _eko_iod "#- _set_window_position -#"
}

function _show_error()
{
  _eko_iod "#+ _show_error +#"

  # functions:
  # _eko_iod

  # variables:
  # @

  # binaries:

  # builtins:
  # echo

  # - output to stderr, not stdout
  # - be explicit for clarity
  echo "Error: $@" 1>&2

  _eko_iod "#- _show_error -#"

  exit 1
}

function _show_help()
{
  _eko_iod "#+ _show_help +#"

  # functions:
  # _eko_iod

  # variables:

  # binaries:

  # builtins:
  # echo

  echo "Provide at least 1 parameter: <Window Coordinates> [OPTION] [[OPTION]]

Mandatory parameter (Window Coordinates):
  -c, --coordinates ul|uc|ur   Upper/Left   Upper/Center   Upper/Right
  -c, --coordinates ml|mc|mr  Middle/Left  Middle/Center  Middle/Right
  -c, --coordinates bl|bc|br  Bottom/Left  Bottom/Center  Bottom/Right
  -c, --coordinates same      Do not change coordinates (for use with --raise)
  -c, --coordinates X,Y       User specified (X,Y) coordinates

Optional parameters:
  -D, --dry-run     Perform a trial run of the specified action
  -f, --force       Force windows to be least partially on the desktop
  -id <Window ID>, --window-id <Window ID>
                    Window ID (in lowercase hexadecimal format) to move
  -l, --list        List all windows that can be moved
  -n <Window Name>, --window-name <Window Name> (TODO. probably substring)
                    Window Name (glob, regex, or simple substring?) to move
  -o, --overall     Use overall desktop (X,Y) for window placement calculations
  -p, --permissive  Permissive mode allows moving otherwise immovable windows
  -q, --quiet       Limit what's displayed to error messages & this help text
  -r, --raise       Raise window & give it focus
  -u, --unused      Display all known \$_NET_* properties unused by this script
  -d, --debug       Display debugging information (function names/entry/exit)
  -v, --verbose     Display verbose information (variable names/contents)
  -?, -h, --help    Display this help text, useful as it is

Note:
  If an option is specified multiple times, the last invocation is used
  If coordinates are not specified default to \"--coordinates same\""

  _eko_iod "#- _show_help -#"

  exit 0
}

#- function definitions here -#

#+ start here +#

# functions:
# _parse_parameters

# variables:
# @
# _BINARY_WMCTRL

# binaries:

# builtins:
# echo
# false

_parse_parameters "$@"

if [[ $_BINARY_WMCTRL == false ]] \
&& ! $_BOOLEAN_LIST
then
  echo "binary \"wmctrl\" not found, faked it with \"false\" instead"
fi

#- start here -#

#- marker eof -#
exit 0

#+
# test for things that are guaranteed to be unique for each type of "thing"
# without getting overspecific

# NOTE:
# - information gathered via "xprop | grep ^_NET_ | sort"
# - keep this information for later use
# ^ "_NET_WM_ALLOWED_ACTIONS(ATOM)" could be of particular interest
# - for portability, deliberately limiting tests to *only* _NET_* entries
# - mildly annoying. xmessage is indistinguishable from a normal window
#   simply because it *is* one

# - the root window
# "_NET_ACTIVE_WINDOW(WINDOW): window id # 0xa000b3"
# "_NET_CLIENT_LIST(WINDOW): window id # 0xe00008, 0x1200004, 0xa00009, 0xa0002b, 0xa0004d, 0xa0006f, 0xa00091, 0xa000b3, 0xa000d5, 0xa000f7, 0xa00119, 0xa0018b, 0xa001ad, 0xa001cf, 0xa001f1, 0xa00213, 0xa00235, 0xa00257, 0xa00279, 0xa0029b, 0xa00361, 0xa0038b, 0xa003b5, 0xa00409, 0xa00433, 0xa00477, 0xa00499, 0xa0063e, 0xa00c05, 0xa00c2f, 0xa00d1f, 0xa00f91, 0xa00fb4, 0xa01369, 0xa01393, 0x3400011, 0xa01755, 0xa01787, 0xa017a9, 0xa017cb, 0xa019b1, 0xa019db, 0xa01a25, 0xa01a47, 0x36000de, 0x4000099, 0x360024f, 0x3600316, 0x36004a8, 0xa01b72, 0x36007a2"
# "_NET_CLIENT_LIST_STACKING(WINDOW): window id # 0xa00009, 0xa01393, 0xa01a47, 0xa001f1, 0xa0029b, 0xa01a25, 0xa00235, 0xa00257, 0xa00213, 0x36004a8, 0xa00499, 0xa017cb, 0xa01b72, 0xa00477, 0xa01369, 0xa00c05, 0xa00c2f, 0xa00d1f, 0xa019b1, 0xa0038b, 0xa019db, 0xa001cf, 0x3600316, 0xa00f91, 0xa01787, 0x36000de, 0x360024f, 0x36007a2, 0xa000f7, 0xa001ad, 0xa00409, 0xa0004d, 0xa0018b, 0xa00279, 0xa00433, 0xa017a9, 0xa0006f, 0xa000d5, 0x4000099, 0x3400011, 0xa0002b, 0xa00fb4, 0xa00119, 0xa01755, 0xa0063e, 0xa00361, 0xa003b5, 0xa00091, 0xa000b3, 0xe00008, 0x1200004"
# "_NET_CURRENT_DESKTOP(CARDINAL) = 0"
# "_NET_DESKTOP_GEOMETRY(CARDINAL) = 1920, 1080"
# "_NET_DESKTOP_LAYOUT(CARDINAL) = 1, 1, 0, 0"
# "_NET_DESKTOP_NAMES(UTF8_STRING) = "I", "II", "III", "IV", "V", "VI", "VII", "VIII""
# "_NET_DESKTOP_VIEWPORT(CARDINAL) = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
# "_NET_NUMBER_OF_DESKTOPS(CARDINAL) = 8"
# "_NET_SHOWING_DESKTOP(CARDINAL) = 0"
# "_NET_SUPPORTED(ATOM) = _NET_SUPPORTING_WM_CHECK, _NET_WM_FULL_PLACEMENT, _NET_CURRENT_DESKTOP, _NET_NUMBER_OF_DESKTOPS, _NET_DESKTOP_GEOMETRY, _NET_DESKTOP_VIEWPORT, _NET_ACTIVE_WINDOW, _NET_WORKAREA, _NET_CLIENT_LIST, _NET_CLIENT_LIST_STACKING, _NET_DESKTOP_NAMES, _NET_CLOSE_WINDOW, _NET_DESKTOP_LAYOUT, _NET_SHOWING_DESKTOP, _NET_WM_NAME, _NET_WM_VISIBLE_NAME, _NET_WM_ICON_NAME, _NET_WM_VISIBLE_ICON_NAME, _NET_WM_DESKTOP, _NET_WM_STRUT, _NET_WM_STRUT_PARTIAL, _NET_WM_ICON, _NET_WM_ICON_GEOMETRY, _NET_WM_WINDOW_TYPE, _NET_WM_WINDOW_TYPE_DESKTOP, _NET_WM_WINDOW_TYPE_DOCK, _NET_WM_WINDOW_TYPE_TOOLBAR, _NET_WM_WINDOW_TYPE_MENU, _NET_WM_WINDOW_TYPE_UTILITY, _NET_WM_WINDOW_TYPE_SPLASH, _NET_WM_WINDOW_TYPE_DIALOG, _NET_WM_WINDOW_TYPE_NORMAL, _NET_WM_ALLOWED_ACTIONS, _NET_WM_WINDOW_OPACITY, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _NET_WM_STATE, _NET_WM_STATE_MODAL, _NET_WM_STATE_MAXIMIZED_VERT, _NET_WM_STATE_MAXIMIZED_HORZ, _NET_WM_STATE_SHADED, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER, _NET_WM_STATE_HIDDEN, _NET_WM_STATE_FULLSCREEN, _NET_WM_STATE_ABOVE, _NET_WM_STATE_BELOW, _NET_WM_STATE_DEMANDS_ATTENTION, _NET_MOVERESIZE_WINDOW, _NET_WM_MOVERESIZE, _NET_WM_USER_TIME, _NET_FRAME_EXTENTS, _NET_REQUEST_FRAME_EXTENTS, _NET_RESTACK_WINDOW, _NET_STARTUP_ID, _NET_WM_SYNC_REQUEST, _NET_WM_SYNC_REQUEST_COUNTER, _NET_WM_PID, _NET_WM_PING, _KDE_WM_CHANGE_STATE, _KDE_NET_WM_FRAME_STRUT, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _OB_WM_ACTION_UNDECORATE, _OB_WM_STATE_UNDECORATED, _OPENBOX_PID, _OB_THEME, _OB_CONFIG_FILE, _OB_CONTROL, _OB_VERSION, _OB_APP_ROLE, _OB_APP_TITLE, _OB_APP_NAME, _OB_APP_CLASS, _OB_APP_GROUP_NAME, _OB_APP_GROUP_CLASS, _OB_APP_TYPE"
# "_NET_SUPPORTING_WM_CHECK(WINDOW): window id # 0x8000bb"
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WORKAREA(CARDINAL) = 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056"

# - firefox (new instance, same one as below . not maximized)
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 21, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (22 x 22):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_OPAQUE_REGION(CARDINAL) = "
# "_NET_WM_PID(CARDINAL) = 26071"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 56625144, 56625145"
# "_NET_WM_USER_TIME(CARDINAL) = 2553561896"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x36007f7"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - firefox (new instance, same one as above. maximized)
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (22 x 22):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_OPAQUE_REGION(CARDINAL) = "
# "_NET_WM_PID(CARDINAL) = 26071"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_MAXIMIZED_VERT, _NET_WM_STATE_MAXIMIZED_HORZ"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 56625144, 56625145"
# "_NET_WM_USER_TIME(CARDINAL) = 2553561896"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x36007f7"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - gkrellm (not in the dock)
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_PID(CARDINAL) = 16706"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080389"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400004"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "middle/center of display" mode)
# "_NET_STARTUP_ID(UTF8_STRING) = "0""
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WM_PID(CARDINAL) = 17149"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STAYS_ON_TOP"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080407"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_UTILITY, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "upper/right of display" mode)
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_PID(CARDINAL) = 18733"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STICKY, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080645"
# "_NET_WM_USER_TIME(CARDINAL) = 2565348851"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400104"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - notify-send
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_PID(CARDINAL) = 14910"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STICKY, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080425"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400028"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - openbox dock (below is the entire report even without the grep)
# - clicking on anything in the dock gets this
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - quasselclient
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_STARTUP_ID(UTF8_STRING) = "0""
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (64 x 64):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1449, 1056, 126, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_PID(CARDINAL) = 1769"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 54526060"
# "_NET_WM_USER_TIME(CARDINAL) = 2553195505"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - rxvt
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 795, 1056, 127, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_PID(CARDINAL) = 1438"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""

# - tint2
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_BELOW"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_PID(CARDINAL) = 1454"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER, _NET_WM_STATE_ABOVE"
# "_NET_WM_STRUT(CARDINAL) = 0, 0, 0, 24"
# "_NET_WM_STRUT_PARTIAL(CARDINAL) = 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1919"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - wmagnify (normal)
# - the only difference between normal & sticky is "_NET_WM_DESKTOP(CARDINAL)"
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1579, 1056, 126, 24"
# "_NET_WM_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Magnify 3x""

# - wmagnify (sticky)
# - the only difference between normal & sticky is "_NET_WM_DESKTOP(CARDINAL)"
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1555, 1056, 150, 24"
# "_NET_WM_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Magnify 3x""

# - wmnd
# - can only spawn *in* the dock, so untested

# - xfce4-panel
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_BELOW"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_PID(CARDINAL) = 1453"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_STRUT_PARTIAL(CARDINAL) = 0, 68, 0, 0, 0, 0, 481, 913, 0, 0, 0, 0"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 18874374"
# "_NET_WM_USER_TIME(CARDINAL) = 2525473096"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x1200005"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - xmessage
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "xmessage""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "xmessage""
#-

##++
# - the root window
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - firefox
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - gkrellm (not in the dock)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "middle/center of display" mode)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_UTILITY, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "upper/right of display" mode)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - notify-send
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - openbox dock (& anything/everything in it)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - quasselclient
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - rxvt
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - tint2
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - wmagnify normal & wmagnify sticky
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - xfce4-panel
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - xmessage
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"
##--

###+++

# - indented with tab = script supports
# - # = xprop -root
# - ## = xprop -id 0xdeadf00d

# - root window properties (& related messages)

	# - "function _get_net_active_window_window"              (unused)
	# - "function _get_net_client_list_stacking_window"       (unused)
	# - "function _get_net_client_list_window"
	# - "function _get_net_current_desktop_cardinal"          (embedded)
	# - "function _get_net_desktop_geometry_cardinal"
	# - "function _get_net_desktop_layout_cardinal"           (unused)
	# - "function _get_net_desktop_names_utf8_string"
	# - "function _get_net_desktop_viewport_cardinal"
	# - "function _get_net_number_of_desktops_cardinal"       (unused)
	# - "function _get_net_showing_desktop_cardinal"          (unused)
	# - "function _get_net_supported_atom"                    (unused)
	# - "function _get_net_supporting_wm_check_window"        (unused)
	# - "function _get_net_virtual_roots_window"              (unused)
	# - "function _get_net_workarea_cardinal"

# - application window properties

	## - "function _get_net_frame_extents_cardinal"
	## - "function _get_net_wm_allowed_actions_atom"          (unused)
	## - "function _get_net_wm_bypass_compositor_cardinal"    (unused)
	## - "function _get_net_wm_desktop_cardinal"
	## - "function _get_net_wm_icon_geometry_cardinal"        (unused)
	## - "function _get_net_wm_icon_name_utf8_string"         (unused)
	## - "function _get_net_wm_name_utf8_string"
	## - "function _get_net_wm_opaque_region_cardinal"        (unused)
	## - "function _get_net_wm_pid_cardinal"                  (unused)
	## - "function _get_net_wm_state_atom"
	## - "function _get_net_wm_strut_cardinal"                (unused)
	## - "function _get_net_wm_strut_partial_cardinal"        (unused)
	## - "function _get_net_wm_sync_request_counter_cardinal" (unused)
	## - "function _get_net_wm_user_time_cardinal"            (unused)
	## - "function _get_net_wm_user_time_window_window"       (unused)
	## - "function _get_net_wm_visible_icon_name_utf8_string" (unused)
	## - "function _get_net_wm_visible_name_utf8_string"      (unused)
	## - "function _get_net_wm_window_type_atom"              (unused)

# ^ update this listing with
# grep "^function _get_net_" /usr/local/bin/move-window | sort | lesss

# - these are defined in the freedesktop specification

# - add functions for anything not tabbed
# - before adding anything, I need to discover the appropriate sed invocation
#   for each one

# - indented with tab = script supports
# - # = xprop -root
# - ## = xprop -id 0xdeadf00d

# - root window properties (& related messages)

# NOTE: (_NET_VIRTUAL_ROOTS)
# - Openbox does not use virtual roots, so this is not needed.

	# _NET_ACTIVE_WINDOW, WINDOW/32
	# _NET_CLIENT_LIST, WINDOW[]/32
	# _NET_CLIENT_LIST_STACKING, WINDOW[]/32
	# _NET_CURRENT_DESKTOP desktop, CARDINAL/32
	# _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32
	# _NET_DESKTOP_LAYOUT, orientation, columns, rows, starting_corner CARDINAL[4]/32
	#define _NET_WM_ORIENTATION_HORZ 0
	#define _NET_WM_ORIENTATION_VERT 1
	#define _NET_WM_TOPLEFT     0
	#define _NET_WM_TOPRIGHT    1
	#define _NET_WM_BOTTOMRIGHT 2
	#define _NET_WM_BOTTOMLEFT  3
	# _NET_DESKTOP_NAMES, UTF8_STRING[]
	# _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32
	# _NET_NUMBER_OF_DESKTOPS, CARDINAL/32
	# _NET_SHOWING_DESKTOP desktop, CARDINAL/32
	# _NET_SUPPORTED, ATOM[]/32
	# _NET_SUPPORTING_WM_CHECK, WINDOW/32
	# _NET_VIRTUAL_ROOTS, WINDOW[]/32
	# _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

# - other root window messages

# _NET_CLOSE_WINDOW
# _NET_MOVERESIZE_WINDOW
# _NET_REQUEST_FRAME_EXTENTS
# _NET_RESTACK_WINDOW

# _NET_WM_MOVERESIZE
#define _NET_WM_MOVERESIZE_SIZE_TOPLEFT      0
#define _NET_WM_MOVERESIZE_SIZE_TOP          1
#define _NET_WM_MOVERESIZE_SIZE_TOPRIGHT     2
#define _NET_WM_MOVERESIZE_SIZE_RIGHT        3
#define _NET_WM_MOVERESIZE_SIZE_BOTTOMRIGHT  4
#define _NET_WM_MOVERESIZE_SIZE_BOTTOM       5
#define _NET_WM_MOVERESIZE_SIZE_BOTTOMLEFT   6
#define _NET_WM_MOVERESIZE_SIZE_LEFT         7
#define _NET_WM_MOVERESIZE_MOVE              8   /* movement only */
#define _NET_WM_MOVERESIZE_SIZE_KEYBOARD     9   /* size via keyboard */
#define _NET_WM_MOVERESIZE_MOVE_KEYBOARD    10   /* move via keyboard */
#define _NET_WM_MOVERESIZE_CANCEL           11   /* cancel operation */

# - application window properties

# NOTE: (_NET_WM_HANDLED_ICONS)
# - Openbox does not display icons for iconic windows.

# NOTE: (_NET_WM_PING)
# - Openbox doesn't look for hung processes at this time.

	## _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32
	## _NET_WM_ALLOWED_ACTIONS, ATOM[] (12 possibilities)
	## _NET_WM_ACTION_ABOVE, ATOM
	## _NET_WM_ACTION_BELOW, ATOM
	## _NET_WM_ACTION_CHANGE_DESKTOP, ATOM
	## _NET_WM_ACTION_CLOSE, ATOM
	## _NET_WM_ACTION_FULLSCREEN, ATOM
	## _NET_WM_ACTION_MAXIMIZE_HORZ, ATOM
	## _NET_WM_ACTION_MAXIMIZE_VERT, ATOM
	## _NET_WM_ACTION_MINIMIZE, ATOM
	## _NET_WM_ACTION_MOVE, ATOM
	## _NET_WM_ACTION_RESIZE, ATOM
	## _NET_WM_ACTION_SHADE, ATOM
	## _NET_WM_ACTION_STICK, ATOM
	## _NET_WM_BYPASS_COMPOSITOR, CARDINAL/32
	## _NET_WM_DESKTOP desktop, CARDINAL/32
## _NET_WM_HANDLED_ICONS
	## _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32
	## _NET_WM_ICON_NAME, UTF8_STRING
	## _NET_WM_NAME, UTF8_STRING
	## _NET_WM_OPAQUE_REGION, x, y, width, height, CARDINAL[][4]/32
	## _NET_WM_PID CARDINAL/32
	## _NET_WM_STATE, ATOM[] (13 possibilities)
	## _NET_WM_STATE_ABOVE, ATOM
	## _NET_WM_STATE_BELOW, ATOM
	## _NET_WM_STATE_DEMANDS_ATTENTION, ATOM
	## _NET_WM_STATE_FOCUSED, ATOM
	## _NET_WM_STATE_FULLSCREEN, ATOM
	## _NET_WM_STATE_HIDDEN, ATOM
	## _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
	## _NET_WM_STATE_MAXIMIZED_VERT, ATOM
	## _NET_WM_STATE_MODAL, ATOM
	## _NET_WM_STATE_SHADED, ATOM
	## _NET_WM_STATE_SKIP_PAGER, ATOM
	## _NET_WM_STATE_SKIP_TASKBAR, ATOM
	## _NET_WM_STATE_STICKY, ATOM
	## _NET_WM_STRUT, left, right, top, bottom, CARDINAL[4]/32
	## _NET_WM_STRUT_PARTIAL, left, right, top, bottom, left_start_y, left_end_y, right_start_y, right_end_y, top_start_x, top_end_x, bottom_start_x, bottom_end_x, CARDINAL[12]/32
	## _NET_WM_SYNC_REQUEST_COUNTER, ?, ?, CARDINAL[]/32
	## _NET_WM_USER_TIME CARDINAL/32
	## _NET_WM_USER_TIME_WINDOW WINDOW/32
	## _NET_WM_VISIBLE_ICON_NAME, UTF8_STRING
	## _NET_WM_VISIBLE_NAME, UTF8_STRING
	## _NET_WM_WINDOW_TYPE, ATOM[]/32 (14 possibilities)
	## _NET_WM_WINDOW_TYPE_COMBO, ATOM
	## _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
	## _NET_WM_WINDOW_TYPE_DIALOG, ATOM
	## _NET_WM_WINDOW_TYPE_DND, ATOM
	## _NET_WM_WINDOW_TYPE_DOCK, ATOM
	## _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_NORMAL, ATOM
	## _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
	## _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_SPLASH, ATOM
	## _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
	## _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
	## _NET_WM_WINDOW_TYPE_UTILITY, ATOM

## _NET_WM_ICON CARDINAL[][2+n]/32 (deliberately skipping this one)

###---

####++++

# $ xwininfo -id 0x80010c # gkrellm & wmnd in the dock
# Absolute upper-left X:  1852
# Absolute upper-left Y:  0
# Relative upper-left X:  1852
# Relative upper-left Y:  0
# Width: 66
# Height: 379
# Border width: 1
# Corners:  +1852+0  -0+0  -0-699  +1852-699

# $ xwininfo -id 0x1200004 # xfce4-panel
# Absolute upper-left X:  1852
# Absolute upper-left Y:  380
# Relative upper-left X:  0
# Relative upper-left Y:  0
# Width: 68
# Height: 407
# Border width: 0
# Corners:  +1852+380  -0+380  -0-293  +1852-293

# $ xwininfo -id 0xe00008 # tint2
# Absolute upper-left X:  0
# Absolute upper-left Y:  1056
# Relative upper-left X:  0
# Relative upper-left Y:  0
# Width: 1920
# Height: 24
# Border width: 0
# Corners:  +0+1056  -0+1056  -0-0  +0-0

# wmctrl -i -r 0xe00008 -e 0,0,1056,-1,-1 # bl (overall)
# wmctrl -i -r 0xe00008 -e 0,-68,-1,-1,-1 # same (wups)

# wmctrl -i -r 0xe00008 -e 0,-68,1032,-1,-1 # bc (wups)
# wmctrl -i -r 0xe00008 -e 0,0,1056,-1,-1 # bc (overall)

#+
# #+ _coordinates_validate +#
#                        $_COORDINATE_X: "-68"
#                        $_COORDINATE_Y: "-1"
# #- _coordinates_validate -#
#-

# $ xwininfo -id 0x3400011 # quassel
# Absolute upper-left X:  1
# Absolute upper-left Y:  22
# Relative upper-left X:  1
# Relative upper-left Y:  22
# Width: 1000
# Height: 630
# Border width: 0
# Corners:  +1+22  -919+22  -919-428  +1-428

# wmctrl -i -r 0x3400011 -e 0,  0,  0,-1,-1 # ul
# wmctrl -i -r 0x3400011 -e 0,850,  0,-1,-1 # ur
# wmctrl -i -r 0x3400011 -e 0,  0,398,-1,-1 # bl
# wmctrl -i -r 0x3400011 -e 0,850,398,-1,-1 # br
# wmctrl -i -r 0x3400011 -e 0,123,123,-1,-1 # 123,123

# $ xwininfo -id 0xa0004d # rxvt # ur

# Absolute upper-left X:  1    # ul
# Absolute upper-left Y:  22   # ul
# Relative upper-left X:  1    # ul
# Relative upper-left Y:  22   # ul

# Absolute upper-left X:  634  # uc
# Absolute upper-left Y:  22   # uc
# Relative upper-left X:  1    # uc
# Relative upper-left Y:  22   # uc

# Absolute upper-left X:  1268 # ur
# Absolute upper-left Y:  22   # ur
# Relative upper-left X:  1    # ur
# Relative upper-left Y:  22   # ur

# Absolute upper-left X:  1    # ml
# Absolute upper-left Y:  366  # ml
# Relative upper-left X:  1    # ml
# Relative upper-left Y:  22   # ml

# Absolute upper-left X:  634  # mc
# Absolute upper-left Y:  366  # mc
# Relative upper-left X:  1    # mc
# Relative upper-left Y:  22   # mc

# Absolute upper-left X:  1268 # mr
# Absolute upper-left Y:  366  # mr
# Relative upper-left X:  1    # mr
# Relative upper-left Y:  22   # mr

# Absolute upper-left X:  1    # bl
# Absolute upper-left Y:  710  # bl
# Relative upper-left X:  1    # bl
# Relative upper-left Y:  22   # bl

# Absolute upper-left X:  634  # bc
# Absolute upper-left Y:  710  # bc
# Relative upper-left X:  1    # bc
# Relative upper-left Y:  22   # bc

# Absolute upper-left X:  1268 # br
# Absolute upper-left Y:  710  # br
# Relative upper-left X:  1    # br
# Relative upper-left Y:  22   # br

# Width: 583
# Height: 340
# Border width: 0

# Corners:     +1+22   -1336+22   -1336-718     +1-718 # ul
# Corners:   +634+22    -703+22    -703-718   +634-718 # uc
# Corners:  +1268+22     -69+22     -69-718  +1268-718 # ur
# Corners:     +1+366  -1336+366  -1336-374     +1-374 # ml
# Corners:   +634+366   -703+366   -703-374   +634-374 # mc
# Corners:  +1268+366    -69+366    -69-374  +1268-374 # mr
# Corners:     +1+710  -1336+710   -1336-30     +1-30  # bl
# Corners:   +634+710   -703+710    -703-30   +634-30  # bc
# Corners:  +1268+710    -69+710     -69-30  +1268-30  # br

# (pending)
# - do something special with _NET_ACTIVE_WINDOW_WINDOW from
#   "function _get_net_active_window_window"
# - interesting discovery: "_NET_ACTIVE_WINDOW(WINDOW): window id # 0x0" is
#   returned in a desktop containing no _NET_WM_WINDOW_TYPE_NORMAL windows
#   (or if any _NET_WM_WINDOW_TYPE_NORMAL windows exist, they're minimized)
# > is this behaviour specific to openbox? find out
# > regardless, the recent changes in "function _pass_fail_by_window_id"
#   consider this as a "does not exist" error if "id 0x0" is specified on the
#   commandline

# TODO: (ASAP!)
# - trace down & fix whatever's causing incorrect calculations with tint2
#+
# > $ move-window -id 0xe00008 -D -d -v -p -c same
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,-68,-1,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -p -c bl
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,-68,1032,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -p -c bc
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,-68,1032,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -p -c br
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,-68,1032,-1,-1"
#-
#+
# > $ move-window -id 0xe00008 -D -d -v -o -p -c same
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,-1,-1,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -o -p -c bl
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,0,1056,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -o -p -c bc
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,0,1056,-1,-1"
# > $ move-window -id 0xe00008 -D -d -v -o -p -c br
# > wmctrl command (move): "true -i -r 0xe00008 -e 0,0,1056,-1,-1"
#-

####----
