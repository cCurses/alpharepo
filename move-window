#!/bin/bash
#+ marker sof +#

# move-window v2019.11.02

# Copyright (C) 2019
# Erik Jan Tromp <alphageek@slackware.com>
# Licensed under the GPL v2

# concept:
# - move selected window to desired position on desktop

# IDEA:
# - somehow do a set of multiple calls to wmctrl so "-l, --lower" can be
#   implemented. do so in such a way that focus is not "stolen". if this
#   approach works, use it as a replacement for "-r, --raise" as well because
#   the current method of raising a window steals focus
# - possibly "-b add,above" or "-b add,below", followed by moving to "-1,-1",
#   then "-b remove,above" or "-b remove,below"
# - related: for "<WIN>" possibly use ":ACTIVE:"
# - discover window's state beforehand so state can be restored afterwards.
#   inspect the following:
#   _NET_WM_STATE_ABOVE, ATOM
#   _NET_WM_STATE_BELOW, ATOM
# ^ "function _get_net_wm_state_atom" for examples
# - this will not work. more details later
# - alternate approach to attempt: manipulate window stacking order directly &
#   see what happens

# FIXME
# - something's going on in "function _coordinates_validate". more notes there
# - #+ marker testing +# / #- marker testing -#

# NOTE:
# - additional information acquired from:
#   https://standards.freedesktop.org/wm-spec/wm-spec-latest.html

# TODO:
# - there are a small number of _NET_* properties mentioned in the freedesktop
#   specification that lack information suitable for me to come up with syntax
#   appropriate for calling sed. as such, they're not displayed (for now)

# IDEA:
# - allow windows to be "nudged" by a relative offset of pixels. +/- format
# - this will require a complete rethink of how "-1" is handled

# IDEA:
# - add "-p, --permissive" (or somesuch) to permit moving otherwise unmoveable
#   windows. also very useful for the above (nudge) idea (done)

# TODO:
# - figure out a different method of doing calculations regarding window size
#   & placement from "xwininfo" output. excerpts of interesting stuff below:
# - possibly use xwininfo's "Corners:" somehow?
# - xwininfo's "-geometry" cannot be used. it reports characters not pixels
#   for rxvt

# $ xwininfo -id 0x80010c # gkrellm & wmnd in the dock
# Absolute upper-left X:  1852
# Absolute upper-left Y:  0
# Relative upper-left X:  1852
# Relative upper-left Y:  0
# Width: 66
# Height: 379
# Border width: 1

# $ xwininfo -id 0x1200004 # xfce4-panel
# Absolute upper-left X:  1852
# Absolute upper-left Y:  380
# Relative upper-left X:  0
# Relative upper-left Y:  0
# Width: 68
# Height: 407
# Border width: 0

# $ xwininfo -id 0xe00008 # tint2
# Absolute upper-left X:  0
# Absolute upper-left Y:  1056
# Relative upper-left X:  0
# Relative upper-left Y:  0
# Width: 1920
# Height: 24
# Border width: 0

# wmctrl -i -r 0xe00008 -e 0,0,1056,-1,-1 # bl (overall)
# wmctrl -i -r 0xe00008 -e 0,-68,-1,-1,-1 # same (wups)

# wmctrl -i -r 0xe00008 -e 0,-68,1032,-1,-1 # bc (wups)
# wmctrl -i -r 0xe00008 -e 0,0,1056,-1,-1 # bc (overall)

#+
# #+ _coordinates_validate +#
#                        $_COORDINATE_X: "-68"
#                        $_COORDINATE_Y: "-1"
# #- _coordinates_validate -#
#-

# $ xwininfo -id 0x3400011 # quassel
# Absolute upper-left X:  1
# Absolute upper-left Y:  22
# Relative upper-left X:  1
# Relative upper-left Y:  22
# Width: 1000
# Height: 630
# Border width: 0

# wmctrl -i -r 0x3400011 -e 0,  0,  0,-1,-1 # ul
# wmctrl -i -r 0x3400011 -e 0,850,  0,-1,-1 # ur
# wmctrl -i -r 0x3400011 -e 0,  0,398,-1,-1 # bl
# wmctrl -i -r 0x3400011 -e 0,850,398,-1,-1 # br
# wmctrl -i -r 0x3400011 -e 0,123,123,-1,-1 # 123,123

# OOPS:
# - changelog order is unpredictable. some series of entries per date are
#   chronologically top-to-bottom while others are bottom-to-top. preferred
#   order is bottom-to-top. this will gradually be fixed when time permits

# 2019-11-02
# (in progress)
# - tagged various functions as:
#   "# - unused"
#   "# - required"
#   "#     parent: "function <function name>""
#   "#      child: "function <function name>""
#   "#   precedes: "function <function name>""
#   "#   succeeds: "function <function name>""
# ^ I may quietly remove these at some point. they've been added simply to
#   help me figure out precisely what is unused &/or required & in what order

# (done)
# - "function _get_window_undecorated_geometry" changed the following lines:
#  add: _WINDOW_BORDER_WIDTH \
#  was: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*/ s//\1 \2/g')
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3/g')
#  add: _eko_pv \$_WINDOW_BORDER_WIDTH: \""$_WINDOW_BORDER_WIDTH\""
# - "function _set_window_position" changed the following lines:
#  was: _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
#  add: if $_BOOLEAN_UNUSED
#  add: then
#   is:   _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
#  add: fi
#  add: _eko_pv "window border width:" \""$_WINDOW_BORDER_WIDTH\""
# - "function _get_net_frame_extents_cardinal" added the following lines:
#  add: if [[ -z $_NET_FRAME_EXTENTS_CARDINAL ]]
#  add: then
#  add:   _NET_FRAME_EXTENTS_CARDINAL="0 0 0 0"
#  add: fi
# - "function _pass_fail_by_window_type" added $_BOOLEAN_PERMISSIVE test
# - added "-p, --permissive" option to allow moving otherwise unmoveable
#   windows
# - rearranged calls to the following functions to be displayed only when
#   "-u, --unused" is specified:
#   "function _get_net_active_window_window"
#   "function _get_net_desktop_names_utf8_string"
#   "function _get_net_desktop_viewport_cardinal"
#   "function _get_net_number_of_desktops_cardinal"
#   "function _get_net_wm_desktop_cardinal"
# 2019-10-31
# - "function _set_window_position" changed the following lines:
#  add: if [[ $_COORDINATE_X != -1 ]] \
#  add: && [[ $_COORDINATE_Y != -1 ]]
#  add: then
#  add:   _COORDINATE_X=$(( $_COORDINATE_X + $_KLUDGE_X ))
#  add:   _COORDINATE_Y=$(( $_COORDINATE_Y + $_KLUDGE_Y ))
#  add: fi
#  was: _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_COORDINATE_X + $_KLUDGE_X )),$(( $_COORDINATE_Y + $_KLUDGE_Y )),-1,-1"
#   is: _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$_COORDINATE_X,$_COORDINATE_Y,-1,-1"
# 2019-10-25
# - "function _binary_validate_setup" converted "sed", "xprop", & "xwininfo"
#   testing from nested to sequential
# - "function _builtin_validate_setup" converted "read" testing from nested to
#   sequential
# - "function _binary_validate_setup" changed the following lines (xprop):
#  was: #   "-id id" (no long form)
#   is: #   "-id id" (test only for "-id") (no long form)
#  was: _BINARY_OPTION="-id id"
#   is: _BINARY_OPTION=-id
# - "function _binary_validate_setup" changed the following lines (xwininfo):
#  was: #   "-id windowid" (no long form)
#   is: #   "-id windowid" (test only for "-id") (no long form)
#  was: _BINARY_OPTION="-id windowid"
#   is: _BINARY_OPTION=-id
# 2019-10-24
# - "function _binary_validate_setup" added the following lines to "xprop":
#  add: if [[ " $_BINARY_HELP " =~ "unable to open display" ]]
#  add: then
#  add:   _show_error "unable to determine \$DISPLAY &/or \$XAUTHORITY"
#  add: fi
# - added several routines to gather even more information on almost all known
#   _NET_* properties that are mentioned in the freedesktop specification but
#   not seen in openbox. at worst, they'll display as ""
# - "function _get_net_wm_icon_name_utf8_string" added
# - "function _get_net_wm_opaque_region_cardinal" added
# - "function _get_net_wm_pid_cardinal" added
# - "function _get_net_wm_strut_cardinal" added
# - "function _get_net_wm_strut_partial_cardinal" added
# - "function _get_net_wm_sync_request_counter_cardinal" added
# - "function _get_net_wm_user_time_cardinal" added
# - "function _get_net_wm_user_time_window_window" added
# - added comments about _NET_* entities in each function where they're
#   referenced
# - "function _pass_fail_by_window_type" added the complete list of known
#   window types (except _NET_WM_WINDOW_TYPE_NORMAL) to the error testing
# 2019-10-22
# - moved the large block of assorted notes to the very end of the script for
#   future reference
# - "function _pass_fail_by_window_id" when a given window's id fails, call
#   "function _pass_fail_by_window_type" to get a descriptive error message
# - "function _pass_fail_by_window_type" improved tests for kdialog's 2
#   seemingly random modes of creating popups. both modes are now properly
#   trapped
# - removed all comments in #+ marker sed syntax +# / #- marker sed syntax -#
# 2019-10-20
# - "function _eko_pv" changed the following line:
#  was: printf "%34s " "$1"
#   is: printf "%39s " "$1"
# - "function _eko_pv_en" changed the following line:
#  was: printf "%34s " "$1"
#   is: printf "%39s " "$1"
# - added several routines to gather more information on all known _NET_*
#   properties. to the best of my knowledge they're not really necessary, but
#   they're a good reference
# - "function _get_net_client_list_stacking_window" added
# - "function _get_net_desktop_layout_cardinal" added
# - "function _get_net_showing_desktop_cardinal" added
# - "function _get_net_supported_atom" added
# - "function _get_net_supporting_wm_check_window" added
# - "function _get_net_wm_allowed_actions_atom" added
# - "function _get_net_wm_icon_geometry_cardinal" added
# - "function _get_net_wm_visible_icon_name_utf8_string" added
# - "function _get_net_wm_visible_name_utf8_string" added
# - "_NET_WM_ICON(CARDINAL)" deliberately skipped from this treatment
# - "function _parse_parameters" added $_BOOLEAN_UNUSED test
# - added "-u, --unused" option to gather/see them in "-v, --verbose" mode
# 2019-10-19
# - experimenting with different sed syntax formats. output is identical
#   between the old & new approaches, but the new approach is technically
#   faster (not that it matters in this script). if nothing else, this is a
#   good reference
# - look for #+ marker sed syntax +# / #- marker sed syntax -#
# - when possible, only the changed sub-expression with a small portion of
#   context is mentioned here for brevity
#  was: 's/.*Corners: \(.*\) -geometry.*/\1/g' # 1 change
#   is: '/.*Corners: \(.*\) -geometry.*/ s//\1/g'
#  was: /!d ; s/.* # //g') # 1 change
#   is: /!d ; /.* # / s///g')
#  was: /!d ; s/.* = //g') # 4 changes
#   is: /!d ; /.* = / s///g')
#  was: /!d ; s/\(.* # \|,\)//g') # 1 change
#   is: /!d ; /\(.* # \|,\)/ s///g')
#  was: /!d ; s/\(.* = \|,\)//g') # 6 changes
#   is: /!d ; /\(.* = \|,\)/ s///g')
#  was: 's/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g' # 1 change
#   is: '/.*Width: \(.*\) Height: \(.*\) Depth:.*/ s//\1 \2/g'
#  was: /!d ; s/\(.*id: \)\|\( .*\)//g') # 1 change
#   is: /!d ; /\(.*id: \)\|\( .*\)/ s///g')
# 2019-10-16
# -  renamed functions globally:
#  was: _eko_pS
#  was: _eko_pS_en
#   is: _eko_ps
#   is: _eko_ps_en
# - "functions:/variables:/binaries:/builtins:" listings for each function
#   updated & verified. also updated the "use & abuse" listings based on this
#   information
# - "function _window_id_acquire" added the following lines:
#  add: _eko_pv_en "select the window to move:" ""
#  add: _eko_pv "" ""
# - "function _eko_pv_en" added
# - "function _coordinates_validate" removed 2 of the 4 "error exits". rely
#    solely on the 4 "force to fits"
# - comment cleanup throughout the script
# 2019-10-11
# - "function _show_help" reordered the options listed so that "-d, --debug",
#   "-v, --verbose", & "-?, -h, --help" are the last options displayed
# - "function _parse_parameters" reordered the options parsed to match what is
#   displayed in "function _show_help" to simplify maintenance
# - "function _eko_S_en" removed
# - changed the following lines globally:
#  was: _eko_S_en "      \$_FOO: \"$_FOO\""
#   is: _eko_pS_en \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S_en "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS_en "Foo Bar:" \""$_FOO\""
# - "function _eko_pS_en" added for properly formatted stdout output
# - "function _eko_S" removed
# - changed the following lines globally:
#  was: _eko_S "      \$_FOO: \"$_FOO\""
#   is: _eko_pS \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS "Foo Bar:" \""$_FOO\""
# - "function _eko_pS" added for properly formatted stdout output
# - "function _eko_v" removed
# - changed the following lines throughout the script:
#  was: _eko_v "      \$_FOO: \"$_FOO\""
#   is: _eko_pv \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_v "      Foo Bar:" \""$_FOO\""
#   is: _eko_pv "Foo Bar:" \""$_FOO\""
# - "function _eko_pv" added for properly formatted verbose output
# - "functions:/variables:/binaries:/builtins:" listings added/appended to
#   each function & in main
# ^ "# builtins:" is to keep track of "echo" &/or "printf" usage. technically
#   speaking, "(none)" is a misnomer as it's only in reference to these 2
#   builtins
# 2019-09-20
# - "function _get_window_undecorated_geometry" altered calling syntax to
#   "echo/sed"
#  was: <<< \
#  was: $(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
#   is: < \
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
# - removed all #'d lines dealing with unnecessary doublequoting
# - NOTE: (to self) refer to the 2019-08-12 savepoint for the "before" version
# - added "--" to all invocations of "read". possibly overkill in a few spots,
#   but better to have too many than too few
# - "function _builtin_validate_setup" added for "read -r"
# 2019-08-12
# - "function _binary_validate_setup" altered _BINARY_HELP assignment & tests
#   for each binary
#  was: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2> /dev/null))
#   is: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
#  was: if [[ -z $_BINARY_HELP ]]
#   is: if [[ $_BINARY_HELP =~ "command not found" ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_BINARY_HELP" " =~ " "$_BINARY_OPTION" " ]]
#   is: if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
# - "function _get_net_wm_state_atom" altered _NET_WM_STATE_ATOM for each test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_HORZ" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_VERT" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
# - "function _pass_fail_by_window_id" altered _NET_CLIENT_LIST_WINDOW test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_NET_CLIENT_LIST_WINDOW" " =~ " "$_OPTION_WINDOW_ID" " ]]
#   is: if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
# - "function _get_net_desktop_names_utf8_string" altered tests so this script
#   can be used with older versions of bash
#  was: # - "-v varname" = true if the shell variable varname is set
#  was: if [[ -v _POSITION_FINISH ]] \
#  was: && [[ -v _POSITION_START ]]
#   is: # - "-n string" = true if the length of string is non-zero
#   is: if [[ -n $_POSITION_FINISH ]] \
#   is: && [[ -n $_POSITION_START ]]
# 2019-07-11
# - additional style changes:
#   (my scripts are already bash specific, so backwards compatibility is not
#   an issue. several ideas are from http://mywiki.wooledge.org/BashFAQ)
#   - naming convention for functions
#   - usage of "[]" vs "[[]]" to evaluate expressions
#   - doublequote variable assignments only when absolutely necessary to avoid
#     typecasting
# 2019-07-10
# - cleanup & improvements including, but not limited to, the following:
# - removed many irrelevant comments
# - style changes. many minor things add up to an overall major improvement
# - "function _eko_iod" simplified & improved
# - "function _coordinates_force_fail" removed
# - "function _eko_d" removed
# - "function _show_error" output to stderr, not stdout
# - "function _binary_validate_setup" added for "sed", "wmctrl", "xprop",
#   "xwininfo"
# - "function _coordinates_user_specified" added some extra magic so "-1" is
#   assumed if not specified. aka: "-c X," & "-c ,Y" are interpreted as
#   "-c X,-1" & "-c -1,Y"
# - "function _parse_parameters" style changes & improvements
# - changed how wmctrl detection/substitution is handled
# - renamed option "-t, --test" to "-D, --dry-run" for uniformity
# - replaced short options with long options for called binaries (sed)
# 2019-05-27
# - assorted edits for clarity
# - "function _coordinates_user_specified" improved coordinate parsing
# - "function _parse_parameters" improved wmctrl detection & substitution
# - "function _parse_parameters" if coordinates aren't specified, default to
#   "same"
# - "function _set_window_position" minor edits to simplify operations
# - "function _coordinates_calculate" minor edits for clarity
# 2019-05-26
# - "function _coordinates_force" added
# 2019-05-25
# - "function _coordinates_calculate" fixed some erroneous calculations
# 2019-05-24
# - first limited release
# 2019-05-18
# - coding begins almost from scratch. using some ideas learned from writing
#   "obx-window"

# TODO:
# - somehow figure out how to get rid of the dependency on wmctrl
# - add support to manipulate currently-in-focus (_NET_ACTIVE_WINDOW_WINDOW)
#   window. (note to self: to do what with it, exactly?)
# ^ have WM bindings to move the currently-in-focus window around the desktop?

# TODO:
# - do something with this information? (specifically: 4294967295 handling)
#   xprop -id
#   _get_net_wm_desktop_cardinal
#   _NET_WM_DESKTOP_CARDINAL
#   "_NET_WM_DESKTOP(CARDINAL) = "
#   "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
#   "_NET_WM_DESKTOP(CARDINAL) = 0"
#   "_NET_WM_DESKTOP(CARDINAL) = 1"
#   "_NET_WM_DESKTOP(CARDINAL) = 2"
#   "_NET_WM_DESKTOP(CARDINAL) = 3"
#   "_NET_WM_DESKTOP(CARDINAL) = 4"
#   "_NET_WM_DESKTOP(CARDINAL) = 5"
#   "_NET_WM_DESKTOP(CARDINAL) = 6"
#   "_NET_WM_DESKTOP(CARDINAL) = 7"
# - gkrellm (not in the dock), kdialog (in its random "top/right of display"
#   mode), notify-send, tint2, wmagnify (sticky), xfce4-panel
#   "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# - wmagnify (normal), xmessage
#   "_NET_WM_DESKTOP(CARDINAL) = 0"
# ^ kdialog (in its random "center of display" mode) has absolutely no mention
#   of "_NET_WM_DESKTOP(CARDINAL)" in its report

# NOTE:
# - I would have expected to see "_NET_WM_STATE(ATOM) = _NET_WM_STATE_STICKY"
#   when I see "_NET_WM_DESKTOP(CARDINAL) = 4294967295", but that isn't the
#   case in openbox. I'm obviously missing the point about something

# NOTE: (to self) (& others, if you're bored. hi there!)
# - look for anything with the following tags: EDIT FIXME IDEA NOTE ORDER TODO
#   TRY
# - use of bash builtins is often (but not always) preferred over shelling out
#   to binaries
# ^ reasons: speed, availability, simplicity, & predictability. fast is always
#   preferred, no need to test if a binary even *exists*, no need to be
#   concerned about changed syntax or output from one release to the next

# NOTE: (differences when doublequoting vs not doublequoting)
# - #1: echo "$_OUTPUT_XPROP_ROOT"
# - #2: echo "$_OUTPUT_XPROP_ID"
# - #3: echo $_OUTPUT_XWININFO_ID
# ^ #1 & #2 above preserve all spacing, linebreaks, & special characters
# ^ #3 does not preserve spacing, linebreaks, or special characters. outputs
#   everything as a single line with single spacing
# - this behaviour is deliberately (ab)used throughout the script

# NOTE: (builtin/binary/variable/function indentation)
# - 4 spaces, hash, builtin/binary/variable/function name = in sub-function
# - 2 spaces, hash, builtin/binary/variable/function name = in function
# - 0 spaces, hash, builtin/binary/variable/function name = in main
# NOTE: (system builtin use & abuse - excluding echo/printf)
    # read
  # read
# NOTE: (system binary use & abuse)
  # sed
  # wmctrl
  # xprop
  # xwininfo
# NOTE: (system & script variable use & abuse)
# - system variables are always in the form "FOO"
# - script variables are always in the form "_FOO"
# - system variables referenced & modified. necessary & the whole point
    # @
  # @
# - system variables referenced but not modified
  # #
  # 1
  # 2
  # @
  # FUNCNAME (single dimension indexed array)
# @
# - ephemeral variables. here today, gone tomorrow (keeping track for myself)
# - better to have too many than too few
    # _BOOLEAN_OVERALL
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_GEOMETRY_H
    # _NET_DESKTOP_GEOMETRY_W
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _NET_WORKAREA_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _WORKAREA_BORDER_B
    # _WORKAREA_BORDER_L
    # _WORKAREA_BORDER_R
    # _WORKAREA_BORDER_T
    # _XX0
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_OVERALL
  # _BOOLEAN_PERMISSIVE
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_UNUSED
  # _BOOLEAN_VERBOSE
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _CORNERS
  # _COUNTER
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_ACTIVE_WINDOW_WINDOW
  # _NET_CLIENT_LIST_STACKING_WINDOW
  # _NET_CLIENT_LIST_WINDOW
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_LAYOUT_C
  # _NET_DESKTOP_LAYOUT_CARDINAL
  # _NET_DESKTOP_LAYOUT_O
  # _NET_DESKTOP_LAYOUT_R
  # _NET_DESKTOP_LAYOUT_S
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _NET_SHOWING_DESKTOP_CARDINAL
  # _NET_SUPPORTED_ATOM
  # _NET_SUPPORTING_WM_CHECK_WINDOW
  # _NET_WM_ALLOWED_ACTIONS_ATOM
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_WM_ICON_GEOMETRY_CARDINAL
  # _NET_WM_ICON_GEOMETRY_H
  # _NET_WM_ICON_GEOMETRY_W
  # _NET_WM_ICON_GEOMETRY_X
  # _NET_WM_ICON_GEOMETRY_Y
  # _NET_WM_ICON_NAME_UTF8_STRING
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WM_OPAQUE_REGION_CARDINAL
  # _NET_WM_OPAQUE_REGION_H
  # _NET_WM_OPAQUE_REGION_W
  # _NET_WM_OPAQUE_REGION_X
  # _NET_WM_OPAQUE_REGION_Y
  # _NET_WM_PID_CARDINAL
  # _NET_WM_STATE_ATOM
  # _NET_WM_STRUT_B
  # _NET_WM_STRUT_CARDINAL
  # _NET_WM_STRUT_L
  # _NET_WM_STRUT_PARTIAL_B
  # _NET_WM_STRUT_PARTIAL_BEX
  # _NET_WM_STRUT_PARTIAL_BSX
  # _NET_WM_STRUT_PARTIAL_CARDINAL
  # _NET_WM_STRUT_PARTIAL_L
  # _NET_WM_STRUT_PARTIAL_LEY
  # _NET_WM_STRUT_PARTIAL_LSY
  # _NET_WM_STRUT_PARTIAL_R
  # _NET_WM_STRUT_PARTIAL_REY
  # _NET_WM_STRUT_PARTIAL_RSY
  # _NET_WM_STRUT_PARTIAL_T
  # _NET_WM_STRUT_PARTIAL_TEX
  # _NET_WM_STRUT_PARTIAL_TSX
  # _NET_WM_STRUT_R
  # _NET_WM_STRUT_T
  # _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL
  # _NET_WM_USER_TIME_CARDINAL
  # _NET_WM_USER_TIME_WINDOW_WINDOW
  # _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING
  # _NET_WM_VISIBLE_NAME_UTF8_STRING
  # _NET_WORKAREA_CARDINAL
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XPROP_ROOT
  # _OUTPUT_XWININFO_ID
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T
# _BINARY_WMCTRL
# _OPTIONS_READ (read options, not script options)
# NOTE: (script function use & abuse)
# - script functions are always in the form "_foo"
    # _eko_iod
    # _eko_pv
  # _binary_validate_setup
  # _builtin_validate_setup
  # _coordinates_calculate
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_user_specified
  # _coordinates_validate
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en
  # _get_net_active_window_window
  # _get_net_client_list_stacking_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_layout_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_showing_desktop_cardinal
  # _get_net_supported_atom
  # _get_net_supporting_wm_check_window
  # _get_net_wm_allowed_actions_atom
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_icon_geometry_cardinal
  # _get_net_wm_icon_name_utf8_string
  # _get_net_wm_name_utf8_string
  # _get_net_wm_opaque_region_cardinal
  # _get_net_wm_pid_cardinal
  # _get_net_wm_state_atom
  # _get_net_wm_strut_cardinal
  # _get_net_wm_strut_partial_cardinal
  # _get_net_wm_sync_request_counter_cardinal
  # _get_net_wm_user_time_cardinal
  # _get_net_wm_user_time_window_window
  # _get_net_wm_visible_icon_name_utf8_string
  # _get_net_wm_visible_name_utf8_string
  # _get_net_workarea_cardinal
  # _get_window_undecorated_geometry
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help
  # _sub_function
  # _window_id_acquire
# _parse_parameters

#+ setup here +#

# variables:
# _OPTIONS_READ (read options, not script options)

# - doing this here so we get no suprises in "function _builtin_validate_setup"
unset _OPTIONS_READ

#- setup here -#

#+ function definitions here +#

# ORDER:
# - before calling _parse_parameters, but otherwise alphabetical

function _binary_validate_setup()
{
  _eko_iod "#+ _binary_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL

  # binaries:
  # sed
  # wmctrl
  # xprop
  # xwininfo

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - rather than test a given binary's version in hopes of figuring out which
  #   features it supports, test its supported feature set directly. not only
  #   is this much simpler to do, it's possible to test only those features
  #   that are explicitly used in the script
  # - how? get the binary to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = no binary, otherwise
  #   parse the help text for descriptions of specific features

  # NOTE:
  # - be explicit, use long form options when available

  #+ sed +#
  # - "sed --help". stdout
  #   "--expression=script" (no "=" required) (use "=" for uniformity)

  _BINARY_NAME=sed
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  _BINARY_OPTION=--expression=script
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- sed -#

  # NOTE:
  # - unlike my usual method of checking for binary availability & failing if
  #   what's needed isn't found, this script deliberately substitutes "wmctrl"
  #   with "false" so that all information gathering, calculations, &
  #   information dump are performed

  #+ wmctrl +#
  # - "wmctrl --help". stdout
  #  "-i" (no long form. no other options)
  #  "-r <WIN> -e <MVARG>" (no long form)
  #  "-a <WIN>" (no long form)

  _BINARY_NAME=wmctrl
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _BINARY_WMCTRL=false
  else
    _BINARY_WMCTRL=$_BINARY_NAME

    # NOTE:
    # - these tests must remain nested since they depend on the existence of
    #   wmctrl
    _BINARY_OPTION=-i
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-r <WIN> -e <MVARG>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-a <WIN>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi

  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  #- wmctrl -#

  #+ xprop +#
  # - "xprop -help". stderr
  # - "xprop -help 2>&1". stdout
  #   "-id id" (test only for "-id") (no long form)
  #   "-root" (no long form. no other options)

  _BINARY_NAME=xprop
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  if [[ " $_BINARY_HELP " =~ "unable to open display" ]]
  then
    _show_error "unable to determine \$DISPLAY &/or \$XAUTHORITY"
  fi

  _BINARY_OPTION=-id
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi

  _BINARY_OPTION=-root
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- xprop -#

  #+ xwininfo +#
  # - "xwininfo -help". stderr
  # - "xwininfo -help 2>&1 ". stdout
  #   "-id windowid" (test only for "-id") (no long form)

  _BINARY_NAME=xwininfo
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  fi

  _BINARY_OPTION=-id
  if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
  then
    _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
  fi
  #- xwininfo -#

  _eko_iod "#- _binary_validate_setup -#"
}

function _builtin_validate_setup()
{
  _eko_iod "#+ _builtin_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _OPTIONS_READ (read options, not script options)

  # binaries:
  # (none)

  # builtins:
  # echo
  # read

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - rather than test a given builtin's version (or more accurately, test a
  #   given version of bash itself) in hopes of figuring out which features it
  #   supports, test its supported feature set directly. not only is this much
  #   simpler to do, it's possible to test only those features that are
  #   explicitly used in the script
  # - how? get the builtin to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = unsupported builtin,
  #   otherwise parse the help text for descriptions of specific features

  #+ read +#
  # - "help read". stdout
  #   "-r"
  # - called in "function _pathnames_scan"
  # - _OPTIONS_READ is set

  _BUILTIN_NAME=read
  _BUILTIN_HELP=$(echo $(help $_BUILTIN_NAME 2>&1))
  if [[ $_BUILTIN_HELP =~ "no help topics match" ]]
  then
    _show_error "required builtin \"$_BUILTIN_NAME\" not supported"
  fi

  _BUILTIN_OPTION=-r
  if [[ " $_BUILTIN_HELP " =~ " $_BUILTIN_OPTION " ]]
  then
    _OPTIONS_READ=$_BUILTIN_OPTION
    _eko_pv \$_OPTIONS_READ: \""$_OPTIONS_READ\""
  else
    _show_error \""$_BUILTIN_NAME\" does not support \"$_BUILTIN_OPTION\""
  fi
  #- read -#

  _eko_iod "#- _builtin_validate_setup -#"
}

function _coordinates_calculate()
{
  _eko_iod "#+ _coordinates_calculate +#"

  # functions:
  # _coordinates_user_specified
  # _eko_iod
  # _show_help

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTION_WINDOW_COORDINATES
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function _coordinates_user_specified"
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _get_window_undecorated_geometry"
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # NOTE:
  # - "function _coordinates_calculate" & "function _coordinates_validate"
  #   share identical calculations for the 4 corners

  # NOTE:
  # - there are 9 pre-defined coordinates (3x3 grid), 1 "do not move"
  #   coordinate (for use with "-r, --raise"), & 1 user-specified coordinate

  case $_OPTION_WINDOW_COORDINATES in
    ( ul ) # Upper/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( uc ) # Upper/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( ur ) # Upper/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( ml ) # Middle/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( mc ) # Middle/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( mr ) # Middle/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( bl ) # Bottom/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( bc ) # Bottom/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( br ) # Bottom/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( same ) # Same (unchanged) coordinates. aka: do not move
      _COORDINATE_X=-1
      _COORDINATE_Y=-1
    ;;
    ( *,* ) # user specified coordinates
      _coordinates_user_specified
    ;;
    ( * )
      _show_help
    ;;
  esac

  _eko_iod "#- _coordinates_calculate -#"
}

function _coordinates_force()
{
  _eko_iod "#+ _coordinates_force +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _get_net_desktop_geometry_cardinal

  # variables:
  # _BINARY_WMCTRL
  # _COMMAND
  # _CORNERS
  # _NET_CLIENT_LIST_WINDOW
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function _get_net_desktop_geometry_cardinal"
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_CLIENT_LIST, WINDOW[]/32

  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0xe00008, "
  # etc, etc
  # "0x36007a2"

  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # IDEA:
  # - maybe get quite a bit fancier & put the window in workarea center while
  #   taking into account window decorations & kludges (if needed)
  # - if this approach is taken, do so from *within* the $_CORNERS test to
  #   keep calculations at a minimum
  # - this will require a complete rethink of how this function is handled

  _get_net_desktop_geometry_cardinal

  for _OPTION_WINDOW_ID in $_NET_CLIENT_LIST_WINDOW
  do
    _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID)

    # - remove everything else. why? there's a non-zero chance that the
    #   plus/minus pair could be in the window title (think: web browser)
    _CORNERS=$(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Corners: \(.*\) -geometry.*/ s//\1/g')

    #    top/left:  +-/- +-/-
    # bottom/left:  +-/- --/+
    #    top/right: --/+ +-/-
    # bottom/right: --/+ --/+
    if [[ $_CORNERS =~ .*[-+][-+].* ]]
    then
      _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""
      _eko_pv \$_CORNERS: \""$_CORNERS\""

      # - don't be fancy. simply place window at X/Y of 0/0
      # - slight problem with this approach. some applications (hello
      #   TigerVNC) don't report (or improperly report) their window
      #   decorations. if window size is is larger than desktop or workspace
      #   size, the titlebar would be unreachable
      #_COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,0,0,-1,-1"

      # - on second thought, be slightly fancy
      # - place window (using its raw X/Y dimensions. aka: ignore any
      #   decorations) with its top/left corner in overall desktop center (not
      #   workarea center). this way the titlebar can be grabbed, even
      #   oddballs like TigerVNC, with minimal calculations
      # - this is a simple rescue operation. all that's needed is to make
      #   unreachable windows reachable. the user can manipulate things later
      # - $((expression))
      _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_NET_DESKTOP_GEOMETRY_W / 2 )),$(( $_NET_DESKTOP_GEOMETRY_H / 2 )),-1,-1"

      _eko_pv command: \""$_COMMAND\""

      # - move window if possible
      $_COMMAND
    fi
  done

  _eko_iod "#- _coordinates_force -#"
}

function _coordinates_kludge()
{
  _eko_iod "#+ _coordinates_kludge +#"

  # functions:
  # _eko_pv
  # _eko_iod

  # variables:
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_NAME_UTF8_STRING

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_NAME, UTF8_STRING

  # "_NET_WM_NAME(UTF8_STRING) = "
  # ""Magnify 3x""
  # - also:
  # ""helium.elements.lan - TigerVNC""
  # ""beryllium.elements.lan - TigerVNC""
  # ""boron.elements.lan - TigerVNC""
  # ""carbon.elements.lan - TigerVNC""

  # - the regex must be *outside* the doublequotes
  # - note the extra trailing doublequote on the rhs. that's from the window's
  #   titlebar text string itself
  if [[ $_NET_WM_NAME_UTF8_STRING =~ .*" - TigerVNC\""$ ]]
  then
    # - dimensions of left & top decorations
    # - seems most likely for other windows as well. if not, this routine is
    #   already in place & quite simple to update
    _KLUDGE_X=$_NET_FRAME_EXTENTS_L
    _KLUDGE_Y=$_NET_FRAME_EXTENTS_T
  else
    # - defaults
    _KLUDGE_X=0
    _KLUDGE_Y=0
  fi

  _eko_pv \$_KLUDGE_X: \""$_KLUDGE_X\""
  _eko_pv \$_KLUDGE_Y: \""$_KLUDGE_Y\""

  _eko_iod "#- _coordinates_kludge -#"
}

function _coordinates_user_specified()
{
  _eko_iod "#+ _coordinates_user_specified +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _OPTION_WINDOW_COORDINATES

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _coordinates_calculate"
  #   succeeds: "function "

  # - ${parameter/pattern/string}
  _COORDINATE_X=${_OPTION_WINDOW_COORDINATES/,*/}
  # - ${parameter/pattern/string}
  _COORDINATE_Y=${_OPTION_WINDOW_COORDINATES/*,/}

  # - interpret "-c ,Y" as "-c -1,Y"
  # - ${parameter:=word}
  _COORDINATE_X=${_COORDINATE_X:=-1}
  # - interpret "-c X," as "-c X,-1"
  # - ${parameter:=word}
  _COORDINATE_Y=${_COORDINATE_Y:=-1}

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_user_specified -#"
}

function _coordinates_validate()
{
  _eko_iod "#+ _coordinates_validate +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _COORDINATE_X
  # _COORDINATE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  # NOTE:
  # - "function _coordinates_calculate" & "function _coordinates_validate"
  #   share identical calculations for the 4 corners

  # FIXME:
  # - only seen during testing. "function _pass_fail_by_window_type" disabled
  #   the tests for _NET_WM_WINDOW_TYPE_DOCK
  # - something is incorrect in the "force to fits" calculation 2/4
  # ^ it appears to directly involve _WORKAREA_BORDER_R in some way
  # - this may also be the case in the "force to fits" calculation 4/4
  # ^ if so, it would likely involve _WORKAREA_BORDER_B in some way

#+ marker testing +#
#_eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (entry)"
#_eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\" (entry)"
#- marker testing -#

  #+ error exits +#

  # - (1/2)
  # - non-numeric X coordinate?
  # - negative included
  if [[ ! $_COORDINATE_X =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric X coordinate \"$_COORDINATE_X\" specified"
  fi
#+ marker testing +#
#_eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (error exit)"
#- marker testing -#

  # - (2/2)
  # - non-numeric Y coordinate?
  # - negative included
  if [[ ! $_COORDINATE_Y =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric Y coordinate \"$_COORDINATE_Y\" specified"
  fi

  #- error exits -#

  #+ force to fits +#

  # - (1/4)
  # - force X coordinate to fit within usable or overall desktop X
  # - left (special case: -1)
  if [[ $_COORDINATE_X -lt $_WORKAREA_BORDER_L ]] \
  && [[ $_COORDINATE_X -ne -1 ]]
  then
    _COORDINATE_X=$_WORKAREA_BORDER_L
  fi
#+ marker testing +#
#_eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (force to fit 1/4)"
#- marker testing -#

  # - (2/4)
  # - force X coordinate to fit within usable or overall desktop X
  # - right
  # - $((expression))
  if [[ $(( $_COORDINATE_X + $_WINDOW_DECORATED_X + $_WORKAREA_BORDER_R )) -gt $_NET_DESKTOP_GEOMETRY_W ]]
  then
    # - $((expression))
    _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
  fi
#+ marker testing +#
#_eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\" (force to fit 2/4)"
#- marker testing -#

  # - (3/4)
  # - force Y coordinate to fit within usable or overall desktop Y
  # - top (special case: -1)
  if [[ $_COORDINATE_Y -lt $_WORKAREA_BORDER_T ]] \
  && [[ $_COORDINATE_Y -ne -1 ]]
  then
    _COORDINATE_Y=$_WORKAREA_BORDER_T
  fi

  # - (4/4)
  # - force Y coordinate to fit within usable or overall desktop Y
  # - bottom
  # - $((expression))
  if [[ $(( $_COORDINATE_Y + $_WINDOW_DECORATED_Y + $_WORKAREA_BORDER_B )) -gt $_NET_DESKTOP_GEOMETRY_H ]]
  then
    # - $((expression))
    _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
  fi

  #- force to fits -#

  #+ tweaks +#

  # - tweak X position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  # - simply set field to "-1" if maximized
  if $_BOOLEAN_MAXIMIZED_X
  then
    _COORDINATE_X=-1
  fi

  # - tweak Y position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  # - simply set field to "-1" if maximized
  if $_BOOLEAN_MAXIMIZED_Y
  then
    _COORDINATE_Y=-1
  fi

  #- tweaks -#

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_validate -#"
}

function _eko_iod()
{
  #+ _eko_iod +#

  # functions:
  # (none)

  # variables:
  # #
  # @
  # FUNCNAME (single dimension indexed array)
  # _BOOLEAN_DEBUG

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - required
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - why "$(( ${#FUNCNAME[@]} - 3 ))"? to account for main, parent, current
  # - pay special attention to the "*" in "%*s". it's part of the magic

  if $_BOOLEAN_DEBUG
  then
    # - fast & fancy indenting/"outdenting"
    # - $((expression))
    # - ${#parameter}
    printf "%*s" $(( ${#FUNCNAME[@]} - 3 ))
    echo "$@"
  fi

  #- _eko_iod -#
}

function _eko_ps()
{
  #+ _eko_ps +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - required
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - why "%26s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%26s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_ps -#
}

function _eko_ps_en()
{
  #+ _eko_ps_en +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - required
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - why "%26s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%26s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_ps_en -#
}

function _eko_pv()
{
  #+ _eko_pv +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - required
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - why "%39s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%39s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_pv -#
}

function _eko_pv_en()
{
  #+ _eko_pv_en +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - required
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NOTE:
  # - why "%39s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%39s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_pv_en -#
}

function _get_net_active_window_window()
{
  _eko_iod "#+ _get_net_active_window_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_ACTIVE_WINDOW_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_ACTIVE_WINDOW, WINDOW/32

  # "_NET_ACTIVE_WINDOW(WINDOW): window id # "
  # "0xa000b3"

  # NOTE:
  # - do we need this? I don't think so. at least, not for now
  # - possibly in the future, though. as part of an alternate approach to
  #   implement "-l, --lower" & "-r, --raise"

  # IDEA:
  # - or do we? when it comes time to move the window, use this window id if
  #   none was specified. result: currently focussed window will be processed

  _NET_ACTIVE_WINDOW_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_ACTIVE_WINDOW(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_ACTIVE_WINDOW_WINDOW: \""$_NET_ACTIVE_WINDOW_WINDOW\" (unused)"

  _eko_iod "#- _get_net_active_window_window -#"
}

function _get_net_client_list_stacking_window()
{
  _eko_iod "#+ _get_net_client_list_stacking_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CLIENT_LIST_STACKING_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_CLIENT_LIST_STACKING, WINDOW[]/32

  # "_NET_CLIENT_LIST_STACKING(WINDOW): window id # "
  # "0xa00009, "
  # etc, etc
  # "0x1200004"

  _NET_CLIENT_LIST_STACKING_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CLIENT_LIST_STACKING(WINDOW): window id # /!d ; /\(.* # \|,\)/ s///g')

  _eko_pv \$_NET_CLIENT_LIST_STACKING_WINDOW: \""$_NET_CLIENT_LIST_STACKING_WINDOW\" (unused)"

  _eko_iod "#- _get_net_client_list_stacking_window -#"
}

function _get_net_client_list_window()
{
  _eko_iod "#+ _get_net_client_list_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CLIENT_LIST_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_CLIENT_LIST, WINDOW[]/32

  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0xe00008, "
  # etc, etc
  # "0x36007a2"

  _NET_CLIENT_LIST_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d ; /\(.* # \|,\)/ s///g')

  _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\""

  _eko_iod "#- _get_net_client_list_window -#"
}

function _get_net_current_desktop_cardinal()
{
  _eko_iod "#+ _get_net_current_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function _get_net_desktop_names_utf8_string" (unused)
  #   precedes: "function _get_net_desktop_viewport_cardinal" (unused)
  #   precedes: "function _get_net_workarea_cardinal" (required)
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

  # "_NET_CURRENT_DESKTOP(CARDINAL) = "
  # "0"

  # NOTE:
  # - this is always an integer between 0 and _NET_NUMBER_OF_DESKTOPS - 1
  # - starts at "0" not "1"

  _NET_CURRENT_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CURRENT_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\""

  _eko_iod "#- _get_net_current_desktop_cardinal -#"
}

function _get_net_desktop_geometry_cardinal()
{
  _eko_iod "#+ _get_net_desktop_geometry_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - required
  #     parent: "function _coordinates_force"
  #      child: "function "
  #   precedes: "function _get_net_workarea_cardinal"
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32

  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  # NOTE:
  # - Openbox doesn't support large desktops so these just match the screen
  #   size.

  _NET_DESKTOP_GEOMETRY_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_GEOMETRY(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_GEOMETRY_CARDINAL: \""$_NET_DESKTOP_GEOMETRY_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_DESKTOP_GEOMETRY_W \
  _NET_DESKTOP_GEOMETRY_H \
  <<< \
  $_NET_DESKTOP_GEOMETRY_CARDINAL

  _eko_pv \$_NET_DESKTOP_GEOMETRY_W: \""$_NET_DESKTOP_GEOMETRY_W\""
  _eko_pv \$_NET_DESKTOP_GEOMETRY_H: \""$_NET_DESKTOP_GEOMETRY_H\""

  _eko_iod "#- _get_net_desktop_geometry_cardinal -#"
}

function _get_net_desktop_layout_cardinal()
{
  _eko_iod "#+ _get_net_desktop_layout_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_DESKTOP_LAYOUT_C
  # _NET_DESKTOP_LAYOUT_CARDINAL
  # _NET_DESKTOP_LAYOUT_O
  # _NET_DESKTOP_LAYOUT_R
  # _NET_DESKTOP_LAYOUT_S
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_LAYOUT, orientation, columns, rows, starting_corner CARDINAL[4]/32

  # "_NET_DESKTOP_LAYOUT(CARDINAL) = "
  # "1, "
  # "1, "
  # "0, "
  # "0"

  _NET_DESKTOP_LAYOUT_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_LAYOUT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_LAYOUT_CARDINAL: \""$_NET_DESKTOP_LAYOUT_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_DESKTOP_LAYOUT_O \
  _NET_DESKTOP_LAYOUT_C \
  _NET_DESKTOP_LAYOUT_R \
  _NET_DESKTOP_LAYOUT_S \
  <<< \
  $_NET_DESKTOP_LAYOUT_CARDINAL

  _eko_pv \$_NET_DESKTOP_LAYOUT_O: \""$_NET_DESKTOP_LAYOUT_O\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_C: \""$_NET_DESKTOP_LAYOUT_C\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_R: \""$_NET_DESKTOP_LAYOUT_R\""
  _eko_pv \$_NET_DESKTOP_LAYOUT_S: \""$_NET_DESKTOP_LAYOUT_S\""

  _eko_iod "#- _get_net_desktop_layout_cardinal -#"
}

function _get_net_desktop_names_utf8_string()
{
  _eko_iod "#+ _get_net_desktop_names_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COUNTER
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ROOT
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _get_net_current_desktop_cardinal"
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_NAMES, UTF8_STRING[]

  # "_NET_DESKTOP_NAMES(UTF8_STRING) = "
  # ""I", "
  # ""II", "
  # ""III", "
  # ""IV", "
  # ""V", "
  # ""VI", "
  # ""VII", "
  # ""VIII""

  # NOTE:
  # - do we need this? I don't think so
  # - keep it anyway. it's a good reference

  # NOTE:
  # - unlike cardinal types, utf-8 requires special handling
  # - after quite a bit of experimenting, the following brute force method
  #   appears to work well enough for this particular case. if it's *not*
  #   performing on your system as expected, let me know so I can fix it
  # - method: preserve anything & everything *between* pairs of doublequotes,
  #   including the doublequotes themselves

  # TODO:
  # - possibly improve the logic so the loop exits when a match is found
  # ^ currently, it continues scanning $_NET_DESKTOP_NAMES_UTF8_STRING to the
  #   very end. this is completely harmless, but I'm a perfectionist :)
  # - conditional "break" if $_NET_DESKTOP_NAME_UTF8_STRING is set?

  _NET_DESKTOP_NAMES_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_NAMES(UTF8_STRING) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_NAMES_UTF8_STRING: \""$_NET_DESKTOP_NAMES_UTF8_STRING\" (unused)"

  # IDEA:
  # - don't modify the original string
  # - go through its entire length character by character, looking for
  #   "doublequote" & "doublequote space doublequote"
  # - note the position of each type of match
  # - set $_NET_DESKTOP_NAME_UTF8_STRING from the appropriate segment of
  #   $_NET_DESKTOP_NAMES_UTF8_STRING
  # - requires $_NET_CURRENT_DESKTOP_CARDINAL

  # - be explicit for clarity
  _COUNTER=0
  _POSITION_CURRENT=0
  unset _POSITION_FINISH
  unset _POSITION_START

  # - ${#parameter}
  while [[ $_POSITION_CURRENT -lt ${#_NET_DESKTOP_NAMES_UTF8_STRING} ]] \
  && [[ $_COUNTER -le $_NET_CURRENT_DESKTOP_CARDINAL ]]
  do

    # - ${parameter:offset:length}
    if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:1} == \" ]]
    then
      # - ${parameter:offset:length}
      if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:3} == \"\ \" ]]
      then
        _POSITION_FINISH=$_POSITION_CURRENT
      else
        # - $((expression))
        # - ${#parameter}
        if [[ $_POSITION_CURRENT -eq $(( ${#_NET_DESKTOP_NAMES_UTF8_STRING} - 1 )) ]]
        then
          _POSITION_FINISH=$_POSITION_CURRENT
        else
          _POSITION_START=$_POSITION_CURRENT
        fi
      fi
    fi

    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_POSITION_FINISH ]] \
    && [[ -n $_POSITION_START ]]
    then
      if [[ $_COUNTER -eq $_NET_CURRENT_DESKTOP_CARDINAL ]]
      then
        # - ${parameter:offset:length}
        # - $((expression))
        _NET_DESKTOP_NAME_UTF8_STRING=${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_START:$(( $_POSITION_FINISH - $_POSITION_START + 1 ))}
      fi

      unset _POSITION_FINISH
      unset _POSITION_START
      # - ((expression))
      # - id++ = variable post-increment
      ((_COUNTER++))
    fi

    # - ((expression))
    # - id++ = variable post-increment
    ((_POSITION_CURRENT++))
  done

  _eko_pv \$_NET_DESKTOP_NAME_UTF8_STRING: \""$_NET_DESKTOP_NAME_UTF8_STRING\""

  _eko_iod "#- _get_net_desktop_names_utf8_string -#"
}

function _get_net_desktop_viewport_cardinal()
{
  _eko_iod "#+ _get_net_desktop_viewport_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function _sub_function"
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _get_net_current_desktop_cardinal"
  #   succeeds: "function "

  # NET:
  # - _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32

  # "_NET_DESKTOP_VIEWPORT(CARDINAL) = "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0"

  # NOTE:
  # - Openbox doesn't support large desktops so these are just (0, 0).

  _NET_DESKTOP_VIEWPORT_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_VIEWPORT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_DESKTOP_VIEWPORT_CARDINAL: \""$_NET_DESKTOP_VIEWPORT_CARDINAL\" (unused)"

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod
    # _eko_pv

    # variables:
    # @
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _OPTIONS_READ (read options, not script options)
    # _XX0

    # binaries:
    # (none)

    # builtins:
    # (none)
    # read

    # NET:
    # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

    # "_NET_CURRENT_DESKTOP(CARDINAL) = "
    # "0"

    # (parent)
    # - _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32

    # "_NET_DESKTOP_VIEWPORT(CARDINAL) = "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0, "
    # "0, 0"

    # - there are 2 fields for each desktop
    # - $((expression))
    shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 2 ))

    read $_OPTIONS_READ -- \
    _NET_DESKTOP_VIEWPORT_X \
    _NET_DESKTOP_VIEWPORT_Y \
    _XX0 \
    <<< \
    $@

    _eko_pv \$_NET_DESKTOP_VIEWPORT_X: \""$_NET_DESKTOP_VIEWPORT_X\""
    _eko_pv \$_NET_DESKTOP_VIEWPORT_Y: \""$_NET_DESKTOP_VIEWPORT_Y\""

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_DESKTOP_VIEWPORT_CARDINAL

  _eko_iod "#- _get_net_desktop_viewport_cardinal -#"
}

function _get_net_frame_extents_cardinal()
{
  _eko_iod "#+ _get_net_frame_extents_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function _get_window_undecorated_geometry"
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_FRAME_EXTENTS(CARDINAL) = "
  # "1, "
  # "1, "
  # "22, "
  # "6"

  _NET_FRAME_EXTENTS_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_FRAME_EXTENTS(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  # - openbox dock returns absolutely nothing here. provide safe values
  # - "-z string" = true if the length of string is zero
  if [[ -z $_NET_FRAME_EXTENTS_CARDINAL ]]
  then
    _NET_FRAME_EXTENTS_CARDINAL="0 0 0 0"
  fi

  _eko_pv \$_NET_FRAME_EXTENTS_CARDINAL: \""$_NET_FRAME_EXTENTS_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_FRAME_EXTENTS_L \
  _NET_FRAME_EXTENTS_R \
  _NET_FRAME_EXTENTS_T \
  _NET_FRAME_EXTENTS_B \
  <<< \
  $_NET_FRAME_EXTENTS_CARDINAL

  _eko_pv \$_NET_FRAME_EXTENTS_L: \""$_NET_FRAME_EXTENTS_L\""
  _eko_pv \$_NET_FRAME_EXTENTS_R: \""$_NET_FRAME_EXTENTS_R\""
  _eko_pv \$_NET_FRAME_EXTENTS_T: \""$_NET_FRAME_EXTENTS_T\""
  _eko_pv \$_NET_FRAME_EXTENTS_B: \""$_NET_FRAME_EXTENTS_B\""

  _eko_iod "#- _get_net_frame_extents_cardinal -#"
}

function _get_net_number_of_desktops_cardinal()
{
  _eko_iod "#+ _get_net_number_of_desktops_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_NUMBER_OF_DESKTOPS, CARDINAL/32

  # "_NET_NUMBER_OF_DESKTOPS(CARDINAL) = "
  # "8"

  # NOTE:
  # - starts at "1" not "0"

  _NET_NUMBER_OF_DESKTOPS_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_NUMBER_OF_DESKTOPS(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_NUMBER_OF_DESKTOPS_CARDINAL: \""$_NET_NUMBER_OF_DESKTOPS_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_number_of_desktops_cardinal -#"
}

function _get_net_showing_desktop_cardinal()
{
  _eko_iod "#+ _get_net_showing_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SHOWING_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_SHOWING_DESKTOP desktop, CARDINAL/32

  # "_NET_SHOWING_DESKTOP(CARDINAL) = "
  # "0"

  _NET_SHOWING_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SHOWING_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_SHOWING_DESKTOP_CARDINAL: \""$_NET_SHOWING_DESKTOP_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_showing_desktop_cardinal -#"
}

function _get_net_supported_atom()
{
  _eko_iod "#+ _get_net_supported_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SUPPORTED_ATOM
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_SUPPORTED, ATOM[]/32

  # "_NET_SUPPORTED(ATOM) = "
  # "_NET_SUPPORTING_WM_CHECK, "
  # etc, etc
  # "_OB_APP_TYPE"

  _NET_SUPPORTED_ATOM=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SUPPORTED(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_SUPPORTED_ATOM: \""$_NET_SUPPORTED_ATOM\" (unused)"

  _eko_iod "#- _get_net_supported_atom -#"
}

function _get_net_supporting_wm_check_window()
{
  _eko_iod "#+ _get_net_supporting_wm_check_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_SUPPORTING_WM_CHECK_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_SUPPORTING_WM_CHECK, WINDOW/32

  # "_NET_SUPPORTING_WM_CHECK(WINDOW): window id # "
  # "0x8000bb"

  _NET_SUPPORTING_WM_CHECK_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_SUPPORTING_WM_CHECK(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_SUPPORTING_WM_CHECK_WINDOW: \""$_NET_SUPPORTING_WM_CHECK_WINDOW\" (unused)"

  _eko_iod "#- _get_net_supporting_wm_check_window -#"
}

function _get_net_wm_allowed_actions_atom()
{
  _eko_iod "#+ _get_net_wm_allowed_actions_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ALLOWED_ACTIONS_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_ALLOWED_ACTIONS, ATOM[]

  # "_NET_WM_ALLOWED_ACTIONS(ATOM) = "
  # "_NET_WM_ACTION_CHANGE_DESKTOP, "
  # "_NET_WM_ACTION_SHADE, "
  # "_NET_WM_ACTION_CLOSE, "
  # "_NET_WM_ACTION_MOVE, "
  # "_NET_WM_ACTION_MINIMIZE, "
  # "_NET_WM_ACTION_RESIZE, "
  # "_NET_WM_ACTION_FULLSCREEN, "
  # "_NET_WM_ACTION_MAXIMIZE_HORZ, "
  # "_NET_WM_ACTION_MAXIMIZE_VERT, "
  # "_NET_WM_ACTION_ABOVE, "
  # "_NET_WM_ACTION_BELOW, "
  # "_OB_WM_ACTION_UNDECORATE"

  # (sorted listing from the original source)
  #   _NET_WM_ACTION_ABOVE, ATOM
  #   _NET_WM_ACTION_BELOW, ATOM
  #   _NET_WM_ACTION_CHANGE_DESKTOP, ATOM
  #   _NET_WM_ACTION_CLOSE, ATOM
  #   _NET_WM_ACTION_FULLSCREEN, ATOM
  #   _NET_WM_ACTION_MAXIMIZE_HORZ, ATOM
  #   _NET_WM_ACTION_MAXIMIZE_VERT, ATOM
  #   _NET_WM_ACTION_MINIMIZE, ATOM
  #   _NET_WM_ACTION_MOVE, ATOM
  #   _NET_WM_ACTION_RESIZE, ATOM
  #   _NET_WM_ACTION_SHADE, ATOM
  #   _NET_WM_ACTION_STICK, ATOM

  # NOTE: (_NET_WM_ACTION_STICK)
  # - Openbox does not do large desktops, so no sticky state is needed.

  _NET_WM_ALLOWED_ACTIONS_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ALLOWED_ACTIONS(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_ALLOWED_ACTIONS_ATOM: \""$_NET_WM_ALLOWED_ACTIONS_ATOM\" (unused)"

  _eko_iod "#- _get_net_wm_allowed_actions_atom -#"
}

function _get_net_wm_desktop_cardinal()
{
  _eko_iod "#+ _get_net_wm_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_DESKTOP, CARDINAL/32

  # "_NET_WM_DESKTOP(CARDINAL) = "
  # "0"

  # NOTE:
  # - starts at "0" not "1"

  _NET_WM_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_DESKTOP(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_desktop_cardinal -#"
}

function _get_net_wm_icon_geometry_cardinal()
{
  _eko_iod "#+ _get_net_wm_icon_geometry_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ICON_GEOMETRY_CARDINAL
  # _NET_WM_ICON_GEOMETRY_H
  # _NET_WM_ICON_GEOMETRY_W
  # _NET_WM_ICON_GEOMETRY_X
  # _NET_WM_ICON_GEOMETRY_Y
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32

  # "_NET_WM_ICON_GEOMETRY(CARDINAL) = "
  # "1588, "
  # "1056, "
  # "117, "
  # "24"

  _NET_WM_ICON_GEOMETRY_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ICON_GEOMETRY(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_ICON_GEOMETRY_CARDINAL: \""$_NET_WM_ICON_GEOMETRY_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_ICON_GEOMETRY_X \
  _NET_WM_ICON_GEOMETRY_Y \
  _NET_WM_ICON_GEOMETRY_W \
  _NET_WM_ICON_GEOMETRY_H \
  <<< \
  $_NET_WM_ICON_GEOMETRY_CARDINAL

  _eko_pv \$_NET_WM_ICON_GEOMETRY_X: \""$_NET_WM_ICON_GEOMETRY_X\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_Y: \""$_NET_WM_ICON_GEOMETRY_Y\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_W: \""$_NET_WM_ICON_GEOMETRY_W\""
  _eko_pv \$_NET_WM_ICON_GEOMETRY_H: \""$_NET_WM_ICON_GEOMETRY_H\""

  _eko_iod "#- _get_net_wm_icon_geometry_cardinal -#"
}

function _get_net_wm_icon_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_icon_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_ICON_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_ICON_NAME, UTF8_STRING

  # "_NET_WM_ICON_NAME(UTF8_STRING) = "
  # ""Mozilla Firefox""

   _NET_WM_ICON_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_ICON_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_ICON_NAME_UTF8_STRING: \""$_NET_WM_ICON_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_icon_name_utf8_string -#"
}

function _get_net_wm_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_NAME, UTF8_STRING

  # "_NET_WM_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

  # NOTE:
  # - we need this for "function _coordinates_kludge"

  _NET_WM_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_NAME_UTF8_STRING: \""$_NET_WM_NAME_UTF8_STRING\""

  _eko_iod "#- _get_net_wm_name_utf8_string -#"
}

function _get_net_wm_opaque_region_cardinal()
{
  _eko_iod "#+ _get_net_wm_opaque_region_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_OPAQUE_REGION_CARDINAL
  # _NET_WM_OPAQUE_REGION_H
  # _NET_WM_OPAQUE_REGION_W
  # _NET_WM_OPAQUE_REGION_X
  # _NET_WM_OPAQUE_REGION_Y
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32

  # "_NET_WM_ICON_GEOMETRY(CARDINAL) = "
  # "1588, "
  # "1056, "
  # "117, "
  # "24"

  _NET_WM_OPAQUE_REGION_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_OPAQUE_REGION(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_OPAQUE_REGION_CARDINAL: \""$_NET_WM_OPAQUE_REGION_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_OPAQUE_REGION_X \
  _NET_WM_OPAQUE_REGION_Y \
  _NET_WM_OPAQUE_REGION_W \
  _NET_WM_OPAQUE_REGION_H \
  <<< \
  $_NET_WM_OPAQUE_REGION_CARDINAL

  _eko_pv \$_NET_WM_OPAQUE_REGION_X: \""$_NET_WM_OPAQUE_REGION_X\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_Y: \""$_NET_WM_OPAQUE_REGION_Y\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_W: \""$_NET_WM_OPAQUE_REGION_W\""
  _eko_pv \$_NET_WM_OPAQUE_REGION_H: \""$_NET_WM_OPAQUE_REGION_H\""

  _eko_iod "#- _get_net_wm_opaque_region_cardinal -#"
}

function _get_net_wm_pid_cardinal()
{
  _eko_iod "#+ _get_net_wm_pid_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_PID_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_PID, CARDINAL/32

  # "_NET_WM_PID(CARDINAL) = 1454"
  # "1454"

  # NOTE:
  # - Openbox does not currently kill processes.

  _NET_WM_PID_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_PID(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_PID_CARDINAL: \""$_NET_WM_PID_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_pid_cardinal -#"
}

function _get_net_wm_state_atom()
{
  _eko_iod "#+ _get_net_wm_state_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _NET_WM_STATE_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_STATE, ATOM[]

  # (sorted listing from the original source)
  #   _NET_WM_STATE_ABOVE, ATOM
  #   _NET_WM_STATE_BELOW, ATOM
  #   _NET_WM_STATE_DEMANDS_ATTENTION, ATOM
  #   _NET_WM_STATE_FOCUSED, ATOM
  #   _NET_WM_STATE_FULLSCREEN, ATOM
  #   _NET_WM_STATE_HIDDEN, ATOM
  #   _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
  #   _NET_WM_STATE_MAXIMIZED_VERT, ATOM
  #   _NET_WM_STATE_MODAL, ATOM
  #   _NET_WM_STATE_SHADED, ATOM
  #   _NET_WM_STATE_SKIP_PAGER, ATOM
  #   _NET_WM_STATE_SKIP_TASKBAR, ATOM
  #   _NET_WM_STATE_STICKY, ATOM

  _NET_WM_STATE_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STATE(ATOM) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STATE_ATOM: \""$_NET_WM_STATE_ATOM\""

  # - decipher window's state (horizontal &/or vertical maximized)
  # - doing so here is as good as anywhere else

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
  then
    _BOOLEAN_MAXIMIZED_X=true
  else
    _BOOLEAN_MAXIMIZED_X=false
  fi

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
  then
    _BOOLEAN_MAXIMIZED_Y=true
  else
    _BOOLEAN_MAXIMIZED_Y=false
  fi

  _eko_pv \$_BOOLEAN_MAXIMIZED_X: \""$_BOOLEAN_MAXIMIZED_X\""
  _eko_pv \$_BOOLEAN_MAXIMIZED_Y: \""$_BOOLEAN_MAXIMIZED_Y\""

  _eko_iod "#- _get_net_wm_state_atom -#"
}

function _get_net_wm_strut_cardinal()
{
  _eko_iod "#+ _get_net_wm_strut_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_STRUT_B
  # _NET_WM_STRUT_CARDINAL
  # _NET_WM_STRUT_L
  # _NET_WM_STRUT_R
  # _NET_WM_STRUT_T
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  #  - _NET_WM_STRUT, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_WM_STRUT(CARDINAL) = "
  # "0, "
  # "0, "
  # "0, "
  # "24"

  _NET_WM_STRUT_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STRUT(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STRUT_CARDINAL: \""$_NET_WM_STRUT_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_STRUT_L \
  _NET_WM_STRUT_R \
  _NET_WM_STRUT_T \
  _NET_WM_STRUT_B \
  <<< \
  $_NET_WM_STRUT_CARDINAL

  _eko_pv \$_NET_WM_STRUT_L: \""$_NET_WM_STRUT_L\""
  _eko_pv \$_NET_WM_STRUT_R: \""$_NET_WM_STRUT_R\""
  _eko_pv \$_NET_WM_STRUT_T: \""$_NET_WM_STRUT_T\""
  _eko_pv \$_NET_WM_STRUT_B: \""$_NET_WM_STRUT_B\""

  _eko_iod "#- _get_net_wm_strut_cardinal -#"
}

function _get_net_wm_strut_partial_cardinal()
{
  _eko_iod "#+ _get_net_wm_strut_partial_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_STRUT_PARTIAL_B
  # _NET_WM_STRUT_PARTIAL_BEX
  # _NET_WM_STRUT_PARTIAL_BSX
  # _NET_WM_STRUT_PARTIAL_CARDINAL
  # _NET_WM_STRUT_PARTIAL_L
  # _NET_WM_STRUT_PARTIAL_LEY
  # _NET_WM_STRUT_PARTIAL_LSY
  # _NET_WM_STRUT_PARTIAL_R
  # _NET_WM_STRUT_PARTIAL_REY
  # _NET_WM_STRUT_PARTIAL_RSY
  # _NET_WM_STRUT_PARTIAL_T
  # _NET_WM_STRUT_PARTIAL_TEX
  # _NET_WM_STRUT_PARTIAL_TSX
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  #  - _NET_WM_STRUT_PARTIAL, left, right, top, bottom, left_start_y, left_end_y, right_start_y, right_end_y, top_start_x, top_end_x, bottom_start_x, bottom_end_x, CARDINAL[12]/32

  # "_NET_WM_STRUT_PARTIAL(CARDINAL) = "
  # "0, "
  # "0, "
  # "0, "
  # "24, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "0, "
  # "1919"

  # NOTE:
  # - Openbox uses these to create per-monitor struts in Xinerama setups.

  _NET_WM_STRUT_PARTIAL_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STRUT_PARTIAL(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_STRUT_PARTIAL_CARDINAL: \""$_NET_WM_STRUT_PARTIAL_CARDINAL\" (unused)"

  read $_OPTIONS_READ -- \
  _NET_WM_STRUT_PARTIAL_L \
  _NET_WM_STRUT_PARTIAL_R \
  _NET_WM_STRUT_PARTIAL_T \
  _NET_WM_STRUT_PARTIAL_B \
  _NET_WM_STRUT_PARTIAL_LSY \
  _NET_WM_STRUT_PARTIAL_LEY \
  _NET_WM_STRUT_PARTIAL_RSY \
  _NET_WM_STRUT_PARTIAL_REY \
  _NET_WM_STRUT_PARTIAL_TSX \
  _NET_WM_STRUT_PARTIAL_TEX \
  _NET_WM_STRUT_PARTIAL_BSX \
  _NET_WM_STRUT_PARTIAL_BEX \
  <<< \
  $_NET_WM_STRUT_PARTIAL_CARDINAL

  _eko_pv \$_NET_WM_STRUT_PARTIAL_L: \""$_NET_WM_STRUT_PARTIAL_L\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_R: \""$_NET_WM_STRUT_PARTIAL_R\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_T: \""$_NET_WM_STRUT_PARTIAL_T\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_B: \""$_NET_WM_STRUT_PARTIAL_B\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_LSY: \""$_NET_WM_STRUT_PARTIAL_LSY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_LEY: \""$_NET_WM_STRUT_PARTIAL_LEY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_RSY: \""$_NET_WM_STRUT_PARTIAL_RSY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_REY: \""$_NET_WM_STRUT_PARTIAL_REY\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_TSX: \""$_NET_WM_STRUT_PARTIAL_TSX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_TEX: \""$_NET_WM_STRUT_PARTIAL_TEX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_BSX: \""$_NET_WM_STRUT_PARTIAL_BSX\""
  _eko_pv \$_NET_WM_STRUT_PARTIAL_BEX: \""$_NET_WM_STRUT_PARTIAL_BEX\""

  _eko_iod "#- _get_net_wm_strut_partial_cardinal -#"
}

function _get_net_wm_sync_request_counter_cardinal()
{
  _eko_iod "#+ _get_net_wm_sync_request_counter_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_SYNC_REQUEST_COUNTER, ?, ?, CARDINAL[]/32

  # "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = "
  # "56625144, "
  # "56625145"

  _NET_WM_SYNC_REQUEST_COUNTER_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WM_SYNC_REQUEST_COUNTER_CARDINAL: \""$_NET_WM_SYNC_REQUEST_COUNTER_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_sync_request_counter_cardinal -#"
}

function _get_net_wm_user_time_cardinal()
{
  _eko_iod "#+ _get_net_wm_user_time_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:

  # _NET_WM_USER_TIME_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_USER_TIME CARDINAL/32

  # "_NET_WM_USER_TIME(CARDINAL) = "
  # "2553195505"

  _NET_WM_USER_TIME_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_USER_TIME(CARDINAL) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_USER_TIME_CARDINAL: \""$_NET_WM_USER_TIME_CARDINAL\" (unused)"

  _eko_iod "#- _get_net_wm_user_time_cardinal -#"
}

function _get_net_wm_user_time_window_window()
{
  _eko_iod "#+ _get_net_wm_user_time_window_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_USER_TIME_WINDOW_WINDOW
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_USER_TIME CARDINAL/32

  # "_NET_WM_USER_TIME(CARDINAL) = "
  # "2553195505"

  _NET_WM_USER_TIME_WINDOW_WINDOW=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_USER_TIME_WINDOW(WINDOW): window id # /!d ; /.* # / s///g')

  _eko_pv \$_NET_WM_USER_TIME_WINDOW_WINDOW: \""$_NET_WM_USER_TIME_WINDOW_WINDOW\" (unused)"

  _eko_iod "#- _get_net_wm_user_time_window_window -#"
}

function _get_net_wm_visible_icon_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_visible_icon_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_VISIBLE_ICON_NAME, UTF8_STRING

  # "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

   _NET_WM_VISIBLE_ICON_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_VISIBLE_ICON_NAME_UTF8_STRING: \""$_NET_WM_VISIBLE_ICON_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_visible_icon_name_utf8_string -#"
}

function _get_net_wm_visible_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_visible_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_VISIBLE_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - unused
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_VISIBLE_NAME, UTF8_STRING

  # "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "
  # ""Magnify 3x""

   _NET_WM_VISIBLE_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_VISIBLE_NAME(UTF8_STRING) = /!d ; /.* = / s///g')

  _eko_pv \$_NET_WM_VISIBLE_NAME_UTF8_STRING: \""$_NET_WM_VISIBLE_NAME_UTF8_STRING\" (unused)"

  _eko_iod "#- _get_net_wm_visible_name_utf8_string -#"
}

function _get_net_workarea_cardinal()
{
  _eko_iod "#+ _get_net_workarea_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _NET_WORKAREA_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function _sub_function"
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _get_net_current_desktop_cardinal"
  #   succeeds: "function _get_net_desktop_geometry_cardinal"
  #   succeeds: "function "

  # NET:
  # - _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

  # "_NET_WORKAREA(CARDINAL) = "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056"

  _NET_WORKAREA_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_WORKAREA(CARDINAL) = /!d ; /\(.* = \|,\)/ s///g')

  _eko_pv \$_NET_WORKAREA_CARDINAL: \""$_NET_WORKAREA_CARDINAL\""

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod
    # _eko_pv

    # variables:
    # @
    # _BOOLEAN_OVERALL
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_GEOMETRY_H
    # _NET_DESKTOP_GEOMETRY_W
    # _NET_WORKAREA_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _WORKAREA_BORDER_B
    # _WORKAREA_BORDER_L
    # _WORKAREA_BORDER_R
    # _WORKAREA_BORDER_T
    # _XX0

    # binaries:
    # (none)

    # builtins:
    # (none)
    # read

    # NET:
    # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32

    # "_NET_CURRENT_DESKTOP(CARDINAL) = "
    # "0"

    # (parent)
    # - _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

    # "_NET_WORKAREA(CARDINAL) = "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056, "
    # "0, 0, 1852, 1056"

    # - there are 4 fields for each desktop
    # - $((expression))
    shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 4 ))

    read $_OPTIONS_READ -- \
    _NET_WORKAREA_X \
    _NET_WORKAREA_Y \
    _NET_WORKAREA_W \
    _NET_WORKAREA_H \
    _XX0 \
    <<< \
    $@

    _eko_pv \$_NET_WORKAREA_X: \""$_NET_WORKAREA_X\""
    _eko_pv \$_NET_WORKAREA_Y: \""$_NET_WORKAREA_Y\""
    _eko_pv \$_NET_WORKAREA_W: \""$_NET_WORKAREA_W\""
    _eko_pv \$_NET_WORKAREA_H: \""$_NET_WORKAREA_H\""

    if $_BOOLEAN_OVERALL
    then
      _WORKAREA_BORDER_L=0
      _WORKAREA_BORDER_R=0
      _WORKAREA_BORDER_T=0
      _WORKAREA_BORDER_B=0
    else
      _WORKAREA_BORDER_L=$_NET_WORKAREA_X
      # - $((expression))
      _WORKAREA_BORDER_R=$(( $_NET_DESKTOP_GEOMETRY_W - $_NET_WORKAREA_W - $_NET_WORKAREA_X ))
      _WORKAREA_BORDER_T=$_NET_WORKAREA_Y
      # - $((expression))
      _WORKAREA_BORDER_B=$(( $_NET_DESKTOP_GEOMETRY_H - $_NET_WORKAREA_H - $_NET_WORKAREA_Y ))
    fi

    _eko_pv \$_WORKAREA_BORDER_L: \""$_WORKAREA_BORDER_L\""
    _eko_pv \$_WORKAREA_BORDER_R: \""$_WORKAREA_BORDER_R\""
    _eko_pv \$_WORKAREA_BORDER_T: \""$_WORKAREA_BORDER_T\""
    _eko_pv \$_WORKAREA_BORDER_B: \""$_WORKAREA_BORDER_B\""

    # NOTE:
    # - keep this information for future reference

    # -   left: nothing
    # -  right: dock, xfce4-panel
    # -    top: nothing
    # - bottom: tint2
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1852,1056"
    # desktop borders (L,R,T,B): "0,68,0,24"

    # -   left: xfce4-panel
    # -  right: dock
    # -    top: nothing
    # - bottom: tint2
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1784,1056"
    # desktop borders (L,R,T,B): "68,68,0,24"

    # -   left: nothing
    # -  right: dock, xfce4-panel
    # -    top: tint2
    # - bottom: nothing
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1852,1056"
    # desktop borders (L,R,T,B): "0,68,24,0"

    # -   left: xfce4-panel
    # -  right: dock
    # -    top: tint2
    # - bottom: nothing
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1784,1056"
    # desktop borders (L,R,T,B): "68,68,24,0"

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_WORKAREA_CARDINAL

  _eko_iod "#- _get_net_workarea_cardinal -#"
}

function _get_window_undecorated_geometry()
{
  _eko_iod "#+ _get_window_undecorated_geometry +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo
  # read

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function _get_net_frame_extents_cardinal"
  #   succeeds: "function "

  # NET:
  # - _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32

  # "_NET_FRAME_EXTENTS(CARDINAL) = "
  # "1, "
  # "1, "
  # "22, "
  # "6"

  # - assign default value if unset
  # - ${parameter:=word}
  _OUTPUT_XWININFO_ID=${_OUTPUT_XWININFO_ID:=$(xwininfo -id $_OPTION_WINDOW_ID)}

  read $_OPTIONS_READ -- \
  _WINDOW_UNDECORATED_X \
  _WINDOW_UNDECORATED_Y \
  _WINDOW_BORDER_WIDTH \
  < \
  <(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Width: \(.*\) Height: \(.*\) Depth:.*Border width: \(.*\) Class:.*/ s//\1 \2 \3/g')

  _eko_pv \$_WINDOW_UNDECORATED_X: \""$_WINDOW_UNDECORATED_X\""
  _eko_pv \$_WINDOW_UNDECORATED_Y: \""$_WINDOW_UNDECORATED_Y\""
  _eko_pv \$_WINDOW_BORDER_WIDTH: \""$_WINDOW_BORDER_WIDTH\""

  # - calculate window's decorated geometry (undecorated + decorations)
  # - doing so here is as good as anywhere else

  # - $((expression))
  _WINDOW_DECORATED_X=$(( $_NET_FRAME_EXTENTS_L + $_WINDOW_UNDECORATED_X + $_NET_FRAME_EXTENTS_R ))
  # - $((expression))
  _WINDOW_DECORATED_Y=$(( $_NET_FRAME_EXTENTS_T + $_WINDOW_UNDECORATED_Y + $_NET_FRAME_EXTENTS_B ))

  _eko_pv \$_WINDOW_DECORATED_X: \""$_WINDOW_DECORATED_X\""
  _eko_pv \$_WINDOW_DECORATED_Y: \""$_WINDOW_DECORATED_Y\""

  _eko_iod "#- _get_window_undecorated_geometry -#"
}

function _parse_parameters()
{
  #+ _parse_parameters +#

  # functions:
  # _binary_validate_setup
  # _builtin_validate_setup
  # _coordinates_calculate
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_validate
  # _eko_iod
  # _eko_pv
  # _get_net_active_window_window
  # _get_net_client_list_stacking_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_layout_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_showing_desktop_cardinal
  # _get_net_supported_atom
  # _get_net_supporting_wm_check_window
  # _get_net_wm_allowed_actions_atom
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_icon_geometry_cardinal
  # _get_net_wm_icon_name_utf8_string
  # _get_net_wm_name_utf8_string
  # _get_net_wm_opaque_region_cardinal
  # _get_net_wm_pid_cardinal
  # _get_net_wm_state_atom
  # _get_net_wm_strut_cardinal
  # _get_net_wm_strut_partial_cardinal
  # _get_net_wm_sync_request_counter_cardinal
  # _get_net_wm_user_time_cardinal
  # _get_net_wm_user_time_window_window
  # _get_net_wm_visible_icon_name_utf8_string
  # _get_net_wm_visible_name_utf8_string
  # _get_net_workarea_cardinal
  # _get_window_undecorated_geometry
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help
  # _window_id_acquire

  # variables:
  # #
  # 1
  # 2
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_OVERALL
  # _BOOLEAN_PERMISSIVE
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_UNUSED
  # _BOOLEAN_VERBOSE
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # xprop

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "commandline"
  #      child: "everything"
  #   precedes: "everything"

  # NOTE:
  # - boolean variables are proper toggles

  # NOTE:
  # - _BOOLEAN_STDOUT is special. it's quite simple to set up initially

  # - _BOOLEAN_STDOUT
  # - companion functions: _eko_ps/_eko_ps_en
  # - default: true
  # - *not* toggled in while/do/done loop like the others
  # - immediately *after* the while/do/done loop _BOOLEAN_STDOUT is set to
  #   false if either $_BOOLEAN_DEBUG or $_BOOLEAN_VERBOSE are true

  #+ parameter defaults +#

  _BOOLEAN_DEBUG=false      # display
  _BOOLEAN_DRYRUN=false     # control
  _BOOLEAN_FORCE=false      # action
  _BOOLEAN_OVERALL=false    # control
  _BOOLEAN_PERMISSIVE=false # control
  _BOOLEAN_RAISE=false      # action
  _BOOLEAN_STDOUT=true      # display
  _BOOLEAN_UNUSED=false     # control
  _BOOLEAN_VERBOSE=false    # display
  unset _OPTION_WINDOW_COORDINATES
  unset _OPTION_WINDOW_ID

  #- parameter defaults -#

  while [[ $# -gt 0 ]]
  do
    case $1 in
      ( -c \
      | --coordinates )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        # - ${parameter:offset:length}
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]] \
        && [[ ${2:1:1} != [0-9] ]]
        then
          _show_error "window coordinates not specified"
        else
          case $2 in
            ( ul \
            | uc \
            | ur \
            | ml \
            | mc \
            | mr \
            | bl \
            | bc \
            | br \
            | same \
            | *,* )
              _OPTION_WINDOW_COORDINATES=$2
            ;;
            ( * )
              _show_error "invalid window coordinates \"$2\" specified"
            ;;
          esac
        fi
        shift
      ;;
      ( -D \
      | --dry-run )
        if $_BOOLEAN_DRYRUN
        then
          _BOOLEAN_DRYRUN=false
        else
          _BOOLEAN_DRYRUN=true
        fi
      ;;
      ( -f \
      | --force )
        if $_BOOLEAN_FORCE
        then
          _BOOLEAN_FORCE=false
        else
          _BOOLEAN_FORCE=true
        fi
      ;;
      ( -id )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]]
        then
          _show_error "Window ID not specified"
        else
          # NOTE:
          # - "function _pass_fail_by_window_id" thoroughly tests this variable
          _OPTION_WINDOW_ID=$2
        fi
        shift
      ;;
      ( -o \
      | --overall )
        if $_BOOLEAN_OVERALL
        then
          _BOOLEAN_OVERALL=false
        else
          _BOOLEAN_OVERALL=true
        fi
      ;;
      ( -p \
      | --permissive )
        if $_BOOLEAN_PERMISSIVE
        then
          _BOOLEAN_PERMISSIVE=false
        else
          _BOOLEAN_PERMISSIVE=true
        fi
      ;;
      ( -r \
      | --raise )
        if $_BOOLEAN_RAISE
        then
          _BOOLEAN_RAISE=false
        else
          _BOOLEAN_RAISE=true
        fi
      ;;
      ( -u \
      | --unused )
        if $_BOOLEAN_UNUSED
        then
          _BOOLEAN_UNUSED=false
        else
          _BOOLEAN_UNUSED=true
        fi
      ;;
      ( -d \
      | --debug )
        if $_BOOLEAN_DEBUG
        then
          _BOOLEAN_DEBUG=false
        else
          _BOOLEAN_DEBUG=true
        fi
      ;;
      ( -v \
      | --verbose )
        if $_BOOLEAN_VERBOSE
        then
          _BOOLEAN_VERBOSE=false
        else
          _BOOLEAN_VERBOSE=true
        fi
      ;;
      ( "-?" \
      | -h \
      | --help ) # -? must be "-?" or it matches "-<any single character>"
        _show_help
      ;;
      ( -* )
        _show_error "invalid option \"$1\" specified"
      ;;
      ( * )
        _show_error "invalid parameter \"$1\" specified"
      ;;
    esac
    shift
  done

  #- _parse_parameters -#

  # - technically in the wrong spot, but it's a chicken or egg scenario
  _eko_iod "#+ _parse_parameters +#"

  # NOTE:
  # - order of operations of the following 2 functions is unimportant

  # - validate the existence & required options of system builtins
  # - while we're at it, set up the options for the various builtins if needed
  _builtin_validate_setup

  # - validate the existence & required options of system binaries
  # - while we're at it, set up the options for the various binaries if needed
  _binary_validate_setup

  #+ parameter settings (in (mostly) proper order of operation) +#

  # NOTE:
  # - the following blocks are *very* sensitive to order of operations

  if $_BOOLEAN_DEBUG \
  || $_BOOLEAN_VERBOSE
  then
    _BOOLEAN_STDOUT=false  # display
  fi

  # - assign default value if unset
  # - ${parameter:=word}
  _OPTION_WINDOW_COORDINATES=${_OPTION_WINDOW_COORDINATES:=same}

  # - cheap & easy way to do a dry-run
  if $_BOOLEAN_DRYRUN
  then
    _BINARY_WMCTRL=true
  fi

  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  _eko_pv \$_BOOLEAN_DEBUG: \""$_BOOLEAN_DEBUG\""
  _eko_pv \$_BOOLEAN_DRYRUN: \""$_BOOLEAN_DRYRUN\""
  _eko_pv \$_BOOLEAN_FORCE: \""$_BOOLEAN_FORCE\""
  _eko_pv \$_BOOLEAN_OVERALL: \""$_BOOLEAN_OVERALL\""
  _eko_pv \$_BOOLEAN_PERMISSIVE: \""$_BOOLEAN_PERMISSIVE\""
  _eko_pv \$_BOOLEAN_RAISE: \""$_BOOLEAN_RAISE\""
  _eko_pv \$_BOOLEAN_STDOUT: \""$_BOOLEAN_STDOUT\""
  _eko_pv \$_BOOLEAN_UNUSED: \""$_BOOLEAN_UNUSED\""
  _eko_pv \$_BOOLEAN_VERBOSE: \""$_BOOLEAN_VERBOSE\""
  _eko_pv \$_OPTION_WINDOW_COORDINATES: \""$_OPTION_WINDOW_COORDINATES\""
  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

  #- parameter settings (in (mostly) proper order of operation) -#

  # - and so it begins

  # - we'll be using this information for a lot of things (several of the
  #   _get_net_* functions). just grab everything once
  _OUTPUT_XPROP_ROOT=$(xprop -root)

  # - get full list of Window IDs
  _get_net_client_list_window

  # NOTE:
  # - "-f, --force" only needs the window id list. it does everything else on
  #   its own. crudely, but it doesn't need to be fancy

  if $_BOOLEAN_FORCE
  then
    _coordinates_force
  else
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_OPTION_WINDOW_ID ]]
    then
      # - validate Window ID if it was specified on the commandline
      _pass_fail_by_window_id
    else
      # - acquire Window ID via point'n'click
      # - requires no validation
      _window_id_acquire
    fi

    # NOTE:
    # - $_OUTPUT_XPROP_ID has been set in either
    #   "function _pass_fail_by_window_id" or "function _window_id_acquire" at
    #   this point
    # - we'll be using this information for a lot of things (several of the
    #   _get_net_* functions). just grab everything once

    # - pass/fail by window type
    _pass_fail_by_window_type

    # - precedes: _get_net_desktop_names_utf8_string
    # - precedes: _get_net_desktop_viewport_cardinal
    # - precedes: _get_net_workarea_cardinal
    _get_net_current_desktop_cardinal

    # - precedes: _get_net_workarea_cardinal
    _get_net_desktop_geometry_cardinal

    # - succeeds: _get_net_current_desktop_cardinal
    # - succeeds: _get_net_desktop_geometry_cardinal
    # - precedes: _coordinates_kludge
    _get_net_workarea_cardinal

    # - precedes: _get_window_undecorated_geometry
    _get_net_frame_extents_cardinal

    _get_net_wm_state_atom

    # - precedes: _coordinates_kludge
    _get_net_wm_name_utf8_string

    # - succeeds: _get_net_frame_extents_cardinal
    _get_window_undecorated_geometry

    # - put all currently unused functions here. simpler to find & deal with
    # - why specifically here? to succeed all the "live" _get_net_* functions
    if $_BOOLEAN_UNUSED
    then
      # - from "xprop -root"
      _get_net_active_window_window
      _get_net_client_list_stacking_window
      _get_net_desktop_layout_cardinal
      # - succeeds: _get_net_current_desktop_cardinal
      _get_net_desktop_names_utf8_string
      # - succeeds: _get_net_current_desktop_cardinal
      _get_net_desktop_viewport_cardinal
      _get_net_number_of_desktops_cardinal
      _get_net_showing_desktop_cardinal
      _get_net_supported_atom
      _get_net_supporting_wm_check_window

      # - from "xprop -id 0xDEADF00D"
      _get_net_wm_allowed_actions_atom
      _get_net_wm_desktop_cardinal
      _get_net_wm_icon_geometry_cardinal
      _get_net_wm_icon_name_utf8_string
      _get_net_wm_opaque_region_cardinal
      _get_net_wm_pid_cardinal
      _get_net_wm_strut_cardinal
      _get_net_wm_strut_partial_cardinal
      _get_net_wm_sync_request_counter_cardinal
      _get_net_wm_user_time_cardinal
      _get_net_wm_user_time_window_window
      _get_net_wm_visible_icon_name_utf8_string
      _get_net_wm_visible_name_utf8_string
    fi

    # - succeeds: _get_net_wm_name_utf8_string
    # - succeeds: _get_net_workarea_cardinal
    _coordinates_kludge

    _coordinates_calculate

    _coordinates_validate

    _set_window_position
  fi

  # - and so it ends (so far)

  _eko_iod "#- _parse_parameters -#"
}

function _pass_fail_by_window_id()
{
  _eko_iod "#+ _pass_fail_by_window_id +#"

  # functions:
  # _eko_iod
  # _pass_fail_by_window_type

  # variables:
  # _NET_CLIENT_LIST_WINDOW
  # _OPTION_WINDOW_ID

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_CLIENT_LIST, WINDOW[]/32

  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0xe00008, "
  # etc, etc
  # "0x36007a2"

  # NOTE:
  # - "function _pass_fail_by_window_type" already does the heavy lifting in
  #   terms of identifying the window *type*, so simply call it to fully
  #   identify said window
  # - additional benefit of this approach is there's only one code path that
  #   would require future maintenance

  if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
  then
    _pass_fail_by_window_type
  fi

  _eko_iod "#- _pass_fail_by_window_id -#"
}

function _pass_fail_by_window_type()
{
  _eko_iod "#+ _pass_fail_by_window_type +#"

  # functions:
  # _eko_iod
  # _show_error

  # variables:
  # _BOOLEAN_PERMISSIVE
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed
  # xprop

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function _pass_fail_by_window_id"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - _NET_WM_WINDOW_TYPE, ATOM[]/32

  # (sorted listing from the original source)
  #   _NET_WM_WINDOW_TYPE_COMBO, ATOM
  #   _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
  #   _NET_WM_WINDOW_TYPE_DIALOG, ATOM
  #   _NET_WM_WINDOW_TYPE_DND, ATOM
  #   _NET_WM_WINDOW_TYPE_DOCK, ATOM
  #   _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_NORMAL, ATOM
  #   _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
  #   _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
  #   _NET_WM_WINDOW_TYPE_SPLASH, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
  #   _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
  #   _NET_WM_WINDOW_TYPE_UTILITY, ATOM

  # NOTE:
  # - Openbox does not let windows change this hint after mapping.

  # NOTE:
  # - the root window itself
  #   "^_NET_CLIENT_LIST(WINDOW): window id # "
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_COMBO.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DESKTOP.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DIALOG.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DND.*"
  # - blackbox/fluxbox/openbox dock, tint2 panel/taskbar, likely others
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DOCK.*"
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DROPDOWN_MENU.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_MENU.*"
  # - don't trap this one. it can be moved
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NORMAL.*"
  # - notify-send popup
  # - kdialog popup (in its random "top/right of display" mode)
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NOTIFICATION.*"
  # - not (yet?) encountered in openbox
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_POPUP_MENU.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_SPLASH.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_TOOLBAR.*"
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_TOOLTIP.*"
  # - kdialog popup (in its random "center of display" mode)
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_UTILITY.*"
  # - xmessage popup
  # ^ untested here simply because it's a normal window

  # NOTE:
  # - the tests below are extremely verbose so future edits are simplified
  # - case in point: _NET_WM_WINDOW_TYPE_NORMAL

  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID 2>/dev/null)

  # - "-n string" = true if the length of string is non-zero
  if [[ -n $_OUTPUT_XPROP_ID ]]
  then

    # - "-n string" = true if the length of string is non-zero
    if [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d') ]]
    then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (root window) specified"
    fi

    if ! $_BOOLEAN_PERMISSIVE
    then

      # - "-n string" = true if the length of string is non-zero
      if [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_COMBO.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (combo) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DESKTOP.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (desktop) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DIALOG.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (dialog) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DND.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (dnd) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DOCK.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (dock) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DROPDOWN_MENU.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (dropdown menu) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_MENU.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (menu) specified"

#      # - "-n string" = true if the length of string is non-zero
#      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NORMAL.*/!d') ]]
#      then
#      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (normal) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NOTIFICATION.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (notification) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_POPUP_MENU.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (popup menu) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_SPLASH.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (splash) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_TOOLBAR.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (toolbar) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_TOOLTIP.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (tooltip) specified"

      # - "-n string" = true if the length of string is non-zero
      elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_UTILITY.*/!d') ]]
      then
      _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (utility) specified"
      fi

    fi

  else
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (does not exist) specified"
  fi

  _eko_iod "#- _pass_fail_by_window_type -#"
}

function _set_window_position()
{
  _eko_iod "#+ _set_window_position +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BINARY_WMCTRL
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_RAISE
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _OPTION_WINDOW_ID
  # _WINDOW_BORDER_WIDTH
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # NET:
  # - several described elsewhere throughout the script

  # - first: the command to move the window
  # - "-i -r" order is important
  # - experimented with "-b add,above". something's not going as expected so
  #   it's not used in $_COMMAND below. instead, do a second call to raise the
  #   window
  if [[ $_COORDINATE_X != -1 ]] \
  && [[ $_COORDINATE_Y != -1 ]]
  then
    # - $((expression))
    _COORDINATE_X=$(( $_COORDINATE_X + $_KLUDGE_X ))
    _COORDINATE_Y=$(( $_COORDINATE_Y + $_KLUDGE_Y ))
  fi
  _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$_COORDINATE_X,$_COORDINATE_Y,-1,-1"

  _eko_pv "window id:" \""$_OPTION_WINDOW_ID\""
  _eko_pv "window name:" \""$_NET_WM_NAME_UTF8_STRING\""
  if $_BOOLEAN_UNUSED
  then
    _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
  fi
  _eko_pv "desktop geometry:" \""$_NET_DESKTOP_GEOMETRY_W,$_NET_DESKTOP_GEOMETRY_H\""
  _eko_pv "workarea geometry:" \""$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
  _eko_pv "desktop borders (L,R,T,B):" \""$_WORKAREA_BORDER_L,$_WORKAREA_BORDER_R,$_WORKAREA_BORDER_T,$_WORKAREA_BORDER_B\""
  _eko_pv "window X,Y (undecorated):" \""$_WINDOW_UNDECORATED_X,$_WINDOW_UNDECORATED_Y\""
  _eko_pv "window decorations (L,R,T,B):" \""$_NET_FRAME_EXTENTS_L,$_NET_FRAME_EXTENTS_R,$_NET_FRAME_EXTENTS_T,$_NET_FRAME_EXTENTS_B\""
  _eko_pv "window X,Y (decorated):" \""$_WINDOW_DECORATED_X,$_WINDOW_DECORATED_Y\""
  _eko_pv "window border width:" \""$_WINDOW_BORDER_WIDTH\""
  _eko_pv "window maximized X,Y:" \""$_BOOLEAN_MAXIMIZED_X,$_BOOLEAN_MAXIMIZED_Y\""
  _eko_pv "new X,Y coordinates:" \""$_COORDINATE_X,$_COORDINATE_Y\""
  _eko_pv "X,Y kludges:" \""$_KLUDGE_X,$_KLUDGE_Y\""
  _eko_pv "wmctrl command (move):" \""$_COMMAND\""

  # - move window if possible
  $_COMMAND

  if $_BOOLEAN_RAISE
  then
    # - next: the command to explicitly raise & give focus to the window
    # - "-i -a" order is important
    # - don't use "-R". it causes the window to become "unsticky"
    _COMMAND="$_BINARY_WMCTRL -i -a $_OPTION_WINDOW_ID"

    _eko_pv "wmctrl command (raise):" \""$_COMMAND\""

    # - raise/focus window if possible
    $_COMMAND
  fi

  _eko_iod "#- _set_window_position -#"
}

function _show_error()
{
  _eko_iod "#+ _show_error +#"

  # functions:
  # _eko_iod

  # variables:
  # @

  # binaries:
  # (none)

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _binary_validate_setup"
  #     parent: "function _builtin_validate_setup"
  #     parent: "function _coordinates_validate"
  #     parent: "function _parse_parameters"
  #     parent: "function _pass_fail_by_window_type"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  # - output to stderr, not stdout
  # - be explicit for clarity
  echo "Error: $@" 1>&2

  _eko_iod "#- _show_error -#"

  exit 1
}

function _show_help()
{
  _eko_iod "#+ _show_help +#"

  # functions:
  # _eko_iod

  # variables:
  # (none)

  # binaries:
  # (none)

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _coordinates_calculate"
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  echo "Provide at least 1 parameter: <Window Coordinates> [OPTION] [[OPTION]]

Mandatory parameter (Window Coordinates):
  -c, --coordinates ul|uc|ur   Upper/Left   Upper/Center   Upper/Right
  -c, --coordinates ml|mc|mr  Middle/Left  Middle/Center  Middle/Right
  -c, --coordinates bl|bc|br  Bottom/Left  Bottom/Center  Bottom/Right
  -c, --coordinates same      Do not change coordinates (for use with --raise)
  -c, --coordinates X,Y       User specified X,Y coordinates

Optional parameters:
  -D, --dry-run     Perform a trial run of the specified action
  -f, --force       Force windows to be least partially on the desktop
  -id <Window ID>   Window ID (in hexadecimal format)
  -o, --overall     Use overall desktop X,Y for window placement calculations
  -p, --permissive  Permissive mode allows moving otherwise immovable windows
  -r, --raise       Raise window & give it focus
  -u, --unused      Display all known \$_NET_* properties unused by this script
  -d, --debug       Display debugging information (function names/entry/exit)
  -v, --verbose     Display verbose information (variable names/contents)
  -?, -h, --help    Display this help text, useful as it is

Note:
  If an option is specified multiple times, the last invocation is used
  If coordinates are not specified default to \"--coordinates same\""

  _eko_iod "#- _show_help -#"

  exit 0
}

function _window_id_acquire()
{
  _eko_iod "#+ _window_id_acquire +#"

  # functions:
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en

  # variables:
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xprop
  # xwininfo

  # builtins:
  # echo

  # NOTE:
  # - required
  #     parent: "function _parse_parameters"
  #     parent: "function "
  #      child: "function "
  #   precedes: "function "
  #   succeeds: "function "

  _eko_ps_en "Select the window to move:" ""
  _eko_pv_en "select the window to move:" ""

  # - acquire Window ID via point'n'click
  _OUTPUT_XWININFO_ID=$(xwininfo)

  _eko_ps "" ""
  _eko_pv "" ""

  _OPTION_WINDOW_ID=$(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Window id:/!d ; /\(.*id: \)\|\( .*\)/ s///g')

  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID)

  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

  _eko_iod "#- _window_id_acquire -#"
}

#- function definitions here -#

#+ start here +#

# functions:
# _parse_parameters

# variables:
# @
# _BINARY_WMCTRL

# binaries:
# (none)

# builtins:
# echo

# NOTE
# - required
#     parent: "commandline"
#      child: "everything"
#   precedes: "everything"

_parse_parameters "$@"

if [[ $_BINARY_WMCTRL == false ]]
then
  echo "binary \"wmctrl\" not found, faked it with \"false\" instead"
fi

#- start here -#

#- marker eof -#
exit 0

#+
# test for things that are guaranteed to be unique for each type of "thing"
# without getting overspecific

# NOTE:
# - information gathered via "xprop | grep ^_NET_ | sort"
# - keep this information for later use
# ^ "_NET_WM_ALLOWED_ACTIONS(ATOM)" could be of particular interest
# - for portability, deliberately limiting tests to *only* _NET_* entries
# - mildly annoying. xmessage is indistinguishable from a normal window
#   simply because it *is* one

# - the root window
# "_NET_ACTIVE_WINDOW(WINDOW): window id # 0xa000b3"
# "_NET_CLIENT_LIST(WINDOW): window id # 0xe00008, 0x1200004, 0xa00009, 0xa0002b, 0xa0004d, 0xa0006f, 0xa00091, 0xa000b3, 0xa000d5, 0xa000f7, 0xa00119, 0xa0018b, 0xa001ad, 0xa001cf, 0xa001f1, 0xa00213, 0xa00235, 0xa00257, 0xa00279, 0xa0029b, 0xa00361, 0xa0038b, 0xa003b5, 0xa00409, 0xa00433, 0xa00477, 0xa00499, 0xa0063e, 0xa00c05, 0xa00c2f, 0xa00d1f, 0xa00f91, 0xa00fb4, 0xa01369, 0xa01393, 0x3400011, 0xa01755, 0xa01787, 0xa017a9, 0xa017cb, 0xa019b1, 0xa019db, 0xa01a25, 0xa01a47, 0x36000de, 0x4000099, 0x360024f, 0x3600316, 0x36004a8, 0xa01b72, 0x36007a2"
# "_NET_CLIENT_LIST_STACKING(WINDOW): window id # 0xa00009, 0xa01393, 0xa01a47, 0xa001f1, 0xa0029b, 0xa01a25, 0xa00235, 0xa00257, 0xa00213, 0x36004a8, 0xa00499, 0xa017cb, 0xa01b72, 0xa00477, 0xa01369, 0xa00c05, 0xa00c2f, 0xa00d1f, 0xa019b1, 0xa0038b, 0xa019db, 0xa001cf, 0x3600316, 0xa00f91, 0xa01787, 0x36000de, 0x360024f, 0x36007a2, 0xa000f7, 0xa001ad, 0xa00409, 0xa0004d, 0xa0018b, 0xa00279, 0xa00433, 0xa017a9, 0xa0006f, 0xa000d5, 0x4000099, 0x3400011, 0xa0002b, 0xa00fb4, 0xa00119, 0xa01755, 0xa0063e, 0xa00361, 0xa003b5, 0xa00091, 0xa000b3, 0xe00008, 0x1200004"
# "_NET_CURRENT_DESKTOP(CARDINAL) = 0"
# "_NET_DESKTOP_GEOMETRY(CARDINAL) = 1920, 1080"
# "_NET_DESKTOP_LAYOUT(CARDINAL) = 1, 1, 0, 0"
# "_NET_DESKTOP_NAMES(UTF8_STRING) = "I", "II", "III", "IV", "V", "VI", "VII", "VIII""
# "_NET_DESKTOP_VIEWPORT(CARDINAL) = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
# "_NET_NUMBER_OF_DESKTOPS(CARDINAL) = 8"
# "_NET_SHOWING_DESKTOP(CARDINAL) = 0"
# "_NET_SUPPORTED(ATOM) = _NET_SUPPORTING_WM_CHECK, _NET_WM_FULL_PLACEMENT, _NET_CURRENT_DESKTOP, _NET_NUMBER_OF_DESKTOPS, _NET_DESKTOP_GEOMETRY, _NET_DESKTOP_VIEWPORT, _NET_ACTIVE_WINDOW, _NET_WORKAREA, _NET_CLIENT_LIST, _NET_CLIENT_LIST_STACKING, _NET_DESKTOP_NAMES, _NET_CLOSE_WINDOW, _NET_DESKTOP_LAYOUT, _NET_SHOWING_DESKTOP, _NET_WM_NAME, _NET_WM_VISIBLE_NAME, _NET_WM_ICON_NAME, _NET_WM_VISIBLE_ICON_NAME, _NET_WM_DESKTOP, _NET_WM_STRUT, _NET_WM_STRUT_PARTIAL, _NET_WM_ICON, _NET_WM_ICON_GEOMETRY, _NET_WM_WINDOW_TYPE, _NET_WM_WINDOW_TYPE_DESKTOP, _NET_WM_WINDOW_TYPE_DOCK, _NET_WM_WINDOW_TYPE_TOOLBAR, _NET_WM_WINDOW_TYPE_MENU, _NET_WM_WINDOW_TYPE_UTILITY, _NET_WM_WINDOW_TYPE_SPLASH, _NET_WM_WINDOW_TYPE_DIALOG, _NET_WM_WINDOW_TYPE_NORMAL, _NET_WM_ALLOWED_ACTIONS, _NET_WM_WINDOW_OPACITY, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _NET_WM_STATE, _NET_WM_STATE_MODAL, _NET_WM_STATE_MAXIMIZED_VERT, _NET_WM_STATE_MAXIMIZED_HORZ, _NET_WM_STATE_SHADED, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER, _NET_WM_STATE_HIDDEN, _NET_WM_STATE_FULLSCREEN, _NET_WM_STATE_ABOVE, _NET_WM_STATE_BELOW, _NET_WM_STATE_DEMANDS_ATTENTION, _NET_MOVERESIZE_WINDOW, _NET_WM_MOVERESIZE, _NET_WM_USER_TIME, _NET_FRAME_EXTENTS, _NET_REQUEST_FRAME_EXTENTS, _NET_RESTACK_WINDOW, _NET_STARTUP_ID, _NET_WM_SYNC_REQUEST, _NET_WM_SYNC_REQUEST_COUNTER, _NET_WM_PID, _NET_WM_PING, _KDE_WM_CHANGE_STATE, _KDE_NET_WM_FRAME_STRUT, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _OB_WM_ACTION_UNDECORATE, _OB_WM_STATE_UNDECORATED, _OPENBOX_PID, _OB_THEME, _OB_CONFIG_FILE, _OB_CONTROL, _OB_VERSION, _OB_APP_ROLE, _OB_APP_TITLE, _OB_APP_NAME, _OB_APP_CLASS, _OB_APP_GROUP_NAME, _OB_APP_GROUP_CLASS, _OB_APP_TYPE"
# "_NET_SUPPORTING_WM_CHECK(WINDOW): window id # 0x8000bb"
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WORKAREA(CARDINAL) = 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056, 0, 0, 1852, 1056"

# - firefox (new instance, same one as below . not maximized)
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 21, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (22 x 22):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_OPAQUE_REGION(CARDINAL) = "
# "_NET_WM_PID(CARDINAL) = 26071"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 56625144, 56625145"
# "_NET_WM_USER_TIME(CARDINAL) = 2553561896"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x36007f7"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - firefox (new instance, same one as above. maximized)
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (22 x 22):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_OPAQUE_REGION(CARDINAL) = "
# "_NET_WM_PID(CARDINAL) = 26071"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_MAXIMIZED_VERT, _NET_WM_STATE_MAXIMIZED_HORZ"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 56625144, 56625145"
# "_NET_WM_USER_TIME(CARDINAL) = 2553561896"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x36007f7"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Mozilla Firefox""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - gkrellm (not in the dock)
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_PID(CARDINAL) = 16706"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080389"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400004"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "gkrellm""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "center of display" mode)
# "_NET_STARTUP_ID(UTF8_STRING) = "0""
# "_NET_WM_ICON(CARDINAL) = 	Icon (16 x 16):"
# "_NET_WM_PID(CARDINAL) = 17149"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STAYS_ON_TOP"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080407"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_UTILITY, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "top/right of display" mode)
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_PID(CARDINAL) = 18733"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STICKY, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080645"
# "_NET_WM_USER_TIME(CARDINAL) = 2565348851"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400104"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - notify-send
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-notifyd""
# "_NET_WM_PID(CARDINAL) = 14910"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_ABOVE, _NET_WM_STATE_STICKY, _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 88080425"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x5400028"
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - openbox dock (below is the entire report even without the grep)
# - clicking on anything in the dock gets this
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - quasselclient
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_STARTUP_ID(UTF8_STRING) = "0""
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (64 x 64):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1449, 1056, 126, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_PID(CARDINAL) = 1769"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 54526060"
# "_NET_WM_USER_TIME(CARDINAL) = 2553195505"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Quassel IRC - #slackware (OFTC)""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - rxvt
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 795, 1056, 127, 24"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_PID(CARDINAL) = 1438"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "[erik@beryllium.elements.lan ~/devel/bash/scanfs/testing/stdout]""

# - tint2
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_BELOW"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_PID(CARDINAL) = 1454"
# "_NET_WM_STATE(ATOM) = _NET_WM_STATE_SKIP_TASKBAR, _NET_WM_STATE_SKIP_PAGER, _NET_WM_STATE_ABOVE"
# "_NET_WM_STRUT(CARDINAL) = 0, 0, 0, 24"
# "_NET_WM_STRUT_PARTIAL(CARDINAL) = 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1919"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "tint2""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - wmagnify (normal)
# - the only difference between normal & sticky is "_NET_WM_DESKTOP(CARDINAL)"
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1579, 1056, 126, 24"
# "_NET_WM_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Magnify 3x""

# - wmagnify (sticky)
# - the only difference between normal & sticky is "_NET_WM_DESKTOP(CARDINAL)"
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1555, 1056, 150, 24"
# "_NET_WM_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "Magnify 3x""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "Magnify 3x""

# - wmnd
# - can only spawn *in* the dock, so untested

# - xfce4-panel
# "_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_BELOW"
# "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_PID(CARDINAL) = 1453"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_STRUT_PARTIAL(CARDINAL) = 0, 68, 0, 0, 0, 0, 481, 913, 0, 0, 0, 0"
# "_NET_WM_SYNC_REQUEST_COUNTER(CARDINAL) = 18874374"
# "_NET_WM_USER_TIME(CARDINAL) = 2525473096"
# "_NET_WM_USER_TIME_WINDOW(WINDOW): window id # 0x1200005"
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "xfce4-panel""
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - xmessage
# "_NET_FRAME_EXTENTS(CARDINAL) = 1, 1, 22, 6"
# "_NET_WM_ALLOWED_ACTIONS(ATOM) = _NET_WM_ACTION_CHANGE_DESKTOP, _NET_WM_ACTION_SHADE, _NET_WM_ACTION_CLOSE, _NET_WM_ACTION_MOVE, _NET_WM_ACTION_MINIMIZE, _NET_WM_ACTION_RESIZE, _NET_WM_ACTION_FULLSCREEN, _NET_WM_ACTION_MAXIMIZE_HORZ, _NET_WM_ACTION_MAXIMIZE_VERT, _NET_WM_ACTION_ABOVE, _NET_WM_ACTION_BELOW, _OB_WM_ACTION_UNDECORATE"
# "_NET_WM_DESKTOP(CARDINAL) = 0"
# "_NET_WM_ICON(CARDINAL) = 	Icon (48 x 48):"
# "_NET_WM_ICON_GEOMETRY(CARDINAL) = 1588, 1056, 117, 24"
# "_NET_WM_STATE(ATOM) = "
# "_NET_WM_VISIBLE_ICON_NAME(UTF8_STRING) = "xmessage""
# "_NET_WM_VISIBLE_NAME(UTF8_STRING) = "xmessage""
#-

##++
# - the root window
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - firefox
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - gkrellm (not in the dock)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "center of display" mode)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_UTILITY, _KDE_NET_WM_WINDOW_TYPE_OVERRIDE, _NET_WM_WINDOW_TYPE_NORMAL"

# - kdialog (in its random "top/right of display" mode)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - notify-send
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NOTIFICATION"

# - openbox dock (& anything/everything in it)
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - quasselclient
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL"

# - rxvt
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - tint2
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - wmagnify normal & wmagnify sticky
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"

# - xfce4-panel
# "_NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_DOCK"

# - xmessage
# nothing from "_NET_WM_WINDOW_TYPE(ATOM)"
##--

###+++

# - indented with tab = script supports
# - # = xprop -root
# - ## = xprop -id 0xDEADF00D

# - root window properties (& related messages)

	# - "function _get_net_active_window_window"              (unused)
	# - "function _get_net_client_list_stacking_window"       (unused)
	# - "function _get_net_client_list_window"
	# - "function _get_net_current_desktop_cardinal"
	# - "function _get_net_desktop_geometry_cardinal"
	# - "function _get_net_desktop_layout_cardinal"           (unused)
	# - "function _get_net_desktop_names_utf8_string"         (unused)
	# - "function _get_net_desktop_viewport_cardinal"         (unused)
	# - "function _get_net_number_of_desktops_cardinal"       (unused)
	# - "function _get_net_showing_desktop_cardinal"          (unused)
	# - "function _get_net_supported_atom"                    (unused)
	# - "function _get_net_supporting_wm_check_window"        (unused)
	# - "function _get_net_workarea_cardinal"

# - application window properties

	## - "function _get_net_frame_extents_cardinal"
	## - "function _get_net_wm_allowed_actions_atom"          (unused)
	## - "function _get_net_wm_desktop_cardinal"              (unused)
	## - "function _get_net_wm_icon_geometry_cardinal"        (unused)
	## - "function _get_net_wm_icon_name_utf8_string"         (unused)
	## - "function _get_net_wm_name_utf8_string"
	## - "function _get_net_wm_opaque_region_cardinal"        (unused)
	## - "function _get_net_wm_pid_cardinal"                  (unused)
	## - "function _get_net_wm_state_atom"
	## - "function _get_net_wm_strut_cardinal"                (unused)
	## - "function _get_net_wm_strut_partial_cardinal"        (unused)
	## - "function _get_net_wm_sync_request_counter_cardinal" (unused)
	## - "function _get_net_wm_user_time_cardinal"            (unused)
	## - "function _get_net_wm_user_time_window_window"       (unused)
	## - "function _get_net_wm_visible_icon_name_utf8_string" (unused)
	## - "function _get_net_wm_visible_name_utf8_string"      (unused)

# ^ update this listing with
# grep "^function _get_net_" /usr/local/bin/move-window | sort | lesss

# - these are defined in the freedesktop specification

# - add functions for anything not tabbed
# - before adding anything, I need to discover the appropriate sed invocation
#   for each one

# - indented with tab = script supports
# - # = xprop -root
# - ## = xprop -id 0xDEADF00D

# - root window properties (& related messages)

# NOTE: (_NET_VIRTUAL_ROOTS)
# - Openbox does not use virtual roots, so this is not needed.

	# _NET_ACTIVE_WINDOW, WINDOW/32
	# _NET_CLIENT_LIST, WINDOW[]/32
	# _NET_CLIENT_LIST_STACKING, WINDOW[]/32
	# _NET_CURRENT_DESKTOP desktop, CARDINAL/32
	# _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32
	# _NET_DESKTOP_LAYOUT, orientation, columns, rows, starting_corner CARDINAL[4]/32
	#define _NET_WM_ORIENTATION_HORZ 0
	#define _NET_WM_ORIENTATION_VERT 1
	#define _NET_WM_TOPLEFT     0
	#define _NET_WM_TOPRIGHT    1
	#define _NET_WM_BOTTOMRIGHT 2
	#define _NET_WM_BOTTOMLEFT  3
	# _NET_DESKTOP_NAMES, UTF8_STRING[]
	# _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32
	# _NET_NUMBER_OF_DESKTOPS, CARDINAL/32
	# _NET_SHOWING_DESKTOP desktop, CARDINAL/32
	# _NET_SUPPORTED, ATOM[]/32
	# _NET_SUPPORTING_WM_CHECK, WINDOW/32
# _NET_VIRTUAL_ROOTS, WINDOW[]/32
	# _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32

# - other root window messages

# _NET_CLOSE_WINDOW
# _NET_MOVERESIZE_WINDOW
# _NET_REQUEST_FRAME_EXTENTS
# _NET_RESTACK_WINDOW

# _NET_WM_MOVERESIZE
#define _NET_WM_MOVERESIZE_SIZE_TOPLEFT      0
#define _NET_WM_MOVERESIZE_SIZE_TOP          1
#define _NET_WM_MOVERESIZE_SIZE_TOPRIGHT     2
#define _NET_WM_MOVERESIZE_SIZE_RIGHT        3
#define _NET_WM_MOVERESIZE_SIZE_BOTTOMRIGHT  4
#define _NET_WM_MOVERESIZE_SIZE_BOTTOM       5
#define _NET_WM_MOVERESIZE_SIZE_BOTTOMLEFT   6
#define _NET_WM_MOVERESIZE_SIZE_LEFT         7
#define _NET_WM_MOVERESIZE_MOVE              8   /* movement only */
#define _NET_WM_MOVERESIZE_SIZE_KEYBOARD     9   /* size via keyboard */
#define _NET_WM_MOVERESIZE_MOVE_KEYBOARD    10   /* move via keyboard */
#define _NET_WM_MOVERESIZE_CANCEL           11   /* cancel operation */

# - application window properties

# NOTE: (_NET_WM_HANDLED_ICONS)
# - Openbox does not display icons for iconic windows.

# NOTE: (_NET_WM_PING)
# - Openbox doesn't look for hung processes at this time.

	## _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32
	## _NET_WM_ALLOWED_ACTIONS, ATOM[] (12 possibilities)
	## _NET_WM_ACTION_ABOVE, ATOM
	## _NET_WM_ACTION_BELOW, ATOM
	## _NET_WM_ACTION_CHANGE_DESKTOP, ATOM
	## _NET_WM_ACTION_CLOSE, ATOM
	## _NET_WM_ACTION_FULLSCREEN, ATOM
	## _NET_WM_ACTION_MAXIMIZE_HORZ, ATOM
	## _NET_WM_ACTION_MAXIMIZE_VERT, ATOM
	## _NET_WM_ACTION_MINIMIZE, ATOM
	## _NET_WM_ACTION_MOVE, ATOM
	## _NET_WM_ACTION_RESIZE, ATOM
	## _NET_WM_ACTION_SHADE, ATOM
	## _NET_WM_ACTION_STICK, ATOM
## _NET_WM_BYPASS_COMPOSITOR, CARDINAL/32
	## _NET_WM_DESKTOP desktop, CARDINAL/32
## _NET_WM_HANDLED_ICONS
	## _NET_WM_ICON_GEOMETRY, x, y, width, height, CARDINAL[4]/32
	## _NET_WM_ICON_NAME, UTF8_STRING
	## _NET_WM_NAME, UTF8_STRING
	## _NET_WM_OPAQUE_REGION, x, y, width, height, CARDINAL[][4]/32
	## _NET_WM_PID CARDINAL/32
	## _NET_WM_STATE, ATOM[] (13 possibilities)
	## _NET_WM_STATE_ABOVE, ATOM
	## _NET_WM_STATE_BELOW, ATOM
	## _NET_WM_STATE_DEMANDS_ATTENTION, ATOM
	## _NET_WM_STATE_FOCUSED, ATOM
	## _NET_WM_STATE_FULLSCREEN, ATOM
	## _NET_WM_STATE_HIDDEN, ATOM
	## _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
	## _NET_WM_STATE_MAXIMIZED_VERT, ATOM
	## _NET_WM_STATE_MODAL, ATOM
	## _NET_WM_STATE_SHADED, ATOM
	## _NET_WM_STATE_SKIP_PAGER, ATOM
	## _NET_WM_STATE_SKIP_TASKBAR, ATOM
	## _NET_WM_STATE_STICKY, ATOM
	## _NET_WM_STRUT, left, right, top, bottom, CARDINAL[4]/32
	## _NET_WM_STRUT_PARTIAL, left, right, top, bottom, left_start_y, left_end_y, right_start_y, right_end_y, top_start_x, top_end_x, bottom_start_x, bottom_end_x, CARDINAL[12]/32
	## _NET_WM_SYNC_REQUEST_COUNTER, ?, ?, CARDINAL[]/32
	## _NET_WM_USER_TIME CARDINAL/32
	## _NET_WM_USER_TIME_WINDOW WINDOW/32
	## _NET_WM_VISIBLE_ICON_NAME, UTF8_STRING
	## _NET_WM_VISIBLE_NAME, UTF8_STRING
	## _NET_WM_WINDOW_TYPE, ATOM[]/32 (14 possibilities)
	## _NET_WM_WINDOW_TYPE_COMBO, ATOM
	## _NET_WM_WINDOW_TYPE_DESKTOP, ATOM
	## _NET_WM_WINDOW_TYPE_DIALOG, ATOM
	## _NET_WM_WINDOW_TYPE_DND, ATOM
	## _NET_WM_WINDOW_TYPE_DOCK, ATOM
	## _NET_WM_WINDOW_TYPE_DROPDOWN_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_NORMAL, ATOM
	## _NET_WM_WINDOW_TYPE_NOTIFICATION, ATOM
	## _NET_WM_WINDOW_TYPE_POPUP_MENU, ATOM
	## _NET_WM_WINDOW_TYPE_SPLASH, ATOM
	## _NET_WM_WINDOW_TYPE_TOOLBAR, ATOM
	## _NET_WM_WINDOW_TYPE_TOOLTIP, ATOM
	## _NET_WM_WINDOW_TYPE_UTILITY, ATOM

## _NET_WM_ICON CARDINAL[][2+n]/32 (deliberately skipping this one)

###---
