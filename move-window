#!/bin/bash
#+ marker sof +#

# move-window v2019.10.16

# Copyright (C) 2019
# Erik Jan Tromp <alphageek@slackware.com>
# Licensed under the GPL v2

# concept:
# - move selected window to desired position on desktop

# TODO:
# - add a few routines (knowing they're not really necessary) for gathering
#   additional information
# ^ get the specific names via "xprop -root"
#+ marker edit +#

# IDEA:
# - somehow do a set of multiple calls to wmctrl so "-l, --lower" can be
#   implemented. do so in such a way that focus is not "stolen". if this
#   approach works, use it as a replacement for "-r, --raise" as well because
#   the current method of raising a window steals focus
# - possibly "-b add,above" or "-b add,below", followed by moving to "-1,-1",
#   then "-b remove,above" or "-b remove,below"
# - related: for "<WIN>" possibly use ":ACTIVE:"
# - discover window's state beforehand so state can be restored afterwards.
#   inspect the following:
#   _NET_WM_STATE_ABOVE, ATOM
#   _NET_WM_STATE_BELOW, ATOM
# ^ "function _get_net_wm_state_atom" for examples

# FIXME:
# - Error: "xprop" does not support "-id id"
# ^ if called from outside X
# - give it similar treatment as that from osd's handler for xmessage
# - xwininfo *might* require similar coddling
# - do the important stuff listed below first, though
# - or just add simple tests before everything else to see if the script is
#   being called from within X. complain & quit if not
# ^ possibly test for $DISPLAY &/or $XAUTHORITY

# OOPS:
# - changelog order is unpredictable. some series of entries per date are
#   chronologically top-to-bottom while others are bottom-to-top. preferred
#   order is bottom-to-top. this will gradually be fixed when time permits

# 2019-10-16
# -  renamed functions globally:
#  was: _eko_pS
#  was: _eko_pS_en
#   is: _eko_ps
#   is: _eko_ps_en
# - "functions:/variables:/binaries:/builtins:" listings for each function
#   updated & verified. also updated the "use & abuse" listings based on this
#   information
# - "function _window_id_acquire" added the following lines:
#  add: _eko_pv_en "select the window to move:" ""
#  add: _eko_pv "" ""
# - "function _eko_pv_en" added
# - "function _coordinates_validate" removed 2 of the 4 "error exits". rely
#    solely on the 4 "force to fits"
# - comment cleanup throughout the script
# 2019-10-11
# - "function _show_help" reordered the options listed so that "-d, --debug",
#   "-v, --verbose", & "-?, -h, --help" are the last options displayed
# - "function _parse_parameters" reordered the options parsed to match what is
#   displayed in "function _show_help" to simplify maintenance
# - "function _eko_S_en" removed
# - changed the following lines globally:
#  was: _eko_S_en "      \$_FOO: \"$_FOO\""
#   is: _eko_pS_en \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S_en "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS_en "Foo Bar:" \""$_FOO\""
# - "function _eko_pS_en" added for properly formatted stdout output
# - "function _eko_S" removed
# - changed the following lines globally:
#  was: _eko_S "      \$_FOO: \"$_FOO\""
#   is: _eko_pS \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_S "      Foo Bar:" \""$_FOO\""
#   is: _eko_pS "Foo Bar:" \""$_FOO\""
# - "function _eko_pS" added for properly formatted stdout output
# - "function _eko_v" removed
# - changed the following lines throughout the script:
#  was: _eko_v "      \$_FOO: \"$_FOO\""
#   is: _eko_pv \$_FOO: \""$_FOO\""
# ^ there are several in the following form since the left-hand side contains
#   whitespace
#  was: _eko_v "      Foo Bar:" \""$_FOO\""
#   is: _eko_pv "Foo Bar:" \""$_FOO\""
# - "function _eko_pv" added for properly formatted verbose output
# - "# functions:", "# variables:", "# binaries:", & "# builtins:" listings     
#   added/appended to each function & in main
# ^ "# builtins:" is to keep track of "echo" &/or "printf" usage. technically
#   speaking, "(none)" is a misnomer as it's only in reference to these 2
#   builtins
# 2019-09-20
# - "function _get_window_undecorated_geometry" altered calling syntax to
#   "echo/sed"
#  was: <<< \
#  was: $(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
#   is: < \
#   is: <(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')
# - removed all #'d lines dealing with unnecessary doublequoting
# - NOTE: (to self) refer to the 2019-08-12 savepoint for the "before" version
# - added "--" to all invocations of "read". possibly overkill in a few spots,
#   but better to have too many than too few
# - "function _builtin_validate_setup" added for "read -r"
# 2019-08-12
# - "function _binary_validate_setup" altered _BINARY_HELP assignment & tests
#   for each binary
#  was: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2> /dev/null))
#   is: _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
#  was: if [[ -z $_BINARY_HELP ]]
#   is: if [[ $_BINARY_HELP =~ "command not found" ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_BINARY_HELP" " =~ " "$_BINARY_OPTION" " ]]
#   is: if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
# - "function _get_net_wm_state_atom" altered _NET_WM_STATE_ATOM for each test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_HORZ" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ " "$_NET_WM_STATE_ATOM" " =~ " "_NET_WM_STATE_MAXIMIZED_VERT" " ]]
#   is: if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
# - "function _pass_fail_by_window_id" altered _NET_CLIENT_LIST_WINDOW test
#  was: # - lhs = list, rhs = single. surround each with doublequoted spaces
#  was: if [[ ! " "$_NET_CLIENT_LIST_WINDOW" " =~ " "$_OPTION_WINDOW_ID" " ]]
#   is: if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
# - "function _get_net_desktop_names_utf8_string" altered tests so this script
#   can be used with older versions of bash
#  was: # - "-v varname" = true if the shell variable varname is set
#  was: if [[ -v _POSITION_FINISH ]] \
#  was: && [[ -v _POSITION_START ]]
#   is: # - "-n string" = true if the length of string is non-zero
#   is: if [[ -n $_POSITION_FINISH ]] \
#   is: && [[ -n $_POSITION_START ]]
# 2019-07-11
# - additional style changes:
#   (my scripts are already bash specific, so backwards compatibility is not
#   an issue. several ideas are from http://mywiki.wooledge.org/BashFAQ)
#   - naming convention for functions
#   - usage of "[]" vs "[[]]" to evaluate expressions
#   - doublequote variable assignments only when absolutely necessary to avoid
#     typecasting
# 2019-07-10
# - cleanup & improvements including, but not limited to, the following:
# - removed many irrelevant comments
# - style changes. many minor things add up to an overall major improvement
# - "function _eko_iod" simplified & improved
# - "function _coordinates_force_fail" removed
# - "function _eko_d" removed
# - "function _show_error" output to stderr, not stdout
# - "function _binary_validate_setup" added for "sed", "wmctrl", "xprop",
#   "xwininfo"
# - "function _coordinates_user_specified" added some extra magic so "-1" is
#   assumed if not specified. aka: "-c X," & "-c ,Y" are interpreted as
#   "-c X,-1" & "-c -1,Y"
# - "function _parse_parameters" style changes & improvements
# - changed how wmctrl detection/substitution is handled
# - renamed option "-t, --test" to "-D, --dry-run" for uniformity
# - replaced short options with long options for called binaries (sed)
# 2019-05-27
# - assorted edits for clarity
# - "function _coordinates_user_specified" improved coordinate parsing
# - "function _parse_parameters" improved wmctrl detection & substitution
# - "function _parse_parameters" if coordinates aren't specified, default to
#   "same"
# - "function _set_window_position" minor edits to simplify operations
# - "function _coordinates_calculate" minor edits for clarity
# 2019-05-26
# - "function _coordinates_force" added
# 2019-05-25
# - "function _coordinates_calculate" fixed some erroneous calculations
# 2019-05-24
# - first limited release
# 2019-05-18
# - coding begins almost from scratch. using some ideas learned from writing
#   "obx-window"

# TODO:
# - somehow figure out how to get rid of the dependency on wmctrl
# - add support to manipulate currently-in-focus (_NET_ACTIVE_WINDOW_WINDOW)
#   window. (note to self: to do what with it, exactly?)
# ^ have WM bindings to move the currently-in-focus window around the desktop?

# TODO:
# - do something with this information? (specifically: 4294967295 handling)
#   xprop -id
#   _get_net_wm_desktop_cardinal
#   _NET_WM_DESKTOP_CARDINAL
#   "_NET_WM_DESKTOP(CARDINAL) = "
#   "_NET_WM_DESKTOP(CARDINAL) = 4294967295"
#   "_NET_WM_DESKTOP(CARDINAL) = 0"
#   "_NET_WM_DESKTOP(CARDINAL) = 1"
#   "_NET_WM_DESKTOP(CARDINAL) = 2"
#   "_NET_WM_DESKTOP(CARDINAL) = 3"
#   "_NET_WM_DESKTOP(CARDINAL) = 4"
#   "_NET_WM_DESKTOP(CARDINAL) = 5"
#   "_NET_WM_DESKTOP(CARDINAL) = 6"
#   "_NET_WM_DESKTOP(CARDINAL) = 7"
# - tint2, wmagnify sticky, xfce4-panel
#   _NET_WM_DESKTOP(CARDINAL) = 4294967295
# - wmagnify normal
#   _NET_WM_DESKTOP(CARDINAL) = 0

# NOTE:
# - I would have expected to see "_NET_WM_STATE(ATOM) = _NET_WM_STATE_STICKY"
#   when I see "_NET_WM_DESKTOP(CARDINAL) = 4294967295", but that isn't the
#   case in openbox. weird

# NOTE: (to self) (& others, if you're bored. hi there!)
# - look for anything with the following tags: EDIT FIXME IDEA NOTE ORDER TODO
#   TRY
# - use of bash builtins is often (but not always) preferred over shelling out
#   to binaries
# ^ reasons: speed, availability, simplicity, & predictability. fast is always
#   preferred, no need to test if a binary even *exists*, no need to be
#   concerned about changed syntax or output from one release to the next

# NOTE: (differences when doublequoting vs not doublequoting)
# - #1: echo "$_OUTPUT_XPROP_ROOT"
# - #2: echo "$_OUTPUT_XPROP_ID"
# - #3: echo $_OUTPUT_XWININFO_ID
# ^ #1 & #2 above preserve all spacing, linebreaks, & special characters
# ^ #3 does not preserve spacing, linebreaks, or special characters. outputs
#   everything as a single line with single spacing
# - this behaviour is deliberately (ab)used throughout the script

# NOTE: (builtin/binary/variable/function indentation)
# - 4 spaces, hash, builtin/binary/variable/function name = in sub-function
# - 2 spaces, hash, builtin/binary/variable/function name = in function
# - 0 spaces, hash, builtin/binary/variable/function name = in main
# NOTE: (system builtin use & abuse - excluding echo/printf)
  # read
# NOTE: (system binary use & abuse)
  # sed
  # wmctrl
  # xprop
  # xwininfo
# NOTE: (system & script variable use & abuse)
# - system variables are always in the form "FOO"
# - script variables are always in the form "_FOO"
# - system variables referenced & modified. necessary & the whole point
  # @
# - system variables referenced but not modified
  # #
  # 1
  # 2
  # @
  # FUNCNAME (single dimension indexed array)
# @
# - ephemeral variables. here today, gone tomorrow (keeping track for myself)
# - better to have too many than too few
    # _BOOLEAN_OVERALL
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_GEOMETRY_H
    # _NET_DESKTOP_GEOMETRY_W
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _NET_WORKAREA_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _WORKAREA_BORDER_B
    # _WORKAREA_BORDER_L
    # _WORKAREA_BORDER_R
    # _WORKAREA_BORDER_T
    # _XX0
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_OVERALL
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_VERBOSE
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _CORNERS
  # _COUNTER
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_ACTIVE_WINDOW_WINDOW
  # _NET_CLIENT_LIST_WINDOW
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _NET_WM_DESKTOP_CARDINAL
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WM_STATE_ATOM
  # _NET_WORKAREA_CARDINAL
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XPROP_ROOT
  # _OUTPUT_XWININFO_ID
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T
# _BINARY_WMCTRL
# _OPTIONS_READ (read options, not script options)
# NOTE: (script function use & abuse)
# - script functions are always in the form "_foo"
    # _eko_iod
    # _eko_pv
  # _binary_validate_setup
  # _builtin_validate_setup
  # _coordinates_calculate
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_user_specified
  # _coordinates_validate
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en
  # _get_net_active_window_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_name_utf8_string
  # _get_net_wm_state_atom
  # _get_net_workarea_cardinal
  # _get_window_undecorated_geometry
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help
  # _sub_function
  # _window_id_acquire
# _parse_parameters

#+ setup here +#

# variables:
# _OPTIONS_READ (read options, not script options)

# - doing this here so we get no suprises in "function _builtin_validate_setup"
unset _OPTIONS_READ

#- setup here -#

#+ function definitions here +#

# ORDER:
# - before calling _parse_parameters, but otherwise alphabetical

function _binary_validate_setup()
{
  _eko_iod "#+ _binary_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BINARY_HELP
  # _BINARY_NAME
  # _BINARY_OPTION
  # _BINARY_WMCTRL

  # binaries:
  # sed
  # wmctrl
  # xprop
  # xwininfo

  # builtins:
  # echo

  # NOTE:
  # - rather than test a given binary's version in hopes of figuring out which
  #   features it supports, test its supported feature set directly. not only
  #   is this much simpler to do, it's possible to test only those features
  #   that are explicitly used in the script
  # - how? get the binary to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = no binary, otherwise
  #   parse the help text for descriptions of specific features

  # NOTE:
  # - be explicit, use long form options when available

  #+ sed +#
  # - "sed --help". stdout
  #   "--expression=script" (no "=" required) (use "=" for uniformity)
  #   "--silent"

  _BINARY_NAME=sed
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  else
    _BINARY_OPTION=--expression=script
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION=--silent
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi
  #- sed -#

  # NOTE:
  # - unlike my usual method of checking for binary availability & failing if
  #   what's needed isn't found, this script deliberately substitutes "wmctrl"
  #   with "false" so that all information gathering, calculations, &
  #   information dump are performed

  #+ wmctrl +#
  # - "wmctrl --help". stdout
  #  "-i" (no long form. no other options)
  #  "-r <WIN> -e <MVARG>" (no long form)
  #  "-a <WIN>" (no long form)

  _BINARY_NAME=wmctrl
  _BINARY_HELP=$(echo $($_BINARY_NAME --help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _BINARY_WMCTRL=false
  else
    _BINARY_WMCTRL=$_BINARY_NAME

    _BINARY_OPTION=-i
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-r <WIN> -e <MVARG>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION="-a <WIN>"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi
  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  #- wmctrl -#

  #+ xprop +#
  # - "xprop -help". stderr
  # - "xprop -help 2>&1". stdout
  #   "-id id" (no long form)
  #   "-root" (no long form. no other options)

  _BINARY_NAME=xprop
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  else
    _BINARY_OPTION="-id id"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi

    _BINARY_OPTION=-root
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi
  #- xprop -#

  #+ xwininfo +#
  # - "xwininfo -help". stderr
  # - "xwininfo -help 2>&1 ". stdout
  #   "-id windowid" (no long form)

  _BINARY_NAME=xwininfo
  _BINARY_HELP=$(echo $($_BINARY_NAME -help 2>&1))
  if [[ $_BINARY_HELP =~ "command not found" ]]
  then
    _show_error "required binary \"$_BINARY_NAME\" not found"
  else
    _BINARY_OPTION="-id windowid"
    if [[ ! " $_BINARY_HELP " =~ " $_BINARY_OPTION " ]]
    then
      _show_error \""$_BINARY_NAME\" does not support \"$_BINARY_OPTION\""
    fi
  fi
  #- xwininfo -#

  _eko_iod "#- _binary_validate_setup -#"
}

function _builtin_validate_setup()
{
  _eko_iod "#+ _builtin_validate_setup +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BUILTIN_HELP
  # _BUILTIN_NAME
  # _BUILTIN_OPTION
  # _OPTIONS_READ (read options, not script options)

  # binaries:
  # (none)

  # builtins:
  # echo
  # read

  # NOTE:
  # - rather than test a given builtin's version (or more accurately, test a
  #   given version of bash itself) in hopes of figuring out which features it
  #   supports, test its supported feature set directly. not only is this much
  #   simpler to do, it's possible to test only those features that are
  #   explicitly used in the script
  # - how? get the builtin to dump its embedded help text & parse the result
  # - this can be used as a dual test. no help text = unsupported builtin,
  #   otherwise parse the help text for descriptions of specific features

  #+ read +#
  # - "help read". stdout
  #   "-r"
  # - called in "function _pathnames_scan"
  # - _OPTIONS_READ is set

  _BUILTIN_NAME=read
  _BUILTIN_HELP=$(echo $(help $_BUILTIN_NAME 2>&1))
  if [[ $_BUILTIN_HELP =~ "no help topics match" ]]
  then
    _show_error "required builtin \"$_BUILTIN_NAME\" not supported"
  else
    _BUILTIN_OPTION=-r
    if [[ " $_BUILTIN_HELP " =~ " $_BUILTIN_OPTION " ]]
    then
      _OPTIONS_READ=$_BUILTIN_OPTION
      _eko_pv \$_OPTIONS_READ: \""$_OPTIONS_READ\""
    else
      _show_error \""$_BUILTIN_NAME\" does not support \"$_BUILTIN_OPTION\""
    fi
  fi
  #- read -#

  _eko_iod "#- _builtin_validate_setup -#"
}

function _coordinates_calculate()
{
  _eko_iod "#+ _coordinates_calculate +#"

  # functions:
  # _coordinates_user_specified
  # _eko_iod
  # _show_help

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTION_WINDOW_COORDINATES
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - "function _coordinates_calculate" & "function _coordinates_validate"
  #   share identical calculations for the 4 corners

  # NOTE:
  # - there are 9 pre-defined coordinates (3x3 grid), 1 "do not move"
  #   coordinate (for use with "-r, --raise"), & 1 user-specified coordinate

  case $_OPTION_WINDOW_COORDINATES in
    ( ul ) # Upper/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( uc ) # Upper/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( ur ) # Upper/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      _COORDINATE_Y=$_WORKAREA_BORDER_T
    ;;
    ( ml ) # Middle/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( mc ) # Middle/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( mr ) # Middle/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      # - $((expression))
      _COORDINATE_Y=$(( ( $_NET_DESKTOP_GEOMETRY_H + $_WORKAREA_BORDER_T  - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B ) / 2 ))
    ;;
    ( bl ) # Bottom/Left
      _COORDINATE_X=$_WORKAREA_BORDER_L
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( bc ) # Bottom/Center
      # - $((expression))
      _COORDINATE_X=$(( ( $_NET_DESKTOP_GEOMETRY_W + $_WORKAREA_BORDER_L  - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R ) / 2 ))
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( br ) # Bottom/Right
      # - $((expression))
      _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
      # - $((expression))
      _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
    ;;
    ( same ) # Same (unchanged) coordinates. aka: do not move
      _COORDINATE_X=-1
      _COORDINATE_Y=-1
    ;;
    ( *,* ) # user specified coordinates
      _coordinates_user_specified
    ;;
    ( * )
      _show_help
    ;;
  esac

  _eko_iod "#- _coordinates_calculate -#"
}

function _coordinates_force()
{
  _eko_iod "#+ _coordinates_force +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _get_net_desktop_geometry_cardinal

  # variables:
  # _BINARY_WMCTRL
  # _COMMAND
  # _CORNERS
  # _NET_CLIENT_LIST_WINDOW
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo

  _get_net_desktop_geometry_cardinal

  for _OPTION_WINDOW_ID in $_NET_CLIENT_LIST_WINDOW
  do
    _OUTPUT_XWININFO_ID=$(xwininfo -id $_OPTION_WINDOW_ID)

    # - remove everything else. why? there's a non-zero chance that the
    #   plus/minus pair could be in the window title (think: web browser)
    _CORNERS=$(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Corners: \(.*\) -geometry.*/\1/g')

    # - go a bit overkill:
    #   "--" & "+-" are certain
    #   "++" & "-+" are "because I can"
    if [[ $_CORNERS =~ .*[-+][-+].* ]]
    then
      _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""
      _eko_pv \$_CORNERS: \""$_CORNERS\""

      # - don't be fancy. simply place window at X/Y of 0/0
      # - slight problem with this approach. some applications (hello
      #   TigerVNC) don't report (or improperly report) their window
      #   decorations. if window size is is larger than desktop or workspace
      #   size, the titlebar would be unreachable
      #_COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,0,0,-1,-1"

      # - on second thought, be slightly fancy
      # - place window (using its raw X/Y dimensions. aka: ignore any
      #   decorations) with its top/left corner in overall desktop center (not
      #   workarea center). this way the titlebar can be grabbed, even
      #   oddballs like TigerVNC, with minimal calculations
      # - this is a simple rescue operation. all that's needed is to make
      #   unreachable windows reachable. the user can manipulate things later
      # - $((expression))
      _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_NET_DESKTOP_GEOMETRY_W / 2 )),$(( $_NET_DESKTOP_GEOMETRY_H / 2 )),-1,-1"

      _eko_pv command: \""$_COMMAND\""

      # - move window if possible
      $_COMMAND
    fi
  done

  _eko_iod "#- _coordinates_force -#"
}

function _coordinates_kludge()
{
  _eko_iod "#+ _coordinates_kludge +#"

  # functions:
  # _eko_pv
  # _eko_iod

  # variables:
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_NAME_UTF8_STRING

  # binaries:
  # (none)

  # builtins:
  # (none)

  # - the regex must be *outside* the doublequotes
  # - note the extra trailing doublequote on the rhs. that's from the window's
  #   titlebar text string itself
  if [[ $_NET_WM_NAME_UTF8_STRING =~ .*" - TigerVNC\""$ ]]
  then
    # - dimensions of left & top decorations
    # - seems most likely for other windows as well. if not, this routine is
    #   already in place & quite simple to update
    _KLUDGE_X=$_NET_FRAME_EXTENTS_L
    _KLUDGE_Y=$_NET_FRAME_EXTENTS_T
  else
    # - defaults
    _KLUDGE_X=0
    _KLUDGE_Y=0
  fi

  _eko_pv \$_KLUDGE_X: \""$_KLUDGE_X\""
  _eko_pv \$_KLUDGE_Y: \""$_KLUDGE_Y\""

  _eko_iod "#- _coordinates_kludge -#"
}

function _coordinates_user_specified()
{
  _eko_iod "#+ _coordinates_user_specified +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COORDINATE_X
  # _COORDINATE_Y
  # _OPTION_WINDOW_COORDINATES

  # binaries:
  # (none)

  # builtins:
  # (none)

  # - ${parameter/pattern/string}
  _COORDINATE_X=${_OPTION_WINDOW_COORDINATES/,*/}
  # - ${parameter/pattern/string}
  _COORDINATE_Y=${_OPTION_WINDOW_COORDINATES/*,/}

  # - interpret "-c ,Y" as "-c -1,Y"
  # - ${parameter:=word}
  _COORDINATE_X=${_COORDINATE_X:=-1}
  # - interpret "-c X," as "-c X,-1"
  # - ${parameter:=word}
  _COORDINATE_Y=${_COORDINATE_Y:=-1}

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_user_specified -#"
}

function _coordinates_validate()
{
  _eko_iod "#+ _coordinates_validate +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _show_error

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _COORDINATE_X
  # _COORDINATE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # NOTE:
  # - "function _coordinates_calculate" & "function _coordinates_validate"
  #   share identical calculations for the 4 corners

  #+ error exits +#

  # - (1/2)
  # - non-numeric X coordinate?
  # - negative included
  if [[ ! $_COORDINATE_X =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric X coordinate \"$_COORDINATE_X\" specified"
  fi

  # - (2/2)
  # - non-numeric Y coordinate?
  # - negative included
  if [[ ! $_COORDINATE_Y =~ ^-?[0-9]+$ ]]
  then
    _show_error "non-numeric Y coordinate \"$_COORDINATE_Y\" specified"
  fi

  #- error exits -#

  #+ force to fits +#

  # - (1/4)
  # - force X coordinate to fit within usable or overall desktop X
  # - left (special case: -1)
  if [[ $_COORDINATE_X -lt $_WORKAREA_BORDER_L ]] \
  && [[ $_COORDINATE_X -ne -1 ]]
  then
    _COORDINATE_X=$_WORKAREA_BORDER_L
  fi

  # - (2/4)
  # - force X coordinate to fit within usable or overall desktop X
  # - right
  # - $((expression))
  if [[ $(( $_COORDINATE_X + $_WINDOW_DECORATED_X + $_WORKAREA_BORDER_R )) -gt $_NET_DESKTOP_GEOMETRY_W ]]
  then
    # - $((expression))
    _COORDINATE_X=$((   $_NET_DESKTOP_GEOMETRY_W                        - $_WINDOW_DECORATED_X - $_WORKAREA_BORDER_R       ))
  fi

  # - (3/4)
  # - force Y coordinate to fit within usable or overall desktop Y
  # - top (special case: -1)
  if [[ $_COORDINATE_Y -lt $_WORKAREA_BORDER_T ]] \
  && [[ $_COORDINATE_Y -ne -1 ]]
  then
    _COORDINATE_Y=$_WORKAREA_BORDER_T
  fi

  # - (4/4)
  # - force Y coordinate to fit within usable or overall desktop Y
  # - bottom
  # - $((expression))
  if [[ $(( $_COORDINATE_Y + $_WINDOW_DECORATED_Y + $_WORKAREA_BORDER_B )) -gt $_NET_DESKTOP_GEOMETRY_H ]]
  then
    # - $((expression))
    _COORDINATE_Y=$((   $_NET_DESKTOP_GEOMETRY_H                        - $_WINDOW_DECORATED_Y - $_WORKAREA_BORDER_B       ))
  fi

  #- force to fits -#

  #+ tweaks +#

  # - tweak X position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  # - simply set field to "-1" if maximized
  if $_BOOLEAN_MAXIMIZED_X
  then
    _COORDINATE_X=-1
  fi

  # - tweak Y position if required by _NET_WM_STATE_MAXIMIZED_* restrictions
  # - simply set field to "-1" if maximized
  if $_BOOLEAN_MAXIMIZED_Y
  then
    _COORDINATE_Y=-1
  fi

  #- tweaks -#

  _eko_pv \$_COORDINATE_X: \""$_COORDINATE_X\""
  _eko_pv \$_COORDINATE_Y: \""$_COORDINATE_Y\""

  _eko_iod "#- _coordinates_validate -#"
}

function _eko_iod()
{
  #+ _eko_iod +#

  # functions:
  # (none)

  # variables:
  # #
  # @
  # FUNCNAME (single dimension indexed array)
  # _BOOLEAN_DEBUG

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "$(( ${#FUNCNAME[@]} - 3 ))"? to account for main, parent, current
  # - pay special attention to the "*" in "%*s". it's part of the magic

  if $_BOOLEAN_DEBUG
  then
    # - fast & fancy indenting/"outdenting"
    # - $((expression))
    # - ${#parameter}
    printf "%*s" $(( ${#FUNCNAME[@]} - 3 ))
    echo "$@"
  fi

  #- _eko_iod -#
}

function _eko_ps()
{
  #+ _eko_ps +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "%26s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%26s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_ps -#
}

function _eko_ps_en()
{
  #+ _eko_ps_en +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_STDOUT

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "%26s "? to simplify setting column width in stdout reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_STDOUT
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%26s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_ps_en -#
}

function _eko_pv()
{
  #+ _eko_pv +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "%34s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%34s " "$1"
    fi
    shift
    echo "$@"
  fi

  #- _eko_pv -#
}

function _eko_pv_en()
{
  #+ _eko_pv_en +#

  # functions:
  # (none)

  # variables:
  # 1
  # @
  # _BOOLEAN_VERBOSE

  # binaries:
  # (none)

  # builtins:
  # echo
  # printf

  # NOTE:
  # - why "%34s "? to simplify setting column width in verbose reports. a
  #   single change here affects the output globally
  # - unformatted (non-columnized) output is now supported. simply pass "" as
  #   the first parameter

  if $_BOOLEAN_VERBOSE
  then
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $1 ]]
    then
      printf "%34s " "$1"
    fi
    shift
    echo -en "$@"
  fi

  #- _eko_pv_en -#
}

function _get_net_active_window_window()
{
  _eko_iod "#+ _get_net_active_window_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_ACTIVE_WINDOW_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - do we need this? I don't think so
  # - possibly in the future, though. as part of an alternate approach to
  #   implement "-l, --lower" & "-r, --raise"

  # IDEA:
  # - or do we? when it comes time to move the window, use this window id if
  #   none was specified. result: currently focussed window will be processed

  # - _NET_ACTIVE_WINDOW, WINDOW/32
  # "_NET_ACTIVE_WINDOW(WINDOW): window id # "
  # "0xa0005d"

  _NET_ACTIVE_WINDOW_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_ACTIVE_WINDOW(WINDOW): window id # /!d ; s/.* # //g')

  _eko_pv \$_NET_ACTIVE_WINDOW_WINDOW: \""$_NET_ACTIVE_WINDOW_WINDOW\""

  _eko_iod "#- _get_net_active_window_window -#"
}

function _get_net_client_list_window()
{
  _eko_iod "#+ _get_net_client_list_window +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CLIENT_LIST_WINDOW
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # - _NET_CLIENT_LIST, WINDOW[]/32
  # "_NET_CLIENT_LIST(WINDOW): window id # "
  # "0x1000008, "
  # etc, etc
  # "0x3600099"

  _NET_CLIENT_LIST_WINDOW=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d ; s/\(.* # \|,\)//g')

  _eko_pv \$_NET_CLIENT_LIST_WINDOW: \""$_NET_CLIENT_LIST_WINDOW\""

  _eko_iod "#- _get_net_client_list_window -#"
}

function _get_net_current_desktop_cardinal()
{
  _eko_iod "#+ _get_net_current_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - this is always an integer between 0 and _NET_NUMBER_OF_DESKTOPS - 1
  # - starts at "0" not "1"

  # - _NET_CURRENT_DESKTOP desktop, CARDINAL/32
  # "_NET_CURRENT_DESKTOP(CARDINAL) = "
  # "0"

  _NET_CURRENT_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_CURRENT_DESKTOP(CARDINAL) = /!d ; s/.* = //g')

  _eko_pv \$_NET_CURRENT_DESKTOP_CARDINAL: \""$_NET_CURRENT_DESKTOP_CARDINAL\""

  _eko_iod "#- _get_net_current_desktop_cardinal -#"
}

function _get_net_desktop_geometry_cardinal()
{
  _eko_iod "#+ _get_net_desktop_geometry_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_GEOMETRY_CARDINAL
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # - _NET_DESKTOP_GEOMETRY width, height, CARDINAL[2]/32
  # "_NET_DESKTOP_GEOMETRY(CARDINAL) = "
  # "1920, "
  # "1080"

  _NET_DESKTOP_GEOMETRY_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_GEOMETRY(CARDINAL) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_DESKTOP_GEOMETRY_CARDINAL: \""$_NET_DESKTOP_GEOMETRY_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_DESKTOP_GEOMETRY_W \
  _NET_DESKTOP_GEOMETRY_H \
  <<< \
  $_NET_DESKTOP_GEOMETRY_CARDINAL

  _eko_pv \$_NET_DESKTOP_GEOMETRY_W: \""$_NET_DESKTOP_GEOMETRY_W\""
  _eko_pv \$_NET_DESKTOP_GEOMETRY_H: \""$_NET_DESKTOP_GEOMETRY_H\""

  _eko_iod "#- _get_net_desktop_geometry_cardinal -#"
}

function _get_net_desktop_names_utf8_string()
{
  _eko_iod "#+ _get_net_desktop_names_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _COUNTER
  # _NET_CURRENT_DESKTOP_CARDINAL
  # _NET_DESKTOP_NAMES_UTF8_STRING
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ROOT
  # _POSITION_CURRENT
  # _POSITION_FINISH
  # _POSITION_START

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - do we need this? I don't think so
  # - keep it anyway. it's a good reference

  # NOTE:
  # - "function _get_net_current_desktop_cardinal" must precede this function
  #   since it acquires _NET_CURRENT_DESKTOP_CARDINAL which is used below

  # NOTE:
  # - unlike cardinal types, utf-8 requires special handling
  # - after quite a bit of experimenting, the following brute force method
  #   appears to work well enough for this particular case. if it's *not*
  #   performing on your system as expected, let me know so I can fix it
  # - method: preserve anything & everything *between* pairs of doublequotes,
  #   including the doublequotes themselves

  # TODO:
  # - possibly improve the logic so the loop exits when a match is found
  # ^ currently, it continues scanning $_NET_DESKTOP_NAMES_UTF8_STRING to the
  #   very end. this is completely harmless, but I'm a perfectionist :)
  # - conditional "break" if $_NET_DESKTOP_NAME_UTF8_STRING is set?

  # - _NET_DESKTOP_NAMES, UTF8_STRING[]
  # "_NET_DESKTOP_NAMES(UTF8_STRING) = "
  # ""I", "
  # ""II", "
  # ""III", "
  # ""IV", "
  # ""V", "
  # ""VI", "
  # ""VII", "
  # ""VIII""

  _NET_DESKTOP_NAMES_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_NAMES(UTF8_STRING) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_DESKTOP_NAMES_UTF8_STRING: \""$_NET_DESKTOP_NAMES_UTF8_STRING\""

  # IDEA:
  # - don't modify the original string
  # - go through its entire length character by character, looking for
  #   "doublequote" & "doublequote space doublequote"
  # - note the position of each type of match
  # - set $_NET_DESKTOP_NAME_UTF8_STRING from the appropriate segment of
  #   $_NET_DESKTOP_NAMES_UTF8_STRING
  # - requires $_NET_CURRENT_DESKTOP_CARDINAL

  # - be explicit for clarity
  _COUNTER=0
  _POSITION_CURRENT=0
  unset _POSITION_FINISH
  unset _POSITION_START

  # - ${#parameter}
  while [[ $_POSITION_CURRENT -lt ${#_NET_DESKTOP_NAMES_UTF8_STRING} ]] \
  && [[ $_COUNTER -le $_NET_CURRENT_DESKTOP_CARDINAL ]]
  do

    # - ${parameter:offset:length}
    if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:1} == \" ]]
    then
      # - ${parameter:offset:length}
      if [[ ${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_CURRENT:3} == \"\ \" ]]
      then
        _POSITION_FINISH=$_POSITION_CURRENT
      else
        # - $((expression))
        # - ${#parameter}
        if [[ $_POSITION_CURRENT -eq $(( ${#_NET_DESKTOP_NAMES_UTF8_STRING} - 1 )) ]]
        then
          _POSITION_FINISH=$_POSITION_CURRENT
        else
          _POSITION_START=$_POSITION_CURRENT
        fi
      fi
    fi

    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_POSITION_FINISH ]] \
    && [[ -n $_POSITION_START ]]
    then
      if [[ $_COUNTER -eq $_NET_CURRENT_DESKTOP_CARDINAL ]]
      then
        # - ${parameter:offset:length}
        # - $((expression))
        _NET_DESKTOP_NAME_UTF8_STRING=${_NET_DESKTOP_NAMES_UTF8_STRING:$_POSITION_START:$(( $_POSITION_FINISH - $_POSITION_START + 1 ))}
      fi

      unset _POSITION_FINISH
      unset _POSITION_START
      # - ((expression))
      # - id++ = variable post-increment
      ((_COUNTER++))
    fi

    # - ((expression))
    # - id++ = variable post-increment
    ((_POSITION_CURRENT++))
  done

  _eko_pv \$_NET_DESKTOP_NAME_UTF8_STRING: \""$_NET_DESKTOP_NAME_UTF8_STRING\""

  _eko_iod "#- _get_net_desktop_names_utf8_string -#"
}

function _get_net_desktop_viewport_cardinal()
{
  _eko_iod "#+ _get_net_desktop_viewport_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _NET_DESKTOP_VIEWPORT_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - do we need this? I don't think so

  # NOTE:
  # - "function _get_net_current_desktop_cardinal" must precede this function
  #   since it acquires _NET_CURRENT_DESKTOP_CARDINAL which is used below

  # - _NET_DESKTOP_VIEWPORT x, y, CARDINAL[][2]/32
  # "_NET_DESKTOP_VIEWPORT(CARDINAL) = "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0, "
  # "0, 0"

  _NET_DESKTOP_VIEWPORT_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_DESKTOP_VIEWPORT(CARDINAL) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_DESKTOP_VIEWPORT_CARDINAL: \""$_NET_DESKTOP_VIEWPORT_CARDINAL\""

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod
    # _eko_pv

    # variables:
    # @
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_VIEWPORT_X
    # _NET_DESKTOP_VIEWPORT_Y
    # _OPTIONS_READ (read options, not script options)
    # _XX0

    # binaries:
    # (none)

    # builtins:
    # (none)
    # read

    # - there are 2 fields for each desktop
    # - $((expression))
    shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 2 ))

    read $_OPTIONS_READ -- \
    _NET_DESKTOP_VIEWPORT_X \
    _NET_DESKTOP_VIEWPORT_Y \
    _XX0 \
    <<< \
    $@

    _eko_pv \$_NET_DESKTOP_VIEWPORT_X: \""$_NET_DESKTOP_VIEWPORT_X\""
    _eko_pv \$_NET_DESKTOP_VIEWPORT_Y: \""$_NET_DESKTOP_VIEWPORT_Y\""

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_DESKTOP_VIEWPORT_CARDINAL

  _eko_iod "#- _get_net_desktop_viewport_cardinal -#"
}

function _get_net_frame_extents_cardinal()
{
  _eko_iod "#+ _get_net_frame_extents_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_CARDINAL
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo
  # read

  # - _NET_FRAME_EXTENTS, left, right, top, bottom, CARDINAL[4]/32
  # "_NET_FRAME_EXTENTS(CARDINAL) = "
  # "1, "
  # "1, "
  # "22, "
  # "6"

  _NET_FRAME_EXTENTS_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_FRAME_EXTENTS(CARDINAL) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_FRAME_EXTENTS_CARDINAL: \""$_NET_FRAME_EXTENTS_CARDINAL\""

  read $_OPTIONS_READ -- \
  _NET_FRAME_EXTENTS_L \
  _NET_FRAME_EXTENTS_R \
  _NET_FRAME_EXTENTS_T \
  _NET_FRAME_EXTENTS_B \
  <<< \
  $_NET_FRAME_EXTENTS_CARDINAL

  _eko_pv \$_NET_FRAME_EXTENTS_L: \""$_NET_FRAME_EXTENTS_L\""
  _eko_pv \$_NET_FRAME_EXTENTS_R: \""$_NET_FRAME_EXTENTS_R\""
  _eko_pv \$_NET_FRAME_EXTENTS_T: \""$_NET_FRAME_EXTENTS_T\""
  _eko_pv \$_NET_FRAME_EXTENTS_B: \""$_NET_FRAME_EXTENTS_B\""

  _eko_iod "#- _get_net_frame_extents_cardinal -#"
}

function _get_net_number_of_desktops_cardinal()
{
  _eko_iod "#+ _get_net_number_of_desktops_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_NUMBER_OF_DESKTOPS_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - starts at "1" not "0"

  # - _NET_NUMBER_OF_DESKTOPS, CARDINAL/32
  # "_NET_NUMBER_OF_DESKTOPS(CARDINAL) = "
  # "8"

  _NET_NUMBER_OF_DESKTOPS_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_NUMBER_OF_DESKTOPS(CARDINAL) = /!d ; s/.* = //g')

  _eko_pv \$_NET_NUMBER_OF_DESKTOPS_CARDINAL: \""$_NET_NUMBER_OF_DESKTOPS_CARDINAL\""

  _eko_iod "#- _get_net_number_of_desktops_cardinal -#"
}

function _get_net_wm_desktop_cardinal()
{
  _eko_iod "#+ _get_net_wm_desktop_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_DESKTOP_CARDINAL
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  _NET_WM_DESKTOP_CARDINAL=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_DESKTOP(CARDINAL) = /!d ; s/.* = //g')

  _eko_pv \$_NET_WM_DESKTOP_CARDINAL: \""$_NET_WM_DESKTOP_CARDINAL\""

  _eko_iod "#- _get_net_wm_desktop_cardinal -#"
}

function _get_net_wm_name_utf8_string()
{
  _eko_iod "#+ _get_net_wm_name_utf8_string +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_WM_NAME_UTF8_STRING
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - we need this for "function _coordinates_kludge"

  _NET_WM_NAME_UTF8_STRING=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_NAME(UTF8_STRING) = /!d ; s/.* = //g')

  _eko_pv \$_NET_WM_NAME_UTF8_STRING: \""$_NET_WM_NAME_UTF8_STRING\""

  _eko_iod "#- _get_net_wm_name_utf8_string -#"
}

function _get_net_wm_state_atom()
{
  _eko_iod "#+ _get_net_wm_state_atom +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _NET_WM_STATE_ATOM
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed

  # builtins:
  # echo

  # - _NET_WM_STATE, ATOM[]
  #   Possible atoms are:
  #   _NET_WM_STATE_MODAL, ATOM
  #   _NET_WM_STATE_STICKY, ATOM
  #   _NET_WM_STATE_MAXIMIZED_VERT, ATOM
  #   _NET_WM_STATE_MAXIMIZED_HORZ, ATOM
  #   _NET_WM_STATE_SHADED, ATOM
  #   _NET_WM_STATE_SKIP_TASKBAR, ATOM
  #   _NET_WM_STATE_SKIP_PAGER, ATOM
  #   _NET_WM_STATE_HIDDEN, ATOM
  #   _NET_WM_STATE_FULLSCREEN, ATOM
  #   _NET_WM_STATE_BELOW, ATOM
  #   _NET_WM_STATE_ABOVE, ATOM
  #   _NET_WM_STATE_BELOW, ATOM
  #   _NET_WM_STATE_DEMANDS_ATTENTION, ATOM

  _NET_WM_STATE_ATOM=$(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_STATE(ATOM) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_WM_STATE_ATOM: \""$_NET_WM_STATE_ATOM\""

  # - decipher window's state (horizontal &/or vertical maximized)
  # - doing so here is as good as anywhere else

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_HORZ " ]]
  then
    _BOOLEAN_MAXIMIZED_X=true
  else
    _BOOLEAN_MAXIMIZED_X=false
  fi

  if [[ " $_NET_WM_STATE_ATOM " =~ " _NET_WM_STATE_MAXIMIZED_VERT " ]]
  then
    _BOOLEAN_MAXIMIZED_Y=true
  else
    _BOOLEAN_MAXIMIZED_Y=false
  fi

  _eko_pv \$_BOOLEAN_MAXIMIZED_X: \""$_BOOLEAN_MAXIMIZED_X\""
  _eko_pv \$_BOOLEAN_MAXIMIZED_Y: \""$_BOOLEAN_MAXIMIZED_Y\""

  _eko_iod "#- _get_net_wm_state_atom -#"
}

function _get_net_workarea_cardinal()
{
  _eko_iod "#+ _get_net_workarea_cardinal +#"

  # functions:
  # _eko_iod
  # _eko_pv
  # _sub_function

  # variables:
  # _NET_WORKAREA_CARDINAL
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # sed

  # builtins:
  # echo

  # NOTE:
  # - "function _get_net_current_desktop_cardinal" must precede this function
  #   since it acquires _NET_CURRENT_DESKTOP_CARDINAL which is used below

  # - _NET_WORKAREA, x, y, width, height CARDINAL[][4]/32
  # "_NET_WORKAREA(CARDINAL) = "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056, "
  # "0, 0, 1852, 1056"

  _NET_WORKAREA_CARDINAL=$(echo "$_OUTPUT_XPROP_ROOT" | sed --expression='/^_NET_WORKAREA(CARDINAL) = /!d ; s/\(.* = \|,\)//g')

  _eko_pv \$_NET_WORKAREA_CARDINAL: \""$_NET_WORKAREA_CARDINAL\""

  function _sub_function()
  {
    _eko_iod "#+ _sub_function +#"

    # functions:
    # _eko_iod
    # _eko_pv

    # variables:
    # @
    # _BOOLEAN_OVERALL
    # _NET_CURRENT_DESKTOP_CARDINAL
    # _NET_DESKTOP_GEOMETRY_H
    # _NET_DESKTOP_GEOMETRY_W
    # _NET_WORKAREA_CARDINAL
    # _NET_WORKAREA_H
    # _NET_WORKAREA_W
    # _NET_WORKAREA_X
    # _NET_WORKAREA_Y
    # _OPTIONS_READ (read options, not script options)
    # _WORKAREA_BORDER_B
    # _WORKAREA_BORDER_L
    # _WORKAREA_BORDER_R
    # _WORKAREA_BORDER_T
    # _XX0

    # binaries:
    # (none)

    # builtins:
    # (none)
    # read

    # - there are 4 fields for each desktop
    # - $((expression))
    shift $(( $_NET_CURRENT_DESKTOP_CARDINAL * 4 ))

    read $_OPTIONS_READ -- \
    _NET_WORKAREA_X \
    _NET_WORKAREA_Y \
    _NET_WORKAREA_W \
    _NET_WORKAREA_H \
    _XX0 \
    <<< \
    $@

    _eko_pv \$_NET_WORKAREA_X: \""$_NET_WORKAREA_X\""
    _eko_pv \$_NET_WORKAREA_Y: \""$_NET_WORKAREA_Y\""
    _eko_pv \$_NET_WORKAREA_W: \""$_NET_WORKAREA_W\""
    _eko_pv \$_NET_WORKAREA_H: \""$_NET_WORKAREA_H\""

    if $_BOOLEAN_OVERALL
    then
      _WORKAREA_BORDER_L=0
      _WORKAREA_BORDER_R=0
      _WORKAREA_BORDER_T=0
      _WORKAREA_BORDER_B=0
    else
      _WORKAREA_BORDER_L=$_NET_WORKAREA_X
      # - $((expression))
      _WORKAREA_BORDER_R=$(( $_NET_DESKTOP_GEOMETRY_W - $_NET_WORKAREA_W - $_NET_WORKAREA_X ))
      _WORKAREA_BORDER_T=$_NET_WORKAREA_Y
      # - $((expression))
      _WORKAREA_BORDER_B=$(( $_NET_DESKTOP_GEOMETRY_H - $_NET_WORKAREA_H - $_NET_WORKAREA_Y ))
    fi

    _eko_pv \$_WORKAREA_BORDER_L: \""$_WORKAREA_BORDER_L\""
    _eko_pv \$_WORKAREA_BORDER_R: \""$_WORKAREA_BORDER_R\""
    _eko_pv \$_WORKAREA_BORDER_T: \""$_WORKAREA_BORDER_T\""
    _eko_pv \$_WORKAREA_BORDER_B: \""$_WORKAREA_BORDER_B\""

    # NOTE:
    # - keep this information for future reference

    # -   left: nothing
    # -  right: dock, xfce4-panel
    # -    top: nothing
    # - bottom: tint2
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1852,1056"
    # desktop borders (L,R,T,B): "0,68,0,24"

    # -   left: xfce4-panel
    # -  right: dock
    # -    top: nothing
    # - bottom: tint2
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1784,1056"
    # desktop borders (L,R,T,B): "68,68,0,24"

    # -   left: nothing
    # -  right: dock, xfce4-panel
    # -    top: tint2
    # - bottom: nothing
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1852,1056"
    # desktop borders (L,R,T,B): "0,68,24,0"

    # -   left: xfce4-panel
    # -  right: dock
    # -    top: tint2
    # - bottom: nothing
    #          desktop geometry: "1920,1080"
    #         workarea geometry: "1784,1056"
    # desktop borders (L,R,T,B): "68,68,24,0"

    _eko_iod "#- _sub_function -#"
  }

  _sub_function $_NET_WORKAREA_CARDINAL

  _eko_iod "#- _get_net_workarea_cardinal -#"
}

function _get_window_undecorated_geometry()
{
  _eko_iod "#+ _get_window_undecorated_geometry +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _OPTIONS_READ (read options, not script options)
  # _OPTION_WINDOW_ID
  # _OUTPUT_XWININFO_ID
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y

  # binaries:
  # sed
  # xwininfo

  # builtins:
  # echo
  # read

  # NOTE:
  # - "function _get_net_frame_extents_cardinal" must precede this function
  #   since it acquires _NET_FRAME_EXTENTS_* which are used below

  # - assign default value if unset
  # - ${parameter:=word}
  _OUTPUT_XWININFO_ID=${_OUTPUT_XWININFO_ID:=$(xwininfo -id $_OPTION_WINDOW_ID)}

  read $_OPTIONS_READ -- \
  _WINDOW_UNDECORATED_X \
  _WINDOW_UNDECORATED_Y \
  < \
  <(echo $_OUTPUT_XWININFO_ID | sed --expression='s/.*Width: \(.*\) Height: \(.*\) Depth:.*/\1 \2/g')

  _eko_pv \$_WINDOW_UNDECORATED_X: \""$_WINDOW_UNDECORATED_X\""
  _eko_pv \$_WINDOW_UNDECORATED_Y: \""$_WINDOW_UNDECORATED_Y\""

  # - calculate window's decorated geometry (undecorated + decorations)
  # - doing so here is as good as anywhere else

  # - $((expression))
  _WINDOW_DECORATED_X=$(( $_NET_FRAME_EXTENTS_L + $_WINDOW_UNDECORATED_X + $_NET_FRAME_EXTENTS_R ))
  # - $((expression))
  _WINDOW_DECORATED_Y=$(( $_NET_FRAME_EXTENTS_T + $_WINDOW_UNDECORATED_Y + $_NET_FRAME_EXTENTS_B ))

  _eko_pv \$_WINDOW_DECORATED_X: \""$_WINDOW_DECORATED_X\""
  _eko_pv \$_WINDOW_DECORATED_Y: \""$_WINDOW_DECORATED_Y\""

  _eko_iod "#- _get_window_undecorated_geometry -#"
}

function _parse_parameters()
{
  #+ _parse_parameters +#

  # functions:
  # _builtin_validate_setup
  # _binary_validate_setup
  # _coordinates_calculate
  # _coordinates_force
  # _coordinates_kludge
  # _coordinates_validate
  # _eko_iod
  # _eko_pv
  # _get_net_active_window_window
  # _get_net_client_list_window
  # _get_net_current_desktop_cardinal
  # _get_net_desktop_geometry_cardinal
  # _get_net_desktop_names_utf8_string
  # _get_net_desktop_viewport_cardinal
  # _get_net_frame_extents_cardinal
  # _get_net_number_of_desktops_cardinal
  # _get_net_wm_desktop_cardinal
  # _get_net_wm_name_utf8_string
  # _get_net_wm_state_atom
  # _get_net_workarea_cardinal
  # _get_window_undecorated_geometry
  # _pass_fail_by_window_id
  # _pass_fail_by_window_type
  # _set_window_position
  # _show_error
  # _show_help
  # _window_id_acquire

  # variables:
  # #
  # 1
  # 2
  # _BINARY_WMCTRL
  # _BOOLEAN_DEBUG
  # _BOOLEAN_DRYRUN
  # _BOOLEAN_FORCE
  # _BOOLEAN_OVERALL
  # _BOOLEAN_RAISE
  # _BOOLEAN_STDOUT
  # _BOOLEAN_VERBOSE
  # _OPTION_WINDOW_COORDINATES
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ROOT

  # binaries:
  # xprop

  # builtins:
  # (none)

  # NOTE:
  # - boolean variables are proper toggles

  # NOTE:
  # - _BOOLEAN_STDOUT is special. it's quite simple to set up initially

  # - _BOOLEAN_STDOUT
  # - companion functions: _eko_ps/_eko_ps_en
  # - default: true
  # - *not* toggled in while/do/done loop like the others
  # - immediately *after* the while/do/done loop _BOOLEAN_STDOUT is set to
  #   false if either $_BOOLEAN_DEBUG or $_BOOLEAN_VERBOSE are true

  #+ parameter defaults +#

  _BOOLEAN_DEBUG=false   # display
  _BOOLEAN_DRYRUN=false  # control
  _BOOLEAN_FORCE=false   # action
  _BOOLEAN_OVERALL=false # control
  _BOOLEAN_RAISE=false   # action
  _BOOLEAN_STDOUT=true   # display
  _BOOLEAN_VERBOSE=false # display
  unset _OPTION_WINDOW_COORDINATES
  unset _OPTION_WINDOW_ID

  #- parameter defaults -#

  while [[ $# -gt 0 ]]
  do
    case $1 in
      ( -c \
      | --coordinates )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        # - ${parameter:offset:length}
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]] \
        && [[ ${2:1:1} != [0-9] ]]
        then
          _show_error "window coordinates not specified"
        else
          case $2 in
            ( ul \
            | uc \
            | ur \
            | ml \
            | mc \
            | mr \
            | bl \
            | bc \
            | br \
            | same \
            | *,* )
              _OPTION_WINDOW_COORDINATES=$2
            ;;
            ( * )
              _show_error "invalid window coordinates \"$2\" specified"
            ;;
          esac
        fi
        shift
      ;;
      ( -D \
      | --dry-run )
        if $_BOOLEAN_DRYRUN
        then
          _BOOLEAN_DRYRUN=false
        else
          _BOOLEAN_DRYRUN=true
        fi
      ;;
      ( -f \
      | --force )
        if $_BOOLEAN_FORCE
        then
          _BOOLEAN_FORCE=false
        else
          _BOOLEAN_FORCE=true
        fi
      ;;
      ( -id )
        # - ${parameter:offset:length}
        # - "-z string" = true if the length of string is zero
        if [[ ${2:0:1} == - ]] \
        || [[ -z $2 ]]
        then
          _show_error "Window ID not specified"
        else
          # NOTE:
          # - "function _pass_fail_by_window_id" thoroughly tests this variable
          _OPTION_WINDOW_ID=$2
        fi
        shift
      ;;
      ( -o \
      | --overall )
        if $_BOOLEAN_OVERALL
        then
          _BOOLEAN_OVERALL=false
        else
          _BOOLEAN_OVERALL=true
        fi
      ;;
      ( -r \
      | --raise )
        if $_BOOLEAN_RAISE
        then
          _BOOLEAN_RAISE=false
        else
          _BOOLEAN_RAISE=true
        fi
      ;;
      ( -d \
      | --debug )
        if $_BOOLEAN_DEBUG
        then
          _BOOLEAN_DEBUG=false
        else
          _BOOLEAN_DEBUG=true
        fi
      ;;
      ( -v \
      | --verbose )
        if $_BOOLEAN_VERBOSE
        then
          _BOOLEAN_VERBOSE=false
        else
          _BOOLEAN_VERBOSE=true
        fi
      ;;
      ( "-?" \
      | -h \
      | --help ) # -? must be "-?" or it matches "-<any single character>"
        _show_help
      ;;
      ( -* )
        _show_error "invalid option \"$1\" specified"
      ;;
      ( * )
        _show_error "invalid parameter \"$1\" specified"
      ;;
    esac
    shift
  done

  #- _parse_parameters -#

  # - technically in the wrong spot, but it's a chicken or egg scenario
  _eko_iod "#+ _parse_parameters +#"

  # NOTE:
  # - order of operations of the following 2 functions is unimportant

  # - validate the existence & required options of system builtins
  # - while we're at it, set up the options for the various builtins if needed
  _builtin_validate_setup

  # - validate the existence & required options of system binaries
  # - while we're at it, set up the options for the various binaries if needed
  _binary_validate_setup

  #+ parameter settings (in (mostly) proper order of operation) +#

  # NOTE:
  # - the following blocks are *very* sensitive to order of operations

  if $_BOOLEAN_DEBUG \
  || $_BOOLEAN_VERBOSE
  then
    _BOOLEAN_STDOUT=false  # display
  fi

  # - assign default value if unset
  # - ${parameter:=word}
  _OPTION_WINDOW_COORDINATES=${_OPTION_WINDOW_COORDINATES:=same}

  # - cheap & easy way to do a dry-run
  if $_BOOLEAN_DRYRUN
  then
    _BINARY_WMCTRL=true
  fi

  _eko_pv \$_BINARY_WMCTRL: \""$_BINARY_WMCTRL\""
  _eko_pv \$_BOOLEAN_DEBUG: \""$_BOOLEAN_DEBUG\""
  _eko_pv \$_BOOLEAN_DRYRUN: \""$_BOOLEAN_DRYRUN\""
  _eko_pv \$_BOOLEAN_FORCE: \""$_BOOLEAN_FORCE\""
  _eko_pv \$_BOOLEAN_OVERALL: \""$_BOOLEAN_OVERALL\""
  _eko_pv \$_BOOLEAN_RAISE: \""$_BOOLEAN_RAISE\""
  _eko_pv \$_BOOLEAN_STDOUT: \""$_BOOLEAN_STDOUT\""
  _eko_pv \$_BOOLEAN_VERBOSE: \""$_BOOLEAN_VERBOSE\""
  _eko_pv \$_OPTION_WINDOW_COORDINATES: \""$_OPTION_WINDOW_COORDINATES\""
  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

  #- parameter settings (in (mostly) proper order of operation) -#

  # - and so it begins
  # - for a change, I'm going to try doing as much as possible from here to
  #   the end of this function. buckle up, this could be an interesting read

  # - we'll be using this information for a lot of things (several of the
  #   _get_net_* functions). just grab everything once
  _OUTPUT_XPROP_ROOT=$(xprop -root)

  # - get full list of Window IDs
  _get_net_client_list_window

  # NOTE:
  # - "-f, --force" only needs the window id list. it does everything else on
  #   its own. crudely, but it doesn't need to be fancy

  if $_BOOLEAN_FORCE
  then
    _coordinates_force
  else
    # - "-n string" = true if the length of string is non-zero
    if [[ -n $_OPTION_WINDOW_ID ]]
    then
      # - validate Window ID if it was specified on the commandline
      _pass_fail_by_window_id
    else
      # - acquire Window ID via point'n'click
      # - requires no validation
      _window_id_acquire
    fi

    # NOTE:
    # - $_OUTPUT_XPROP_ID has been set in either
    #   "function _pass_fail_by_window_id" or "function _window_id_acquire" at
    #   this point
    # - we'll be using this information for a lot of things (several of the
    #   _get_net_* functions). just grab everything once

    # - pass/fail by window type
    _pass_fail_by_window_type

    _get_net_active_window_window

    # - precedes: _get_net_desktop_names_utf8_string
    # - precedes: _get_net_desktop_viewport_cardinal
    # - precedes: _get_net_workarea_cardinal
    _get_net_current_desktop_cardinal

    # - precedes: _get_net_workarea_cardinal
    _get_net_desktop_geometry_cardinal

    # - succeeds: _get_net_current_desktop_cardinal
    _get_net_desktop_names_utf8_string

    # - succeeds: _get_net_current_desktop_cardinal
    _get_net_desktop_viewport_cardinal

    _get_net_number_of_desktops_cardinal

    # - succeeds: _get_net_current_desktop_cardinal
    # - succeeds: _get_net_desktop_geometry_cardinal
    # - precedes: _coordinates_kludge
    _get_net_workarea_cardinal

    # - precedes: _get_window_undecorated_geometry
    _get_net_frame_extents_cardinal

    _get_net_wm_desktop_cardinal

    _get_net_wm_state_atom

    # - precedes: _coordinates_kludge
    _get_net_wm_name_utf8_string

    # - succeeds: _get_net_frame_extents_cardinal
    _get_window_undecorated_geometry

    # - succeeds: _get_net_wm_name_utf8_string
    # - succeeds: _get_net_workarea_cardinal
    _coordinates_kludge

    _coordinates_calculate

    _coordinates_validate

    _set_window_position
  fi

  # - and so it ends (so far)

  _eko_iod "#- _parse_parameters -#"
}

function _pass_fail_by_window_id()
{
  _eko_iod "#+ _pass_fail_by_window_id +#"

  # functions:
  # _eko_iod
  # _show_error

  # variables:
  # _NET_CLIENT_LIST_WINDOW
  # _OPTION_WINDOW_ID

  # binaries:
  # (none)

  # builtins:
  # (none)

  if [[ ! " $_NET_CLIENT_LIST_WINDOW " =~ " $_OPTION_WINDOW_ID " ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" specified"
  fi

  _eko_iod "#- _pass_fail_by_window_id -#"
}

function _pass_fail_by_window_type()
{
  _eko_iod "#+ _pass_fail_by_window_type +#"

  # functions:
  # _eko_iod
  # _show_error

  # variables:
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID

  # binaries:
  # sed
  # xprop

  # builtins:
  # echo

  # NOTE:
  # - the root window itself
  #   "^_NET_CLIENT_LIST(WINDOW): window id # "
  # - blackbox/fluxbox/openbox dock, likely others
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DOCK.*"
  # - notify-send notification popup, likely others
  #   "^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NOTIFICATION.*"

  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID)

  # - "-n string" = true if the length of string is non-zero
  if [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_CLIENT_LIST(WINDOW): window id # /!d') ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (root window) specified"
  # - "-n string" = true if the length of string is non-zero
  elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_DOCK.*/!d') ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (dock) specified"
  # - "-n string" = true if the length of string is non-zero
  elif [[ -n $(echo "$_OUTPUT_XPROP_ID" | sed --expression='/^_NET_WM_WINDOW_TYPE(ATOM) = .*_NET_WM_WINDOW_TYPE_NOTIFICATION.*/!d') ]]
  then
    _show_error "invalid Window ID \"$_OPTION_WINDOW_ID\" (notification popup) specified"
  fi

  _eko_iod "#- _pass_fail_by_window_type -#"
}

function _set_window_position()
{
  _eko_iod "#+ _set_window_position +#"

  # functions:
  # _eko_iod
  # _eko_pv

  # variables:
  # _BINARY_WMCTRL
  # _BOOLEAN_MAXIMIZED_X (window state. not script option)
  # _BOOLEAN_MAXIMIZED_Y (window state. not script option)
  # _BOOLEAN_RAISE
  # _COMMAND
  # _COORDINATE_X
  # _COORDINATE_Y
  # _KLUDGE_X
  # _KLUDGE_Y
  # _NET_DESKTOP_GEOMETRY_H
  # _NET_DESKTOP_GEOMETRY_W
  # _NET_DESKTOP_NAME_UTF8_STRING
  # _NET_FRAME_EXTENTS_B
  # _NET_FRAME_EXTENTS_L
  # _NET_FRAME_EXTENTS_R
  # _NET_FRAME_EXTENTS_T
  # _NET_WM_NAME_UTF8_STRING
  # _NET_WORKAREA_H
  # _NET_WORKAREA_W
  # _OPTION_WINDOW_ID
  # _WINDOW_DECORATED_X
  # _WINDOW_DECORATED_Y
  # _WINDOW_UNDECORATED_X
  # _WINDOW_UNDECORATED_Y
  # _WORKAREA_BORDER_B
  # _WORKAREA_BORDER_L
  # _WORKAREA_BORDER_R
  # _WORKAREA_BORDER_T

  # binaries:
  # (none)

  # builtins:
  # (none)

  # - first: the command to move the window
  # - "-i -r" order is important
  # - experimented with "-b add,above". something's not going as expected so
  #   it's not used in $_COMMAND below. instead, do a second call to raise the
  #   window
  # - $((expression))
  _COMMAND="$_BINARY_WMCTRL -i -r $_OPTION_WINDOW_ID -e 0,$(( $_COORDINATE_X + $_KLUDGE_X )),$(( $_COORDINATE_Y + $_KLUDGE_Y )),-1,-1"

  _eko_pv "window id:" \""$_OPTION_WINDOW_ID\""
  _eko_pv "window name:" \""$_NET_WM_NAME_UTF8_STRING\""
  _eko_pv "desktop name:" \""$_NET_DESKTOP_NAME_UTF8_STRING\""
  _eko_pv "desktop geometry:" \""$_NET_DESKTOP_GEOMETRY_W,$_NET_DESKTOP_GEOMETRY_H\""
  _eko_pv "workarea geometry:" \""$_NET_WORKAREA_W,$_NET_WORKAREA_H\""
  _eko_pv "desktop borders (L,R,T,B):" \""$_WORKAREA_BORDER_L,$_WORKAREA_BORDER_R,$_WORKAREA_BORDER_T,$_WORKAREA_BORDER_B\""
  _eko_pv "window X,Y (undecorated):" \""$_WINDOW_UNDECORATED_X,$_WINDOW_UNDECORATED_Y\""
  _eko_pv "window decorations (L,R,T,B):" \""$_NET_FRAME_EXTENTS_L,$_NET_FRAME_EXTENTS_R,$_NET_FRAME_EXTENTS_T,$_NET_FRAME_EXTENTS_B\""
  _eko_pv "window X,Y (decorated):" \""$_WINDOW_DECORATED_X,$_WINDOW_DECORATED_Y\""
  _eko_pv "window maximized X,Y:" \""$_BOOLEAN_MAXIMIZED_X,$_BOOLEAN_MAXIMIZED_Y\""
  _eko_pv "new X,Y coordinates:" \""$_COORDINATE_X,$_COORDINATE_Y\""
  _eko_pv "X,Y kludges:" \""$_KLUDGE_X,$_KLUDGE_Y\""
  _eko_pv "wmctrl command (move):" \""$_COMMAND\""

  # - move window if possible
  $_COMMAND

  if $_BOOLEAN_RAISE
  then
    # - next: the command to explicitly raise & give focus to the window
    # - "-i -a" order is important
    # - don't use "-R". it causes the window to become "unsticky"
    _COMMAND="$_BINARY_WMCTRL -i -a $_OPTION_WINDOW_ID"

    _eko_pv "wmctrl command (raise):" \""$_COMMAND\""

    # - raise/focus window if possible
    $_COMMAND
  fi

  _eko_iod "#- _set_window_position -#"
}

function _show_error()
{
  _eko_iod "#+ _show_error +#"

  # functions:
  # _eko_iod

  # variables:
  # @

  # binaries:
  # (none)

  # builtins:
  # echo

  # - output to stderr, not stdout
  # - be explicit for clarity
  echo "Error: $@" 1>&2

  _eko_iod "#- _show_error -#"

  exit 1
}

function _show_help()
{
  _eko_iod "#+ _show_help +#"

  # functions:
  # _eko_iod

  # variables:
  # (none)

  # binaries:
  # (none)

  # builtins:
  # echo

  echo "Provide at least 1 parameter: <Window Coordinates> [OPTION] [[OPTION]]

Mandatory parameter (Window Coordinates):
  -c, --coordinates ul|uc|ur   Upper/Left   Upper/Center   Upper/Right
  -c, --coordinates ml|mc|mr  Middle/Left  Middle/Center  Middle/Right
  -c, --coordinates bl|bc|br  Bottom/Left  Bottom/Center  Bottom/Right
  -c, --coordinates same      Do not change coordinates (for use with --raise)
  -c, --coordinates X,Y       User specified X,Y coordinates

Optional parameters:
  -D, --dry-run    Perform a trial run of the specified action
  -f, --force      Force windows to be least partially on the desktop
  -id <Window ID>  Window ID (in hexadecimal format)
  -o, --overall    Use overall desktop X,Y for window placement calculations
  -r, --raise      Raise window & give it focus
  -d, --debug      Display debugging information (function names/entry/exit)
  -v, --verbose    Display verbose information (variable names/contents)
  -?, -h, --help   Display this help text, useful as it is

Note:
  If an option is specified multiple times, the last invocation is used
  If coordinates are not specified default to \"--coordinates same\""

  _eko_iod "#- _show_help -#"

  exit 0
}

function _window_id_acquire()
{
  _eko_iod "#+ _window_id_acquire +#"

  # functions:
  # _eko_iod
  # _eko_ps
  # _eko_ps_en
  # _eko_pv
  # _eko_pv_en

  # variables:
  # _OPTION_WINDOW_ID
  # _OUTPUT_XPROP_ID
  # _OUTPUT_XWININFO_ID

  # binaries:
  # sed
  # xprop
  # xwininfo

  # builtins:
  # echo

  _eko_ps_en "Select the window to move:" ""
  _eko_pv_en "select the window to move:" ""

  # - acquire Window ID via point'n'click
  _OUTPUT_XWININFO_ID=$(xwininfo)

  _eko_ps "" ""
  _eko_pv "" ""

  _OPTION_WINDOW_ID=$(echo $_OUTPUT_XWININFO_ID | sed --expression='/.*Window id:/!d ; s/\(.*id: \)\|\( .*\)//g')

  _OUTPUT_XPROP_ID=$(xprop -id $_OPTION_WINDOW_ID)

  _eko_pv \$_OPTION_WINDOW_ID: \""$_OPTION_WINDOW_ID\""

  _eko_iod "#- _window_id_acquire -#"
}

#- function definitions here -#

#+ start here +#

# functions:
# _parse_parameters

# variables:
# @
# _BINARY_WMCTRL

# binaries:
# (none)

# builtins:
# echo

_parse_parameters "$@"

if [[ $_BINARY_WMCTRL == false ]]
then
  echo "binary \"wmctrl\" not found, faked it with \"false\" instead"
fi

#- start here -#

#- marker eof -#
exit 0
